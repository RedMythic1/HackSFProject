{"title": "Understanding Memory Management, Part 5: Fighting with Rust", "summary": "Understanding Memory Management, Part 5: Fighting with Rust\n\nThe text discusses memory management in Rust, specifically the use of smart pointers and the need to explicitly provide references when calling methods. The author explains that Rust's syntax sugar for creating iterators can cause issues when calling methods that take a self parameter, as the compiler needs to know which version of the method to choose. The author also discusses the impact of method calls and the need to avoid double borrowing when providing references to arguments. The text provides examples of how to fix these issues and avoid memory errors in Rust programs.", "timestamp": 1746503685.951624}