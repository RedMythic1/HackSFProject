{"title": "An appeal to Apple from Anukari", "summary": "An appeal to Apple from Anukari\n\nThe author, Anukari, is a 3D physics synthesizer that runs as an AudioUnit or VST3 plugin inside a host application like Pro Tools or Ableton. It requires a GPU for the simulation and the physics code is ALU-bound, not memory-bound. The typical use-case for Anukari is running it as an AudioUnit or VST3 plugin inside a host application like Pro Tools or Ableton, also called a Digital Audio Workstation (DAW). The DAW invokes Anukari for each audio buffer block, which is a request to generate/process N samples of audio. For each block, Anukari invokes the physics simulation GPU kernel, waits for the result, and returns. The audio buffer block system is important because GPU kernel scheduling has a certain amount of latency overhead, and for real-time audio we have fixed time constraints. By amortizing the GPU scheduling latency over, say, 512 audio samples, it becomes negligible. But the runtime of the kernel itself is still very important. Apple's macOS is obviously extremely clever about power management, and Apple silicon hardware is built to support the OS in achieving high power efficiency. As with all modern hardware, the clock rate for Apple silicon chips can be slowed down to reduce power consumption. When the OS detects that the processing demand for a given chip is low (or non-existent), it can decrease the clock rate for that chip. However, due to the way Anukari runs inside a DAW and interacts with the GPU, the heuristics that macOS uses to determine whether there is sufficient demand upon the GPU to increase its clock rate do not work. This is terrible for Anukari, because to meet real-time constraints, it needs the absolute lowest latency possible, which requires the highest GPU clock rate. The author is requesting to talk to someone on the Apple Metal team to address this issue.", "timestamp": 1746575216.9185479}