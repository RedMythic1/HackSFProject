{"version":3,"file":"backtesting.bundle.js","mappings":"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","sources":["webpack://typescript-webpage/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://typescript-webpage/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://typescript-webpage/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://typescript-webpage/./src/style.css","webpack://typescript-webpage/./node_modules/css-loader/dist/runtime/api.js","webpack://typescript-webpage/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://typescript-webpage/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://typescript-webpage/./src/backtesting.css","webpack://typescript-webpage/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://typescript-webpage/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://typescript-webpage/webpack/bootstrap","webpack://typescript-webpage/webpack/runtime/compat get default export","webpack://typescript-webpage/webpack/runtime/define property getters","webpack://typescript-webpage/webpack/runtime/hasOwnProperty shorthand","webpack://typescript-webpage/webpack/runtime/nonce","webpack://typescript-webpage/./src/style.css?7163","webpack://typescript-webpage/./src/backtesting.css?0c07","webpack://typescript-webpage/./node_modules/@kurkle/color/dist/color.esm.js","webpack://typescript-webpage/./node_modules/chart.js/dist/chunks/helpers.dataset.js","webpack://typescript-webpage/./node_modules/chart.js/dist/chart.js","webpack://typescript-webpage/./node_modules/chart.js/auto/auto.js","webpack://typescript-webpage/./src/backtesting.ts"],"sourcesContent":["\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body {\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\\n  margin: 0;\\n  padding: 0;\\n  background-color: #f5f7fa;\\n  color: #333;\\n  line-height: 1.5;\\n}\\n\\n.container {\\n  max-width: 1200px;\\n  margin: 0 auto;\\n  padding: 20px;\\n}\\n\\nheader {\\n  background-color: #fff;\\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\\n  padding: 20px 0;\\n  margin-bottom: 30px;\\n}\\n\\nh1 {\\n  text-align: center;\\n  color: #2c3e50;\\n  margin: 0;\\n  padding: 0;\\n  font-size: 2.2rem;\\n}\\n\\n.interests-form {\\n  display: flex;\\n  justify-content: center;\\n  margin: 30px auto;\\n  max-width: 600px;\\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\\n  border-radius: 8px;\\n  overflow: hidden;\\n  background: white;\\n}\\n\\n#interests-input {\\n  flex-grow: 1;\\n  padding: 15px;\\n  border: none;\\n  font-size: 16px;\\n  outline: none;\\n}\\n\\n#submit-interests {\\n  padding: 15px 25px;\\n  background-color: #3498db;\\n  color: white;\\n  border: none;\\n  cursor: pointer;\\n  font-weight: 600;\\n  font-size: 16px;\\n  transition: background-color 0.2s;\\n}\\n\\n#submit-interests:hover {\\n  background-color: #2980b9;\\n}\\n\\n.articles-container {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\\n  gap: 25px;\\n  margin-top: 20px;\\n}\\n\\n.article-count {\\n  grid-column: 1 / -1;\\n  padding: 10px 15px;\\n  background-color: #e8f4fd;\\n  border-radius: 6px;\\n  font-size: 14px;\\n  color: #2c3e50;\\n  margin-bottom: 15px;\\n}\\n\\n.article-card {\\n  background-color: white;\\n  border-radius: 10px;\\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.07);\\n  overflow: hidden;\\n  position: relative;\\n  transition: transform 0.2s, box-shadow 0.2s;\\n  display: flex;\\n  flex-direction: column;\\n  cursor: pointer;\\n}\\n\\n.article-card:hover {\\n  transform: translateY(-5px);\\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\\n}\\n\\n.article-card.expanded .article-summary {\\n  max-height: 1000px;\\n  overflow: visible;\\n}\\n\\n.score-badge {\\n  position: absolute;\\n  top: 15px;\\n  right: 15px;\\n  width: 36px;\\n  height: 36px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  border-radius: 50%;\\n  font-weight: bold;\\n  color: white;\\n  font-size: 14px;\\n}\\n\\n.high-score {\\n  background-color: #4CAF50;\\n}\\n\\n.medium-score {\\n  background-color: #2196F3;\\n}\\n\\n.low-score {\\n  background-color: #FF9800;\\n}\\n\\n.no-score {\\n  background-color: #9E9E9E;\\n}\\n\\n.article-title {\\n  padding: 20px 20px 5px;\\n  margin: 0;\\n  font-size: 18px;\\n  padding-right: 50px; /* Space for score badge */\\n  color: #2c3e50;\\n}\\n\\n.article-subject {\\n  padding: 0 20px 10px;\\n  font-size: 14px;\\n  color: #7f8c8d;\\n}\\n\\n.article-summary {\\n  padding: 0 20px 15px;\\n  font-size: 14px;\\n  color: #555;\\n  max-height: 100px;\\n  overflow: hidden;\\n  transition: max-height 0.3s;\\n}\\n\\n.score-details {\\n  display: none;\\n  padding: 0 20px;\\n  background-color: #f9f9f9;\\n  border-top: 1px solid #eee;\\n  border-bottom: 1px solid #eee;\\n  margin: 10px 0;\\n}\\n\\n.score-details.visible {\\n  display: block;\\n}\\n\\n.score-details ul {\\n  list-style: none;\\n  padding: 10px 0;\\n  margin: 0;\\n}\\n\\n.score-details li {\\n  font-size: 13px;\\n  padding: 3px 0;\\n}\\n\\n.score-details-btn, .view-article-btn {\\n  background: none;\\n  border: none;\\n  color: #3498db;\\n  cursor: pointer;\\n  padding: 8px 15px;\\n  font-size: 13px;\\n  margin: 5px;\\n  transition: color 0.2s;\\n}\\n\\n.score-details-btn:hover, .view-article-btn:hover {\\n  color: #2980b9;\\n}\\n\\n.view-article-btn {\\n  margin-top: auto;\\n  align-self: center;\\n  margin-bottom: 15px;\\n  background-color: #3498db;\\n  color: white;\\n  border-radius: 4px;\\n  padding: 10px 20px;\\n  font-weight: 500;\\n}\\n\\n.view-article-btn:hover {\\n  background-color: #2980b9;\\n  color: white;\\n}\\n\\n.article-detail {\\n  background-color: white;\\n  border-radius: 10px;\\n  box-shadow: 0 3px 15px rgba(0, 0, 0, 0.1);\\n  padding: 30px;\\n  margin: 20px 0;\\n}\\n\\n.article-detail h2 {\\n  margin-top: 0;\\n  color: #2c3e50;\\n}\\n\\n.article-detail .article-link {\\n  display: inline-block;\\n  margin: 15px 0;\\n  text-decoration: none;\\n  color: #3498db;\\n}\\n\\n.article-detail .article-content {\\n  margin-top: 20px;\\n  line-height: 1.7;\\n}\\n\\n.no-results {\\n  grid-column: 1 / -1;\\n  text-align: center;\\n  padding: 50px;\\n  background-color: white;\\n  border-radius: 10px;\\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.07);\\n  color: #7f8c8d;\\n}\\n\\n@media (max-width: 768px) {\\n  .interests-form {\\n    flex-direction: column;\\n    max-width: 95%;\\n  }\\n  \\n  #interests-input, #submit-interests {\\n    width: 100%;\\n  }\\n  \\n  .articles-container {\\n    grid-template-columns: 1fr;\\n  }\\n}\\n\\nh2.section-title {\\n  text-align: center;\\n  margin: 30px 0;\\n  color: #2c3e50;\\n  font-size: 1.8rem;\\n}\\n\\n/* Loading indicator */\\n.loading {\\n  text-align: center;\\n  padding: 30px;\\n  color: #7f8c8d;\\n}\\n\\n/* Navigation buttons - removed from here since we defined them in backtesting.css */ \", \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"body {\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\\n  margin: 0;\\n  padding: 0;\\n  background-color: #f5f7fa;\\n  color: #333;\\n  line-height: 1.5;\\n}\\n\\n.container {\\n  max-width: 1200px;\\n  margin: 0 auto;\\n  padding: 20px;\\n}\\n\\nheader {\\n  background-color: #fff;\\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\\n  padding: 20px 0;\\n  margin-bottom: 30px;\\n}\\n\\nh1 {\\n  text-align: center;\\n  color: #2c3e50;\\n  margin: 0;\\n  padding: 0;\\n  font-size: 2.2rem;\\n}\\n\\n.interests-form {\\n  display: flex;\\n  justify-content: center;\\n  margin: 30px auto;\\n  max-width: 600px;\\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\\n  border-radius: 8px;\\n  overflow: hidden;\\n  background: white;\\n}\\n\\n#interests-input {\\n  flex-grow: 1;\\n  padding: 15px;\\n  border: none;\\n  font-size: 16px;\\n  outline: none;\\n}\\n\\n#submit-interests {\\n  padding: 15px 25px;\\n  background-color: #3498db;\\n  color: white;\\n  border: none;\\n  cursor: pointer;\\n  font-weight: 600;\\n  font-size: 16px;\\n  transition: background-color 0.2s;\\n}\\n\\n#submit-interests:hover {\\n  background-color: #2980b9;\\n}\\n\\n.articles-container {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\\n  gap: 25px;\\n  margin-top: 20px;\\n}\\n\\n.article-count {\\n  grid-column: 1 / -1;\\n  padding: 10px 15px;\\n  background-color: #e8f4fd;\\n  border-radius: 6px;\\n  font-size: 14px;\\n  color: #2c3e50;\\n  margin-bottom: 15px;\\n}\\n\\n.article-card {\\n  background-color: white;\\n  border-radius: 10px;\\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.07);\\n  overflow: hidden;\\n  position: relative;\\n  transition: transform 0.2s, box-shadow 0.2s;\\n  display: flex;\\n  flex-direction: column;\\n  cursor: pointer;\\n}\\n\\n.article-card:hover {\\n  transform: translateY(-5px);\\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\\n}\\n\\n.article-card.expanded .article-summary {\\n  max-height: 1000px;\\n  overflow: visible;\\n}\\n\\n.score-badge {\\n  position: absolute;\\n  top: 15px;\\n  right: 15px;\\n  width: 36px;\\n  height: 36px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  border-radius: 50%;\\n  font-weight: bold;\\n  color: white;\\n  font-size: 14px;\\n}\\n\\n.high-score {\\n  background-color: #4CAF50;\\n}\\n\\n.medium-score {\\n  background-color: #2196F3;\\n}\\n\\n.low-score {\\n  background-color: #FF9800;\\n}\\n\\n.no-score {\\n  background-color: #9E9E9E;\\n}\\n\\n.article-title {\\n  padding: 20px 20px 5px;\\n  margin: 0;\\n  font-size: 18px;\\n  padding-right: 50px; /* Space for score badge */\\n  color: #2c3e50;\\n}\\n\\n.article-subject {\\n  padding: 0 20px 10px;\\n  font-size: 14px;\\n  color: #7f8c8d;\\n}\\n\\n.article-summary {\\n  padding: 0 20px 15px;\\n  font-size: 14px;\\n  color: #555;\\n  max-height: 100px;\\n  overflow: hidden;\\n  transition: max-height 0.3s;\\n}\\n\\n.score-details {\\n  display: none;\\n  padding: 0 20px;\\n  background-color: #f9f9f9;\\n  border-top: 1px solid #eee;\\n  border-bottom: 1px solid #eee;\\n  margin: 10px 0;\\n}\\n\\n.score-details.visible {\\n  display: block;\\n}\\n\\n.score-details ul {\\n  list-style: none;\\n  padding: 10px 0;\\n  margin: 0;\\n}\\n\\n.score-details li {\\n  font-size: 13px;\\n  padding: 3px 0;\\n}\\n\\n.score-details-btn, .view-article-btn {\\n  background: none;\\n  border: none;\\n  color: #3498db;\\n  cursor: pointer;\\n  padding: 8px 15px;\\n  font-size: 13px;\\n  margin: 5px;\\n  transition: color 0.2s;\\n}\\n\\n.score-details-btn:hover, .view-article-btn:hover {\\n  color: #2980b9;\\n}\\n\\n.view-article-btn {\\n  margin-top: auto;\\n  align-self: center;\\n  margin-bottom: 15px;\\n  background-color: #3498db;\\n  color: white;\\n  border-radius: 4px;\\n  padding: 10px 20px;\\n  font-weight: 500;\\n}\\n\\n.view-article-btn:hover {\\n  background-color: #2980b9;\\n  color: white;\\n}\\n\\n.article-detail {\\n  background-color: white;\\n  border-radius: 10px;\\n  box-shadow: 0 3px 15px rgba(0, 0, 0, 0.1);\\n  padding: 30px;\\n  margin: 20px 0;\\n}\\n\\n.article-detail h2 {\\n  margin-top: 0;\\n  color: #2c3e50;\\n}\\n\\n.article-detail .article-link {\\n  display: inline-block;\\n  margin: 15px 0;\\n  text-decoration: none;\\n  color: #3498db;\\n}\\n\\n.article-detail .article-content {\\n  margin-top: 20px;\\n  line-height: 1.7;\\n}\\n\\n.no-results {\\n  grid-column: 1 / -1;\\n  text-align: center;\\n  padding: 50px;\\n  background-color: white;\\n  border-radius: 10px;\\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.07);\\n  color: #7f8c8d;\\n}\\n\\n@media (max-width: 768px) {\\n  .interests-form {\\n    flex-direction: column;\\n    max-width: 95%;\\n  }\\n  \\n  #interests-input, #submit-interests {\\n    width: 100%;\\n  }\\n  \\n  .articles-container {\\n    grid-template-columns: 1fr;\\n  }\\n}\\n\\nh2.section-title {\\n  text-align: center;\\n  margin: 30px 0;\\n  color: #2c3e50;\\n  font-size: 1.8rem;\\n}\\n\\n/* Loading indicator */\\n.loading {\\n  text-align: center;\\n  padding: 30px;\\n  color: #7f8c8d;\\n}\\n\\n/* Navigation buttons - removed from here since we defined them in backtesting.css */ \"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* Backtesting specific styles */\\n\\n/* Container for overall page */\\n.container {\\n  max-width: 1200px;\\n  margin: 0 auto;\\n  padding: 20px;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n\\n/* Common layout and centering */\\n.centered-header {\\n  text-align: center;\\n  background: linear-gradient(135deg, #3498db, #2c3e50);\\n  color: white;\\n  padding: 40px 0;\\n  border-radius: 10px;\\n  margin-bottom: 40px;\\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);\\n  width: 100%;\\n}\\n\\n.centered-header h1 {\\n  color: white;\\n  font-size: 2.8rem;\\n  margin-bottom: 20px;\\n  font-weight: 700;\\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\\n}\\n\\n.centered-content {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  width: 100%;\\n}\\n\\n.centered-footer {\\n  text-align: center;\\n  margin-top: 40px;\\n  padding: 20px 0;\\n  color: #7f8c8d;\\n  border-top: 1px solid #eaeaea;\\n  width: 100%;\\n}\\n\\n/* Navigation styling */\\n.main-nav {\\n  margin-top: 25px;\\n  display: flex;\\n  justify-content: center;\\n  gap: 15px;\\n}\\n\\n.nav-button {\\n  padding: 10px 25px;\\n  border-radius: 30px;\\n  font-weight: 600;\\n  font-size: 16px;\\n  transition: all 0.3s ease;\\n  border: 2px solid rgba(255, 255, 255, 0.3);\\n  background-color: rgba(255, 255, 255, 0.1);\\n  color: white;\\n  text-decoration: none;\\n}\\n\\n.nav-button:hover {\\n  background-color: rgba(255, 255, 255, 0.2);\\n  transform: translateY(-3px);\\n}\\n\\n.nav-button.active {\\n  background-color: white;\\n  color: #3498db;\\n  border-color: white;\\n}\\n\\n/* Strategy form styling */\\n.strategy-form-section {\\n  background-color: white;\\n  border-radius: 15px;\\n  padding: 35px;\\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\\n  margin-bottom: 40px;\\n  max-width: 800px;\\n  width: 100%;\\n}\\n\\n.strategy-form-section h2 {\\n  color: #2c3e50;\\n  margin-top: 0;\\n  margin-bottom: 15px;\\n  font-size: 2rem;\\n  text-align: center;\\n}\\n\\n.strategy-form-section p {\\n  color: #7f8c8d;\\n  margin-bottom: 25px;\\n  text-align: center;\\n  font-size: 1.1rem;\\n  line-height: 1.6;\\n}\\n\\n.strategy-form {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 20px;\\n  align-items: center;\\n}\\n\\n#strategy-input {\\n  width: 100%;\\n  padding: 20px;\\n  border: 1px solid #e0e6ed;\\n  border-radius: 12px;\\n  font-family: inherit;\\n  font-size: 16px;\\n  line-height: 1.6;\\n  resize: vertical;\\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);\\n  transition: border-color 0.3s, box-shadow 0.3s;\\n}\\n\\n#strategy-input:focus {\\n  border-color: #3498db;\\n  box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.25);\\n  outline: none;\\n}\\n\\n.primary-button {\\n  margin-top: 10px;\\n  align-self: center;\\n  padding: 15px 40px;\\n  font-size: 18px;\\n  font-weight: 600;\\n  background: linear-gradient(135deg, #3498db, #2980b9);\\n  color: white;\\n  border: none;\\n  border-radius: 30px;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n  box-shadow: 0 4px 10px rgba(52, 152, 219, 0.3);\\n}\\n\\n.primary-button:hover {\\n  transform: translateY(-3px);\\n  box-shadow: 0 6px 15px rgba(52, 152, 219, 0.4);\\n}\\n\\n.primary-button:active {\\n  transform: translateY(-1px);\\n}\\n\\n.primary-button.disabled {\\n  background: linear-gradient(135deg, #a2c3e0, #7b9bbd);\\n  cursor: not-allowed;\\n  transform: none;\\n  box-shadow: 0 2px 5px rgba(52, 152, 219, 0.2);\\n  opacity: 0.7;\\n}\\n\\n/* Results section styling */\\n.results-section {\\n  width: 100%;\\n  max-width: 1000px;\\n}\\n\\n#loading-indicator {\\n  text-align: center;\\n  padding: 50px;\\n  background-color: white;\\n  border-radius: 15px;\\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\\n}\\n\\n#loading-indicator p {\\n  color: #2c3e50;\\n  font-size: 1.2rem;\\n  margin-bottom: 20px;\\n}\\n\\n.spinner {\\n  border: 5px solid rgba(0, 0, 0, 0.1);\\n  border-left-color: #3498db;\\n  border-radius: 50%;\\n  width: 50px;\\n  height: 50px;\\n  animation: spin 1s linear infinite;\\n  margin: 20px auto;\\n}\\n\\n@keyframes spin {\\n  to { transform: rotate(360deg); }\\n}\\n\\n#results-container h2 {\\n  color: #2c3e50;\\n  margin-top: 0;\\n  margin-bottom: 25px;\\n  font-size: 2rem;\\n  text-align: center;\\n}\\n\\n.results-summary {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\\n  gap: 25px;\\n  margin-bottom: 40px;\\n}\\n\\n.result-card {\\n  background-color: white;\\n  border-radius: 15px;\\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\\n  padding: 25px;\\n  text-align: center;\\n  transition: transform 0.3s;\\n}\\n\\n.result-card:hover {\\n  transform: translateY(-5px);\\n}\\n\\n.result-card h3 {\\n  margin-top: 0;\\n  color: #7f8c8d;\\n  font-size: 1rem;\\n  font-weight: 600;\\n  text-transform: uppercase;\\n  letter-spacing: 0.5px;\\n  margin-bottom: 15px;\\n}\\n\\n.result-value {\\n  font-size: 2rem;\\n  font-weight: 700;\\n  color: #2c3e50;\\n}\\n\\n.result-value.positive {\\n  color: #27ae60;\\n}\\n\\n.result-value.negative {\\n  color: #e74c3c;\\n}\\n\\n.chart-container {\\n  background-color: white;\\n  border-radius: 15px;\\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\\n  padding: 35px;\\n  margin-bottom: 40px;\\n  width: 100%;\\n  text-align: center;\\n}\\n\\n.chart-container h3 {\\n  margin-top: 0;\\n  color: #2c3e50;\\n  margin-bottom: 25px;\\n  text-align: center;\\n  font-size: 1.4rem;\\n}\\n\\n#chart-area {\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  gap: 20px;\\n  margin-top: 20px;\\n}\\n\\n.price-chart-container, .balance-chart-container {\\n  width: 100%;\\n  height: 300px;\\n  background-color: #f8f9fa;\\n  border-radius: 10px;\\n  padding: 15px;\\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\\n}\\n\\ncanvas {\\n  width: 100% !important;\\n  height: 100% !important;\\n}\\n\\n.code-container {\\n  background-color: white;\\n  border-radius: 15px;\\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\\n  padding: 35px;\\n  margin-bottom: 40px;\\n  width: 100%;\\n}\\n\\n.code-container h3 {\\n  margin-top: 0;\\n  color: #2c3e50;\\n  margin-bottom: 25px;\\n  text-align: center;\\n  font-size: 1.4rem;\\n}\\n\\n.code-block {\\n  background-color: #f8f9fa;\\n  border-radius: 12px;\\n  padding: 25px;\\n  overflow-x: auto;\\n  font-family: 'Courier New', monospace;\\n  font-size: 15px;\\n  line-height: 1.6;\\n  white-space: pre-wrap;\\n  border: 1px solid #eee;\\n  box-shadow: inset 0 1px 5px rgba(0, 0, 0, 0.05);\\n}\\n\\n/* Error message styling */\\n.error-message {\\n  background-color: #f8d7da;\\n  color: #721c24;\\n  padding: 15px;\\n  border-radius: 8px;\\n  margin-bottom: 20px;\\n  text-align: center;\\n}\\n\\n.retry-button {\\n  padding: 10px 25px;\\n  background-color: #3498db;\\n  color: white;\\n  border: none;\\n  border-radius: 25px;\\n  cursor: pointer;\\n  font-weight: 600;\\n  display: block;\\n  margin: 20px auto;\\n}\\n\\n/* Responsive tweaks */\\n@media (max-width: 768px) {\\n  .container {\\n    padding: 10px;\\n  }\\n  \\n  .centered-header {\\n    padding: 30px 20px;\\n  }\\n\\n  .centered-header h1 {\\n    font-size: 2.2rem;\\n  }\\n\\n  .results-summary {\\n    grid-template-columns: 1fr;\\n  }\\n  \\n  .strategy-form-section,\\n  .chart-container,\\n  .code-container {\\n    padding: 25px;\\n  }\\n\\n  .primary-button {\\n    padding: 12px 30px;\\n    font-size: 16px;\\n  }\\n} \", \"\",{\"version\":3,\"sources\":[\"webpack://./src/backtesting.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/* Backtesting specific styles */\\n\\n/* Container for overall page */\\n.container {\\n  max-width: 1200px;\\n  margin: 0 auto;\\n  padding: 20px;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n\\n/* Common layout and centering */\\n.centered-header {\\n  text-align: center;\\n  background: linear-gradient(135deg, #3498db, #2c3e50);\\n  color: white;\\n  padding: 40px 0;\\n  border-radius: 10px;\\n  margin-bottom: 40px;\\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);\\n  width: 100%;\\n}\\n\\n.centered-header h1 {\\n  color: white;\\n  font-size: 2.8rem;\\n  margin-bottom: 20px;\\n  font-weight: 700;\\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\\n}\\n\\n.centered-content {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  width: 100%;\\n}\\n\\n.centered-footer {\\n  text-align: center;\\n  margin-top: 40px;\\n  padding: 20px 0;\\n  color: #7f8c8d;\\n  border-top: 1px solid #eaeaea;\\n  width: 100%;\\n}\\n\\n/* Navigation styling */\\n.main-nav {\\n  margin-top: 25px;\\n  display: flex;\\n  justify-content: center;\\n  gap: 15px;\\n}\\n\\n.nav-button {\\n  padding: 10px 25px;\\n  border-radius: 30px;\\n  font-weight: 600;\\n  font-size: 16px;\\n  transition: all 0.3s ease;\\n  border: 2px solid rgba(255, 255, 255, 0.3);\\n  background-color: rgba(255, 255, 255, 0.1);\\n  color: white;\\n  text-decoration: none;\\n}\\n\\n.nav-button:hover {\\n  background-color: rgba(255, 255, 255, 0.2);\\n  transform: translateY(-3px);\\n}\\n\\n.nav-button.active {\\n  background-color: white;\\n  color: #3498db;\\n  border-color: white;\\n}\\n\\n/* Strategy form styling */\\n.strategy-form-section {\\n  background-color: white;\\n  border-radius: 15px;\\n  padding: 35px;\\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\\n  margin-bottom: 40px;\\n  max-width: 800px;\\n  width: 100%;\\n}\\n\\n.strategy-form-section h2 {\\n  color: #2c3e50;\\n  margin-top: 0;\\n  margin-bottom: 15px;\\n  font-size: 2rem;\\n  text-align: center;\\n}\\n\\n.strategy-form-section p {\\n  color: #7f8c8d;\\n  margin-bottom: 25px;\\n  text-align: center;\\n  font-size: 1.1rem;\\n  line-height: 1.6;\\n}\\n\\n.strategy-form {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 20px;\\n  align-items: center;\\n}\\n\\n#strategy-input {\\n  width: 100%;\\n  padding: 20px;\\n  border: 1px solid #e0e6ed;\\n  border-radius: 12px;\\n  font-family: inherit;\\n  font-size: 16px;\\n  line-height: 1.6;\\n  resize: vertical;\\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);\\n  transition: border-color 0.3s, box-shadow 0.3s;\\n}\\n\\n#strategy-input:focus {\\n  border-color: #3498db;\\n  box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.25);\\n  outline: none;\\n}\\n\\n.primary-button {\\n  margin-top: 10px;\\n  align-self: center;\\n  padding: 15px 40px;\\n  font-size: 18px;\\n  font-weight: 600;\\n  background: linear-gradient(135deg, #3498db, #2980b9);\\n  color: white;\\n  border: none;\\n  border-radius: 30px;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n  box-shadow: 0 4px 10px rgba(52, 152, 219, 0.3);\\n}\\n\\n.primary-button:hover {\\n  transform: translateY(-3px);\\n  box-shadow: 0 6px 15px rgba(52, 152, 219, 0.4);\\n}\\n\\n.primary-button:active {\\n  transform: translateY(-1px);\\n}\\n\\n.primary-button.disabled {\\n  background: linear-gradient(135deg, #a2c3e0, #7b9bbd);\\n  cursor: not-allowed;\\n  transform: none;\\n  box-shadow: 0 2px 5px rgba(52, 152, 219, 0.2);\\n  opacity: 0.7;\\n}\\n\\n/* Results section styling */\\n.results-section {\\n  width: 100%;\\n  max-width: 1000px;\\n}\\n\\n#loading-indicator {\\n  text-align: center;\\n  padding: 50px;\\n  background-color: white;\\n  border-radius: 15px;\\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\\n}\\n\\n#loading-indicator p {\\n  color: #2c3e50;\\n  font-size: 1.2rem;\\n  margin-bottom: 20px;\\n}\\n\\n.spinner {\\n  border: 5px solid rgba(0, 0, 0, 0.1);\\n  border-left-color: #3498db;\\n  border-radius: 50%;\\n  width: 50px;\\n  height: 50px;\\n  animation: spin 1s linear infinite;\\n  margin: 20px auto;\\n}\\n\\n@keyframes spin {\\n  to { transform: rotate(360deg); }\\n}\\n\\n#results-container h2 {\\n  color: #2c3e50;\\n  margin-top: 0;\\n  margin-bottom: 25px;\\n  font-size: 2rem;\\n  text-align: center;\\n}\\n\\n.results-summary {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\\n  gap: 25px;\\n  margin-bottom: 40px;\\n}\\n\\n.result-card {\\n  background-color: white;\\n  border-radius: 15px;\\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\\n  padding: 25px;\\n  text-align: center;\\n  transition: transform 0.3s;\\n}\\n\\n.result-card:hover {\\n  transform: translateY(-5px);\\n}\\n\\n.result-card h3 {\\n  margin-top: 0;\\n  color: #7f8c8d;\\n  font-size: 1rem;\\n  font-weight: 600;\\n  text-transform: uppercase;\\n  letter-spacing: 0.5px;\\n  margin-bottom: 15px;\\n}\\n\\n.result-value {\\n  font-size: 2rem;\\n  font-weight: 700;\\n  color: #2c3e50;\\n}\\n\\n.result-value.positive {\\n  color: #27ae60;\\n}\\n\\n.result-value.negative {\\n  color: #e74c3c;\\n}\\n\\n.chart-container {\\n  background-color: white;\\n  border-radius: 15px;\\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\\n  padding: 35px;\\n  margin-bottom: 40px;\\n  width: 100%;\\n  text-align: center;\\n}\\n\\n.chart-container h3 {\\n  margin-top: 0;\\n  color: #2c3e50;\\n  margin-bottom: 25px;\\n  text-align: center;\\n  font-size: 1.4rem;\\n}\\n\\n#chart-area {\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  gap: 20px;\\n  margin-top: 20px;\\n}\\n\\n.price-chart-container, .balance-chart-container {\\n  width: 100%;\\n  height: 300px;\\n  background-color: #f8f9fa;\\n  border-radius: 10px;\\n  padding: 15px;\\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\\n}\\n\\ncanvas {\\n  width: 100% !important;\\n  height: 100% !important;\\n}\\n\\n.code-container {\\n  background-color: white;\\n  border-radius: 15px;\\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\\n  padding: 35px;\\n  margin-bottom: 40px;\\n  width: 100%;\\n}\\n\\n.code-container h3 {\\n  margin-top: 0;\\n  color: #2c3e50;\\n  margin-bottom: 25px;\\n  text-align: center;\\n  font-size: 1.4rem;\\n}\\n\\n.code-block {\\n  background-color: #f8f9fa;\\n  border-radius: 12px;\\n  padding: 25px;\\n  overflow-x: auto;\\n  font-family: 'Courier New', monospace;\\n  font-size: 15px;\\n  line-height: 1.6;\\n  white-space: pre-wrap;\\n  border: 1px solid #eee;\\n  box-shadow: inset 0 1px 5px rgba(0, 0, 0, 0.05);\\n}\\n\\n/* Error message styling */\\n.error-message {\\n  background-color: #f8d7da;\\n  color: #721c24;\\n  padding: 15px;\\n  border-radius: 8px;\\n  margin-bottom: 20px;\\n  text-align: center;\\n}\\n\\n.retry-button {\\n  padding: 10px 25px;\\n  background-color: #3498db;\\n  color: white;\\n  border: none;\\n  border-radius: 25px;\\n  cursor: pointer;\\n  font-weight: 600;\\n  display: block;\\n  margin: 20px auto;\\n}\\n\\n/* Responsive tweaks */\\n@media (max-width: 768px) {\\n  .container {\\n    padding: 10px;\\n  }\\n  \\n  .centered-header {\\n    padding: 30px 20px;\\n  }\\n\\n  .centered-header h1 {\\n    font-size: 2.2rem;\\n  }\\n\\n  .results-summary {\\n    grid-template-columns: 1fr;\\n  }\\n  \\n  .strategy-form-section,\\n  .chart-container,\\n  .code-container {\\n    padding: 25px;\\n  }\\n\\n  .primary-button {\\n    padding: 12px 30px;\\n    font-size: 16px;\\n  }\\n} \"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.nc = undefined;","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./backtesting.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./backtesting.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.9\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","/*!\n * Chart.js v4.4.9\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.9\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property,\n            clip\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import './style.css';\nimport './backtesting.css';\nimport Chart from 'chart.js/auto';\n\n// Function to log messages from the frontend\nfunction logFrontend(message: string, data?: any) {\n    console.log(`[FRONTEND] ${message}`, data !== undefined ? data : '');\n}\n\ninterface BacktestResult {\n    status: string;\n    profit_loss?: number;\n    profit?: number; // Alternative field name used by Node backend\n    buy_points?: Array<[number, number]>;\n    sell_points?: Array<[number, number]>;\n    balance_over_time?: number[];\n    balance_history?: number[]; // Alternative field name used by Node backend\n    generated_code?: string;\n    code?: string; // Alternative field used by Node backend\n    chart_url?: string;\n    image?: string; // Alternative field used by Node backend\n    trades?: {\n        count: number;\n        buys: Array<[number, number]>;\n        sells: Array<[number, number]>;\n    };\n    error?: string;\n    close?: number[]; // Added to receive price data\n    dates?: string[]; // Optional date labels\n}\n\nclass BacktestingController {\n    private strategyInput: HTMLTextAreaElement | null;\n    private runBacktestBtn: HTMLElement | null;\n    private loadingIndicator: HTMLElement | null;\n    private resultsContainer: HTMLElement | null;\n    private profitLossValue: HTMLElement | null;\n    private tradesCount: HTMLElement | null;\n    private successRate: HTMLElement | null;\n    private generatedCode: HTMLElement | null;\n    private priceChart: Chart | null = null;\n    private balanceChart: Chart | null = null;\n    \n    constructor() {\n        logFrontend('BacktestingController constructor started');\n        this.initElements();\n        this.initEventListeners();\n        this.initWebSocket();\n        logFrontend('BacktestingController constructor finished');\n    }\n    \n    private initElements(): void {\n        logFrontend('initElements started');\n        this.strategyInput = document.getElementById('strategy-input') as HTMLTextAreaElement;\n        this.runBacktestBtn = document.getElementById('run-backtest-btn');\n        this.loadingIndicator = document.getElementById('loading-indicator');\n        this.resultsContainer = document.getElementById('results-container');\n        this.profitLossValue = document.getElementById('profit-loss-value');\n        this.tradesCount = document.getElementById('trades-count');\n        this.successRate = document.getElementById('success-rate');\n        this.generatedCode = document.getElementById('generated-code');\n        logFrontend('initElements finished', {\n            strategyInputExists: !!this.strategyInput,\n            runBacktestBtnExists: !!this.runBacktestBtn\n        });\n    }\n    \n    private initEventListeners(): void {\n        logFrontend('initEventListeners started');\n        if (this.runBacktestBtn) {\n            this.runBacktestBtn.addEventListener('click', () => {\n                logFrontend('Run Backtest button clicked');\n                this.runBacktest();\n            });\n            logFrontend('Event listener added to Run Backtest button');\n        } else {\n            logFrontend('Run Backtest button not found', 'WARN');\n        }\n        logFrontend('initEventListeners finished');\n    }\n    \n    private async runBacktest(): Promise<void> {\n        logFrontend('runBacktest started');\n        if (!this.strategyInput || !this.strategyInput.value.trim()) {\n            logFrontend('Strategy input is empty', 'WARN');\n            alert('Please enter a trading strategy before running a backtest.');\n            return;\n        }\n        \n        const strategy = this.strategyInput.value.trim();\n        logFrontend('Strategy to backtest:', strategy.substring(0, 100) + (strategy.length > 100 ? '...' : ''));\n        \n        this.showLoading(true);\n        \n        try {\n            logFrontend('Calling callBacktestAPI');\n            const result = await this.callBacktestAPI(strategy);\n            logFrontend('callBacktestAPI returned', result);\n            this.displayResults(result);\n        } catch (error) {\n            logFrontend('Error in runBacktest catch block', error);\n            console.error('Error running backtest:', error);\n            alert('An error occurred while running the backtest. Please try again.');\n        } finally {\n            logFrontend('runBacktest finally block');\n            this.showLoading(false);\n        }\n        logFrontend('runBacktest finished');\n    }\n    \n    private async callBacktestAPI(strategy: string): Promise<BacktestResult> {\n        logFrontend('callBacktestAPI started for strategy:', strategy.substring(0, 100) + (strategy.length > 100 ? '...' : ''));\n        try {\n            logFrontend('Sending POST request to /api/backtest');\n            const response = await fetch('/api/backtest', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ strategy })\n            });\n            \n            logFrontend('Response status from /api/backtest:', response.status);\n            \n            if (!response.ok) {\n                const errorText = await response.text();\n                logFrontend(`Server error: ${response.status} ${response.statusText}. Response text: ${errorText}`, 'ERROR');\n                console.error(`Server error: ${response.status} ${response.statusText}`);\n                console.error('Error response text:', errorText);\n                throw new Error(`Server responded with ${response.status}: ${response.statusText}`);\n            }\n            \n            const result = await response.json();\n            logFrontend('Parsed JSON result from /api/backtest:', result);\n            return result;\n        } catch (error) {\n            logFrontend('Error in callBacktestAPI catch block', error);\n            console.error('API call error:', error);\n            return {\n                status: 'error',\n                error: error instanceof Error ? error.message : 'Unknown error occurred during API call'\n            };\n        }\n    }\n    \n    private displayResults(result: BacktestResult): void {\n        logFrontend('displayResults started with result:', result);\n        if (!this.resultsContainer) {\n            logFrontend('resultsContainer not found, cannot display results', 'ERROR');\n            return;\n        }\n        \n        if (result.status === 'error' || result.error) {\n            logFrontend('Displaying error message from result', result.error);\n            this.showError(result.error || 'An unknown error occurred during backtest processing.');\n            return;\n        }\n        \n        this.resultsContainer.style.display = 'block';\n        logFrontend('Results container displayed');\n        \n        // Update profit/loss\n        if (this.profitLossValue) {\n            const profitValue = result.profit_loss ?? result.profit ?? 0;\n            logFrontend('Profit/Loss value:', profitValue);\n            \n            const formattedProfitLoss = new Intl.NumberFormat('en-US', {\n                style: 'currency',\n                currency: 'USD'\n            }).format(profitValue);\n            \n            this.profitLossValue.textContent = formattedProfitLoss;\n            this.profitLossValue.className = 'result-value ' + \n                (profitValue >= 0 ? 'positive' : 'negative');\n        }\n        \n        // Update trades count\n        if (this.tradesCount) {\n            // Get trades count from different possible response formats\n            let totalTrades = 0;\n            if (result.trades && result.trades.count) {\n                totalTrades = result.trades.count;\n            } else if (result.buy_points) {\n                totalTrades = result.buy_points.length;\n            }\n            \n            this.tradesCount.textContent = totalTrades.toString();\n        }\n        \n        // Update success rate\n        if (this.successRate) {\n            let successfulTrades = 0;\n            let buyPoints = result.buy_points || [];\n            let sellPoints = result.sell_points || [];\n            \n            // Handle different response formats\n            if (result.trades) {\n                buyPoints = result.trades.buys || [];\n                sellPoints = result.trades.sells || []; \n            }\n            \n            // Count trades where sell price > buy price\n            if (buyPoints && sellPoints) {\n                for (let i = 0; i < Math.min(buyPoints.length, sellPoints.length); i++) {\n                    if (sellPoints[i][1] > buyPoints[i][1]) {\n                        successfulTrades++;\n                    }\n                }\n            }\n            \n            const buyPointsLength = buyPoints?.length || 0;\n            const rate = buyPointsLength > 0 \n                ? Math.round((successfulTrades / buyPointsLength) * 100) \n                : 0;\n                \n            this.successRate.textContent = `${rate}%`;\n        }\n        \n        // Update charts\n        logFrontend('Calling createCharts');\n        this.createCharts(result);\n        \n        // Update generated code\n        if (this.generatedCode) {\n            const codeContent = result.generated_code || result.code || '';\n            logFrontend('Generated code content length:', codeContent.length);\n            this.generatedCode.textContent = codeContent;\n        }\n        logFrontend('displayResults finished');\n    }\n\n    private createCharts(result: BacktestResult): void {\n        logFrontend('createCharts started with result:', result);\n        // Get the prices data\n        const close = result.close || [];\n        logFrontend('Number of close prices for chart:', close.length);\n        \n        // Generate x-axis labels (either use dates from API or generate indices)\n        let labels: string[] = [];\n        if (result.dates && result.dates.length === close.length) {\n            labels = result.dates;\n        } else {\n            labels = Array.from({ length: close.length }, (_, i) => `Day ${i+1}`);\n        }\n        \n        // Get buy and sell points\n        let buyPoints = result.buy_points || [];\n        let sellPoints = result.sell_points || [];\n        \n        // Handle different response formats\n        if (result.trades) {\n            buyPoints = result.trades.buys || [];\n            sellPoints = result.trades.sells || [];\n        }\n        \n        // Get balance over time\n        const balanceData = result.balance_over_time || result.balance_history || [];\n        \n        // Create price chart\n        this.createPriceChart(labels, close, buyPoints, sellPoints);\n        \n        // Create balance chart\n        this.createBalanceChart(labels, balanceData);\n        logFrontend('createCharts finished');\n    }\n    \n    private createPriceChart(labels: string[], prices: number[], buyPoints: Array<[number, number]>, sellPoints: Array<[number, number]>): void {\n        const priceChartCanvas = document.getElementById('price-chart') as HTMLCanvasElement;\n        if (!priceChartCanvas) return;\n        \n        // Destroy previous chart if it exists\n        if (this.priceChart) {\n            this.priceChart.destroy();\n        }\n        \n        // Create buy points dataset\n        const buyPointsData = Array(prices.length).fill(null);\n        buyPoints.forEach(point => {\n            const [index] = point;\n            if (index >= 0 && index < buyPointsData.length) {\n                buyPointsData[index] = prices[index];\n            }\n        });\n        \n        // Create sell points dataset\n        const sellPointsData = Array(prices.length).fill(null);\n        sellPoints.forEach(point => {\n            const [index] = point;\n            if (index >= 0 && index < sellPointsData.length) {\n                sellPointsData[index] = prices[index];\n            }\n        });\n        \n        this.priceChart = new Chart(priceChartCanvas, {\n            type: 'line',\n            data: {\n                labels: labels,\n                datasets: [\n                    {\n                        label: 'Stock Price',\n                        data: prices,\n                        borderColor: 'rgba(75, 192, 192, 1)',\n                        borderWidth: 1,\n                        fill: false,\n                        tension: 0.1\n                    },\n                    {\n                        label: 'Buy Points',\n                        data: buyPointsData,\n                        backgroundColor: 'rgba(75, 192, 75, 1)',\n                        borderColor: 'rgba(75, 192, 75, 1)',\n                        pointRadius: 6,\n                        pointHoverRadius: 8,\n                        showLine: false\n                    },\n                    {\n                        label: 'Sell Points',\n                        data: sellPointsData,\n                        backgroundColor: 'rgba(255, 99, 132, 1)',\n                        borderColor: 'rgba(255, 99, 132, 1)',\n                        pointRadius: 6,\n                        pointHoverRadius: 8,\n                        showLine: false\n                    }\n                ]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                scales: {\n                    y: {\n                        title: {\n                            display: true,\n                            text: 'Price ($)'\n                        }\n                    },\n                    x: {\n                        ticks: {\n                            maxRotation: 45,\n                            minRotation: 45\n                        }\n                    }\n                },\n                plugins: {\n                    title: {\n                        display: true,\n                        text: 'Stock Price with Buy/Sell Points'\n                    },\n                    tooltip: {\n                        mode: 'index',\n                        intersect: false\n                    }\n                }\n            }\n        });\n    }\n    \n    private createBalanceChart(labels: string[], balanceData: number[]): void {\n        const balanceChartCanvas = document.getElementById('balance-chart') as HTMLCanvasElement;\n        if (!balanceChartCanvas) return;\n        \n        // Destroy previous chart if it exists\n        if (this.balanceChart) {\n            this.balanceChart.destroy();\n        }\n        \n        this.balanceChart = new Chart(balanceChartCanvas, {\n            type: 'line',\n            data: {\n                labels: labels.slice(0, balanceData.length),\n                datasets: [\n                    {\n                        label: 'Portfolio Value',\n                        data: balanceData,\n                        borderColor: 'rgba(54, 162, 235, 1)',\n                        backgroundColor: 'rgba(54, 162, 235, 0.2)',\n                        borderWidth: 2,\n                        fill: true\n                    }\n                ]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                scales: {\n                    y: {\n                        title: {\n                            display: true,\n                            text: 'Value ($)'\n                        },\n                        ticks: {\n                            callback: function(value) {\n                                return '$' + value.toLocaleString();\n                            }\n                        }\n                    },\n                    x: {\n                        ticks: {\n                            maxRotation: 45,\n                            minRotation: 45\n                        }\n                    }\n                },\n                plugins: {\n                    title: {\n                        display: true,\n                        text: 'Portfolio Value Over Time'\n                    },\n                    tooltip: {\n                        callbacks: {\n                            label: function(context) {\n                                let label = context.dataset.label || '';\n                                if (label) {\n                                    label += ': ';\n                                }\n                                if (context.parsed.y !== null) {\n                                    label += new Intl.NumberFormat('en-US', { \n                                        style: 'currency', \n                                        currency: 'USD' \n                                    }).format(context.parsed.y);\n                                }\n                                return label;\n                            }\n                        }\n                    }\n                }\n            }\n        });\n    }\n    \n    private showError(errorMessage: string): void {\n        if (!this.resultsContainer) return;\n        \n        this.resultsContainer.innerHTML = `\n            <div class=\"error-message\">\n                <h3>Error Running Backtest</h3>\n                <p>${errorMessage}</p>\n                <button class=\"retry-button\" id=\"retry-button\">Try Again</button>\n            </div>\n        `;\n        \n        this.resultsContainer.style.display = 'block';\n        \n        // Add event listener to retry button\n        const retryButton = document.getElementById('retry-button');\n        if (retryButton) {\n            retryButton.addEventListener('click', () => {\n                this.resetForm();\n            });\n        }\n    }\n    \n    private resetForm(): void {\n        if (this.resultsContainer) {\n            this.resultsContainer.style.display = 'none';\n        }\n        \n        if (this.loadingIndicator) {\n            this.loadingIndicator.style.display = 'none';\n        }\n        \n        // Destroy charts if they exist\n        if (this.priceChart) {\n            this.priceChart.destroy();\n            this.priceChart = null;\n        }\n        \n        if (this.balanceChart) {\n            this.balanceChart.destroy();\n            this.balanceChart = null;\n        }\n    }\n    \n    private showLoading(show: boolean): void {\n        logFrontend(`showLoading called with: ${show}`);\n        if (!this.loadingIndicator) return;\n        \n        this.loadingIndicator.style.display = show ? 'block' : 'none';\n        \n        // Hide results while loading\n        if (show && this.resultsContainer) {\n            this.resultsContainer.style.display = 'none';\n        }\n        \n        // Disable or enable the submit button\n        if (this.runBacktestBtn) {\n            if (show) {\n                this.runBacktestBtn.setAttribute('disabled', 'true');\n                this.runBacktestBtn.classList.add('disabled');\n            } else {\n                this.runBacktestBtn.removeAttribute('disabled');\n                this.runBacktestBtn.classList.remove('disabled');\n            }\n        }\n    }\n\n    private initWebSocket(): void {\n        logFrontend('initWebSocket started (for log fetching)');\n        // const ws = new WebSocket('ws://localhost:3000'); // WebSocket not used for this log fetching\n\n        document.addEventListener('DOMContentLoaded', () => {\n            logFrontend('DOMContentLoaded event fired for log fetching setup');\n            const backtestLogOutputElement = document.getElementById('backtestLogOutput') as HTMLPreElement;\n            logFrontend('backtestLogOutputElement found:', !!backtestLogOutputElement);\n\n            async function fetchAndDisplayLogs() {\n                // logFrontend('fetchAndDisplayLogs called'); // This would be too noisy\n                if (!backtestLogOutputElement) {\n                    // console.warn('[FRONTEND] backtestLogOutputElement not found in fetchAndDisplayLogs');\n                    return;\n                }\n\n                try {\n                    const response = await fetch('/api/backtest-logs');\n                    if (!response.ok) {\n                        const errorText = `Error fetching logs: ${response.status} ${response.statusText}`;\n                        // logFrontend(errorText, 'ERROR');\n                        if (backtestLogOutputElement.textContent !== errorText) { // Avoid spamming same error\n                           backtestLogOutputElement.textContent = errorText;\n                        }\n                        return;\n                    }\n                    const logs = await response.text();\n                    if (backtestLogOutputElement.textContent !== logs) { // Only update if content changed\n                        // logFrontend('Logs received, length:', logs.length);\n                        backtestLogOutputElement.textContent = logs;\n                        backtestLogOutputElement.scrollTop = backtestLogOutputElement.scrollHeight;\n                    }\n                } catch (error) {\n                    // logFrontend('Failed to fetch or display logs:', error);\n                    // console.error('Failed to fetch or display logs:', error);\n                    if (backtestLogOutputElement) {\n                        const errorMessage = 'Failed to load logs. Check console for details.';\n                        if (backtestLogOutputElement.textContent !== errorMessage) {\n                           backtestLogOutputElement.textContent = errorMessage;\n                        }\n                    }\n                }\n            }\n\n            if (backtestLogOutputElement) {\n                logFrontend('Initial call to fetchAndDisplayLogs and setting interval');\n                fetchAndDisplayLogs(); \n                setInterval(fetchAndDisplayLogs, 3000); \n            } else {\n                logFrontend('backtestLogOutputElement not found, log polling not started', 'WARN');\n            }\n        });\n        logFrontend('initWebSocket finished');\n    }\n}\n\nlogFrontend('Script loaded. Adding DOMContentLoaded listener for AppController.');\ndocument.addEventListener('DOMContentLoaded', () => {\n    logFrontend('DOMContentLoaded event fired. Initializing AppController.');\n    new BacktestingController();\n    logFrontend('AppController initialized.');\n}); "],"names":["module","exports","styleElement","nonce","setAttribute","stylesInDOM","getIndexByIdentifier","identifier","result","i","length","modulesToDom","list","options","idCountMap","identifiers","item","id","base","count","concat","indexByIdentifier","obj","css","media","sourceMap","supports","layer","references","updater","addElementStyle","byIndex","splice","push","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","styleSheet","cssText","firstChild","removeChild","appendChild","document","createTextNode","___CSS_LOADER_EXPORT___","cssWithMappingToString","toString","this","map","content","needLayer","join","modules","dedupe","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","element","createElement","setAttributes","attributes","insert","memo","style","target","styleTarget","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","insertStyleElement","styleTagTransform","apply","parentNode","removeStyleElement","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","nc","locals","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","b","c","f","hex","h1","h2","eq","HUE_RE","hsl2rgbn","s","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","r","g","hueValue","calln","Array","isArray","hsl2rgb","hue","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","str","charAt","m","exec","rgbParse","p1","p2","hwb2rgb","hsv2rgb","hueParse","Color","constructor","type","ret","len","unpacked","keys","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","nameParse","_rgb","_valid","valid","rgbString","hexString","isShort","alpha","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","isNullOrUndef","value","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","source","create","klen","isValidKey","indexOf","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","keyResolvers","y","resolveObjectKey","resolver","parts","split","part","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","Symbol","toPrimitive","isNonPrimitive","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","forEach","_arrayUnique","items","set","Set","requestAnimFrame","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","_sorted","iScale","vScale","_parsed","spanGaps","dataset","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","capControlPoint","pt","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","_boundSegments","segments","sub","readStyle","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","styleChanged","prevStyle","replacer","getSizeForArea","chartArea","field","getDatasetClipArea","_clip","disabled","getDatasetArea","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","aspectRatio","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","LineController","_dataset","_datasetIndex","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestCartesianItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","fullSize","setBoxDims","placeBoxes","userPadding","placed","stackWeight","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","buildStacks","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","proxies","$proxies","attach","detach","bbWidth","bbHeight","margins","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","isConnected","Element","tooltipPosition","hasValue","final","newTicks","majorStart","majorEnd","ceil","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","determinedMaxTicks","_tickSize","maxScale","maxChart","determineMaxTicks","ticksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","setStyle","lineCap","lineJoin","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","LineElement","_path","_points","_segments","_pointsUpdated","segmentOptions","findStartAndEnd","chartContext","baseStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","doSplitByStyles","splitByStyles","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","segmentMethod","path","strokePathWithCache","strokePathDirect","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","fullCircles","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","inner","angleMargin","clipArc","BarElement","outer","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","boundingRects","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","getColorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_drawfill","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","generateTicks$1","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","LogarithmicScale","_zero","minExp","exp","startExp","lastTick","generateTicks","getTickBackdropHeight","determineLimits","updateLimits","limits","hLimits","vLimits","createPointLabelItem","itemOpts","outerDistance","drawingArea","extra","additionalAngle","pointLabelPosition","getPointPosition","yForAngle","getTextAlignForAngle","isNotOverlapped","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","centerPointLabels","_pointLabels","_pointLabelItems","valueCount","pointLabelOpts","getPointLabelContext","plFont","setCenterPoint","buildPointLabelItems","fitWithPointLabels","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","addedLabels","addIfString","lastIndexOf","findOrAddLabel","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","logFrontend","message","log","priceChart","balanceChart","initElements","initEventListeners","initWebSocket","strategyInput","runBacktestBtn","loadingIndicator","resultsContainer","profitLossValue","tradesCount","successRate","generatedCode","strategyInputExists","runBacktestBtnExists","runBacktest","trim","alert","strategy","substring","showLoading","callBacktestAPI","displayResults","fetch","headers","response","status","errorText","statusText","json","showError","profitValue","profit_loss","profit","formattedProfitLoss","currency","textContent","className","totalTrades","trades","buy_points","successfulTrades","buyPoints","sellPoints","sell_points","buys","sells","buyPointsLength","rate","createCharts","codeContent","generated_code","code","close","dates","_","balanceData","balance_over_time","balance_history","createPriceChart","createBalanceChart","prices","priceChartCanvas","buyPointsData","sellPointsData","pointRadius","pointHoverRadius","balanceChartCanvas","toLocaleString","errorMessage","innerHTML","retryButton","resetForm","classList","backtestLogOutputElement","fetchAndDisplayLogs","logs","scrollTop","scrollHeight","setInterval","BacktestingController"],"sourceRoot":""}