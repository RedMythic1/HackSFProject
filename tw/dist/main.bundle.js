(()=>{"use strict";var n={56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},72:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},a=[],c=0;c<n.length;c++){var s=n[c],l=o.base?s[0]+o.base:s[0],A=i[l]||0,d="".concat(l," ").concat(A);i[l]=A+1;var u=t(d),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=r(p,o);o.byIndex=c,e.splice(c,0,{identifier:d,updater:m,references:1})}a.push(d)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var c=t(i[a]);e[c].references--}for(var s=o(n,r),l=0;l<i.length;l++){var A=t(i[l]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}i=s}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},208:(n,e,t)=>{t.d(e,{A:()=>c});var o=t(354),r=t.n(o),i=t(314),a=t.n(i)()(r());a.push([n.id,"body {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  margin: 0;\n  padding: 0;\n  background-color: #f5f7fa;\n  color: #333;\n  line-height: 1.5;\n}\n\n.container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\nheader {\n  background-color: #fff;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  padding: 20px 0;\n  margin-bottom: 30px;\n}\n\nh1 {\n  text-align: center;\n  color: #2c3e50;\n  margin: 0;\n  padding: 0;\n  font-size: 2.2rem;\n}\n\n.interests-form {\n  display: flex;\n  justify-content: center;\n  margin: 30px auto;\n  max-width: 600px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  overflow: hidden;\n  background: white;\n}\n\n#interests-input {\n  flex-grow: 1;\n  padding: 15px;\n  border: none;\n  font-size: 16px;\n  outline: none;\n}\n\n#submit-interests {\n  padding: 15px 25px;\n  background-color: #3498db;\n  color: white;\n  border: none;\n  cursor: pointer;\n  font-weight: 600;\n  font-size: 16px;\n  transition: background-color 0.2s;\n}\n\n#submit-interests:hover {\n  background-color: #2980b9;\n}\n\n.articles-container {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  gap: 25px;\n  margin-top: 20px;\n}\n\n.article-count {\n  grid-column: 1 / -1;\n  padding: 10px 15px;\n  background-color: #e8f4fd;\n  border-radius: 6px;\n  font-size: 14px;\n  color: #2c3e50;\n  margin-bottom: 15px;\n}\n\n.article-card {\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.07);\n  overflow: hidden;\n  position: relative;\n  transition: transform 0.2s, box-shadow 0.2s;\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n}\n\n.article-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\n}\n\n.article-card.expanded .article-summary {\n  max-height: 1000px;\n  overflow: visible;\n}\n\n.score-badge {\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  font-weight: bold;\n  color: white;\n  font-size: 14px;\n}\n\n.high-score {\n  background-color: #4CAF50;\n}\n\n.medium-score {\n  background-color: #2196F3;\n}\n\n.low-score {\n  background-color: #FF9800;\n}\n\n.no-score {\n  background-color: #9E9E9E;\n}\n\n.article-title {\n  padding: 20px 20px 5px;\n  margin: 0;\n  font-size: 18px;\n  padding-right: 50px; /* Space for score badge */\n  color: #2c3e50;\n}\n\n.article-subject {\n  padding: 0 20px 10px;\n  font-size: 14px;\n  color: #7f8c8d;\n}\n\n.article-summary {\n  padding: 0 20px 15px;\n  font-size: 14px;\n  color: #555;\n  max-height: 100px;\n  overflow: hidden;\n  transition: max-height 0.3s;\n}\n\n.score-details {\n  display: none;\n  padding: 0 20px;\n  background-color: #f9f9f9;\n  border-top: 1px solid #eee;\n  border-bottom: 1px solid #eee;\n  margin: 10px 0;\n}\n\n.score-details.visible {\n  display: block;\n}\n\n.score-details ul {\n  list-style: none;\n  padding: 10px 0;\n  margin: 0;\n}\n\n.score-details li {\n  font-size: 13px;\n  padding: 3px 0;\n}\n\n.score-details-btn, .view-article-btn {\n  background: none;\n  border: none;\n  color: #3498db;\n  cursor: pointer;\n  padding: 8px 15px;\n  font-size: 13px;\n  margin: 5px;\n  transition: color 0.2s;\n}\n\n.score-details-btn:hover, .view-article-btn:hover {\n  color: #2980b9;\n}\n\n.view-article-btn {\n  margin-top: auto;\n  align-self: center;\n  margin-bottom: 15px;\n  background-color: #3498db;\n  color: white;\n  border-radius: 4px;\n  padding: 10px 20px;\n  font-weight: 500;\n}\n\n.view-article-btn:hover {\n  background-color: #2980b9;\n  color: white;\n}\n\n.article-detail {\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 3px 15px rgba(0, 0, 0, 0.1);\n  padding: 30px;\n  margin: 20px 0;\n}\n\n.article-detail h2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\n.article-detail .article-link {\n  display: inline-block;\n  margin: 15px 0;\n  text-decoration: none;\n  color: #3498db;\n}\n\n.article-detail .article-content {\n  margin-top: 20px;\n  line-height: 1.7;\n}\n\n.no-results {\n  grid-column: 1 / -1;\n  text-align: center;\n  padding: 50px;\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.07);\n  color: #7f8c8d;\n}\n\n@media (max-width: 768px) {\n  .interests-form {\n    flex-direction: column;\n    max-width: 95%;\n  }\n  \n  #interests-input, #submit-interests {\n    width: 100%;\n  }\n  \n  .articles-container {\n    grid-template-columns: 1fr;\n  }\n}\n\nh2.section-title {\n  text-align: center;\n  margin: 30px 0;\n  color: #2c3e50;\n  font-size: 1.8rem;\n}\n\n/* Loading indicator */\n.loading {\n  text-align: center;\n  padding: 30px;\n  color: #7f8c8d;\n}\n\n/* Navigation buttons */\n.nav-button {\n  display: inline-block;\n  padding: 8px 20px;\n  background-color: #f5f7fa;\n  color: #3498db;\n  text-decoration: none;\n  border-radius: 6px;\n  font-weight: 600;\n  transition: all 0.2s;\n  margin: 0 5px;\n  border: 1px solid #e0e6ed;\n}\n\n.nav-button:hover {\n  background-color: #edf2f7;\n  transform: translateY(-2px);\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n.nav-button.active {\n  background-color: #3498db;\n  color: white;\n  border-color: #3498db;\n} ","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["body {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  margin: 0;\n  padding: 0;\n  background-color: #f5f7fa;\n  color: #333;\n  line-height: 1.5;\n}\n\n.container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\nheader {\n  background-color: #fff;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  padding: 20px 0;\n  margin-bottom: 30px;\n}\n\nh1 {\n  text-align: center;\n  color: #2c3e50;\n  margin: 0;\n  padding: 0;\n  font-size: 2.2rem;\n}\n\n.interests-form {\n  display: flex;\n  justify-content: center;\n  margin: 30px auto;\n  max-width: 600px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  overflow: hidden;\n  background: white;\n}\n\n#interests-input {\n  flex-grow: 1;\n  padding: 15px;\n  border: none;\n  font-size: 16px;\n  outline: none;\n}\n\n#submit-interests {\n  padding: 15px 25px;\n  background-color: #3498db;\n  color: white;\n  border: none;\n  cursor: pointer;\n  font-weight: 600;\n  font-size: 16px;\n  transition: background-color 0.2s;\n}\n\n#submit-interests:hover {\n  background-color: #2980b9;\n}\n\n.articles-container {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  gap: 25px;\n  margin-top: 20px;\n}\n\n.article-count {\n  grid-column: 1 / -1;\n  padding: 10px 15px;\n  background-color: #e8f4fd;\n  border-radius: 6px;\n  font-size: 14px;\n  color: #2c3e50;\n  margin-bottom: 15px;\n}\n\n.article-card {\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.07);\n  overflow: hidden;\n  position: relative;\n  transition: transform 0.2s, box-shadow 0.2s;\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n}\n\n.article-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\n}\n\n.article-card.expanded .article-summary {\n  max-height: 1000px;\n  overflow: visible;\n}\n\n.score-badge {\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  font-weight: bold;\n  color: white;\n  font-size: 14px;\n}\n\n.high-score {\n  background-color: #4CAF50;\n}\n\n.medium-score {\n  background-color: #2196F3;\n}\n\n.low-score {\n  background-color: #FF9800;\n}\n\n.no-score {\n  background-color: #9E9E9E;\n}\n\n.article-title {\n  padding: 20px 20px 5px;\n  margin: 0;\n  font-size: 18px;\n  padding-right: 50px; /* Space for score badge */\n  color: #2c3e50;\n}\n\n.article-subject {\n  padding: 0 20px 10px;\n  font-size: 14px;\n  color: #7f8c8d;\n}\n\n.article-summary {\n  padding: 0 20px 15px;\n  font-size: 14px;\n  color: #555;\n  max-height: 100px;\n  overflow: hidden;\n  transition: max-height 0.3s;\n}\n\n.score-details {\n  display: none;\n  padding: 0 20px;\n  background-color: #f9f9f9;\n  border-top: 1px solid #eee;\n  border-bottom: 1px solid #eee;\n  margin: 10px 0;\n}\n\n.score-details.visible {\n  display: block;\n}\n\n.score-details ul {\n  list-style: none;\n  padding: 10px 0;\n  margin: 0;\n}\n\n.score-details li {\n  font-size: 13px;\n  padding: 3px 0;\n}\n\n.score-details-btn, .view-article-btn {\n  background: none;\n  border: none;\n  color: #3498db;\n  cursor: pointer;\n  padding: 8px 15px;\n  font-size: 13px;\n  margin: 5px;\n  transition: color 0.2s;\n}\n\n.score-details-btn:hover, .view-article-btn:hover {\n  color: #2980b9;\n}\n\n.view-article-btn {\n  margin-top: auto;\n  align-self: center;\n  margin-bottom: 15px;\n  background-color: #3498db;\n  color: white;\n  border-radius: 4px;\n  padding: 10px 20px;\n  font-weight: 500;\n}\n\n.view-article-btn:hover {\n  background-color: #2980b9;\n  color: white;\n}\n\n.article-detail {\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 3px 15px rgba(0, 0, 0, 0.1);\n  padding: 30px;\n  margin: 20px 0;\n}\n\n.article-detail h2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\n.article-detail .article-link {\n  display: inline-block;\n  margin: 15px 0;\n  text-decoration: none;\n  color: #3498db;\n}\n\n.article-detail .article-content {\n  margin-top: 20px;\n  line-height: 1.7;\n}\n\n.no-results {\n  grid-column: 1 / -1;\n  text-align: center;\n  padding: 50px;\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.07);\n  color: #7f8c8d;\n}\n\n@media (max-width: 768px) {\n  .interests-form {\n    flex-direction: column;\n    max-width: 95%;\n  }\n  \n  #interests-input, #submit-interests {\n    width: 100%;\n  }\n  \n  .articles-container {\n    grid-template-columns: 1fr;\n  }\n}\n\nh2.section-title {\n  text-align: center;\n  margin: 30px 0;\n  color: #2c3e50;\n  font-size: 1.8rem;\n}\n\n/* Loading indicator */\n.loading {\n  text-align: center;\n  padding: 30px;\n  color: #7f8c8d;\n}\n\n/* Navigation buttons */\n.nav-button {\n  display: inline-block;\n  padding: 8px 20px;\n  background-color: #f5f7fa;\n  color: #3498db;\n  text-decoration: none;\n  border-radius: 6px;\n  font-weight: 600;\n  transition: all 0.2s;\n  margin: 0 5px;\n  border: 1px solid #e0e6ed;\n}\n\n.nav-button:hover {\n  background-color: #edf2f7;\n  transform: translateY(-2px);\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n.nav-button.active {\n  background-color: #3498db;\n  color: white;\n  border-color: #3498db;\n} "],sourceRoot:""}]);const c=a},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var l=0;l<n.length;l++){var A=[].concat(n[l]);o&&a[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),e.push(A))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},659:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0;var o=t(72),r=t.n(o),i=t(825),a=t.n(i),c=t(659),s=t.n(c),l=t(56),A=t.n(l),d=t(540),u=t.n(d),p=t(113),m=t.n(p),g=t(208),f={};f.styleTagTransform=m(),f.setAttributes=A(),f.insert=s().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=u(),r()(g.A,f),g.A&&g.A.locals&&g.A.locals;var h=function(){return h=Object.assign||function(n){for(var e,t=1,o=arguments.length;t<o;t++)for(var r in e=arguments[t])Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n},h.apply(this,arguments)},C=function(n,e,t,o){return new(t||(t=Promise))((function(r,i){function a(n){try{s(o.next(n))}catch(n){i(n)}}function c(n){try{s(o.throw(n))}catch(n){i(n)}}function s(n){var e;n.done?r(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(a,c)}s((o=o.apply(n,e||[])).next())}))},E=function(n,e){var t,o,r,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]},a=Object.create(("function"==typeof Iterator?Iterator:Object).prototype);return a.next=c(0),a.throw=c(1),a.return=c(2),"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function c(c){return function(s){return function(c){if(t)throw new TypeError("Generator is already executing.");for(;a&&(a=0,c[0]&&(i=0)),i;)try{if(t=1,o&&(r=2&c[0]?o.return:c[0]?o.throw||((r=o.return)&&r.call(o),0):o.next)&&!(r=r.call(o,c[1])).done)return r;switch(o=0,r&&(c=[2&c[0],r.value]),c[0]){case 0:case 1:r=c;break;case 4:return i.label++,{value:c[1],done:!1};case 5:i.label++,o=c[1],c=[0];continue;case 7:c=i.ops.pop(),i.trys.pop();continue;default:if(!((r=(r=i.trys).length>0&&r[r.length-1])||6!==c[0]&&2!==c[0])){i=0;continue}if(3===c[0]&&(!r||c[1]>r[0]&&c[1]<r[3])){i.label=c[1];break}if(6===c[0]&&i.label<r[1]){i.label=r[1],r=c;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(c);break}r[2]&&i.ops.pop(),i.trys.pop();continue}c=e.call(n,i)}catch(n){c=[6,n],o=0}finally{t=r=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([c,s])}}},b=function(n,e,t){if(t||2===arguments.length)for(var o,r=0,i=e.length;r<i;r++)!o&&r in e||(o||(o=Array.prototype.slice.call(e,0,r)),o[r]=e[r]);return n.concat(o||Array.prototype.slice.call(e))},B=function(){function n(){}return n.preprocess=function(n){return n.toLowerCase().replace(/[^a-z0-9\s]/g,"").split(/\s+/).filter(Boolean)},n.levenshteinSimilarity=function(n,e){var t=n.length,o=e.length;if(0===t||0===o)return 0;for(var r=Array.from({length:t+1},(function(){return Array(o+1).fill(0)})),i=0;i<=t;i++)r[i][0]=i;for(var a=0;a<=o;a++)r[0][a]=a;for(i=1;i<=t;i++)for(a=1;a<=o;a++){var c=n[i-1]===e[a-1]?0:1;r[i][a]=Math.min(r[i-1][a]+1,r[i][a-1]+1,r[i-1][a-1]+c)}return 100*(1-r[t][o]/Math.max(t,o))},n.jaccardSimilarity=function(n,e){var t=new Set(n),o=new Set(e),r=Array.from(t).filter((function(n){return o.has(n)})).length,i=Array.from(new Set(b(b([],n,!0),e,!0))).length;return 0===i?0:r/i*100},n.tokenOverlap=function(n,e){for(var t=0,o=0,r=n;o<r.length;o++){var i=r[o];e.includes(i)&&t++}return 0===n.length?0:t/n.length*100},n.compute=function(n,e){var t=this.preprocess(n),o=this.preprocess(e),r=t.join(" "),i=o.join(" "),a=.4*this.levenshteinSimilarity(r,i)+.3*this.jaccardSimilarity(t,o)+.3*this.tokenOverlap(t,o);return Math.round(a)},n}(),x=function(){function n(){this.baseUrl="",this.baseUrl="localhost"===window.location.hostname?"http://localhost:3000":"",console.log("ApiService initialized with baseUrl: ".concat(this.baseUrl)),console.log("Current hostname: ".concat(window.location.hostname))}return n.prototype.getArticles=function(n){return C(this,void 0,void 0,(function(){var e,t,o,r,i;return E(this,(function(a){switch(a.label){case 0:return a.trys.push([0,3,,4]),e=n?"?interests=".concat(encodeURIComponent(n)):"",t="".concat(this.baseUrl,"/api/articles").concat(e),console.log("Fetching articles from: ".concat(t)),[4,fetch(t)];case 1:if(!(o=a.sent()).ok)throw console.error("Error response from server: ".concat(o.status)),new Error("Failed to fetch articles: ".concat(o.statusText));return[4,o.json()];case 2:return r=a.sent(),console.log("Articles fetched successfully. Count: ".concat(r.length)),console.log("Sample article data:",r.length>0?r[0]:"No articles"),[2,r.map((function(n){return{id:n.id||"",title:n.title||"Untitled Article",subject:n.subject||"",link:n.link||"",score:n.score||0,summary:n.summary||""}}))];case 3:return i=a.sent(),console.error("Error fetching articles:",i),[2,[]];case 4:return[2]}}))}))},n.prototype.getArticleDetails=function(n){return C(this,void 0,void 0,(function(){var e,t,o,r;return E(this,(function(i){switch(i.label){case 0:return i.trys.push([0,3,,4]),e="".concat(this.baseUrl,"/api/article/").concat(n),console.log("Fetching article details from: ".concat(e)),[4,fetch(e)];case 1:if(!(t=i.sent()).ok)throw console.error("Error response from server: ".concat(t.status)),new Error("Failed to fetch article details: ".concat(t.statusText));return[4,t.json()];case 2:return o=i.sent(),console.log("Article details response:",o),"success"===o.status&&o.article?(console.log("Article details fetched successfully:",o.article.title),[2,{title:o.article.title,link:o.article.link,summary:o.article.summary,content:o.article.content}]):(console.error("Invalid article data format:",o),[2,null]);case 3:return r=i.sent(),console.error("Error fetching article details:",r),[2,null];case 4:return[2]}}))}))},n.prototype.analyzeInterests=function(n){return C(this,void 0,void 0,(function(){var e,t;return E(this,(function(o){switch(o.label){case 0:return o.trys.push([0,3,,4]),[4,fetch("".concat(this.baseUrl,"/api/analyze-interests"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({interests:n})})];case 1:if(!(e=o.sent()).ok)throw new Error("Failed to analyze interests");return[4,e.json()];case 2:return[2,o.sent()];case 3:return t=o.sent(),console.error("Error analyzing interests:",t),[2,null];case 4:return[2]}}))}))},n}(),v=function(){function n(){this.apiService=new x,this.articlesContainer=document.getElementById("articles-container"),this.interestsInput=document.getElementById("interests-input"),this.submitButton=document.getElementById("submit-interests"),this.addNavigation(),this.initEventListeners(),this.loadArticles()}return n.prototype.addNavigation=function(){var n=document.querySelector("header");if(n){var e=n.querySelector("nav");if(!e){(e=document.createElement("nav")).style.display="flex",e.style.gap="1rem",e.style.justifyContent="center",e.style.marginBottom="1rem";var t=document.createElement("a");t.href="index.html",t.className="nav-button active",t.textContent="Home";var o=document.createElement("a");o.href="backtesting.html",o.className="nav-button",o.textContent="Backtesting",e.appendChild(t),e.appendChild(o),n.appendChild(e)}}},n.prototype.initEventListeners=function(){var n=this;this.submitButton&&this.submitButton.addEventListener("click",(function(){return n.handleInterestsSubmit()}))},n.prototype.loadArticles=function(n){return C(this,void 0,void 0,(function(){var e,t,o,r,i,a;return E(this,(function(c){switch(c.label){case 0:if(!this.articlesContainer)return[2];c.label=1;case 1:return c.trys.push([1,4,,5]),console.log("Loading articles with interests: ".concat(n||"none")),this.articlesContainer.innerHTML='<div class="loading">Loading articles...</div>',[4,this.apiService.getArticles(n)];case 2:return 0===(e=c.sent()).length?(this.articlesContainer.innerHTML='<div class="message">No articles found. Please try with different interests.</div>',[2]):(console.log("Fetched ".concat(e.length," articles, now scoring based on interests: ").concat(n||"none")),t=this.deduplicateArticles(e),console.log("Reduced to ".concat(t.length," unique articles after deduplication")),o=t.map((function(e){return function(n,e,t){return C(void 0,void 0,void 0,(function(){var o,r,i,a,c,s,l,A,d,u,p,m,g,f,h,C,b,x,v,y,w,k,S,L,T,N,I,j,M,F,O,z;return E(this,(function(E){switch(E.label){case 0:if(E.trys.push([0,10,,11]),console.log('\n========== SCORING ARTICLE: "'.concat(n.title,'" (ID: ').concat(n.id||"unknown",") ==========")),console.log('Interest Terms: "'.concat(e,'"')),o=Math.floor(25*Math.random())+70,console.log("Base score (if no interests): ".concat(o)),!e.trim())return console.log("No interests provided - Using base score: ".concat(o)),[2,o];if(r=e.toLowerCase().split(/[\s,]+/).filter((function(n){return n.length>2})).map((function(n){return n.trim()})),console.log("Parsed interest terms (".concat(r.length,"):"),r),0===r.length)return console.log("No valid interest terms after filtering - Using base score: ".concat(o)),[2,o];if(i="",a="none",!n.id)return[3,8];E.label=1;case 1:return E.trys.push([1,6,,7]),c=".cache/summary_".concat(n.id,".json"),console.log("ATTEMPTING TO LOAD SUMMARY FILE: ".concat(c)),[4,fetch(c)];case 2:return s=E.sent(),console.log("Summary file response status:",s.status,s.statusText),s.ok?[4,s.json()]:[3,4];case 3:return l=E.sent(),console.log("Summary file raw data:",l),l.summary&&"string"==typeof l.summary?(i=l.summary,a="cache file",console.log("SUCCESS: Loaded summary from file (".concat(i.length," chars)")),console.log('Summary preview: "'.concat(i.substring(0,100)).concat(i.length>100?"...":"",'"'))):console.warn("File loaded but no valid summary found in data"),[3,5];case 4:console.warn("Failed to load summary file: ".concat(s.status," ").concat(s.statusText)),E.label=5;case 5:return[3,7];case 6:return A=E.sent(),console.warn("Error loading summary for article id ".concat(n.id,":"),A),[3,7];case 7:return[3,9];case 8:console.log("No article ID available - Cannot load summary file"),E.label=9;case 9:return!i&&n.summary?(i=n.summary,a="article object",console.log("FALLBACK: Using summary from article object (".concat(i.length," chars)")),console.log('Summary preview: "'.concat(i.substring(0,100)).concat(i.length>100?"...":"",'"'))):i||console.log("WARNING: No summary available from any source!"),console.log("Final summary source: ".concat(a)),console.log("Final summary length: ".concat(i.length," characters")),d=n.title,u=n.subject||"",p="".concat(d," ").concat(u," ").concat(i),console.log("\n----- SCORING COMPONENT 1: TEXT SIMILARITY (0-60 points) -----"),m=0,p.length>0?(console.log("Computing text similarity using advanced methods..."),g=B.compute(e,p),console.log("Raw similarity score: ".concat(g," / 100")),m=g/100*60,console.log("Weighted similarity score: ".concat(m.toFixed(2)," / 60 points")),f=B.preprocess(e),h=B.preprocess(p),C=B.levenshteinSimilarity(f.join(" "),h.slice(0,200).join(" ")),b=B.jaccardSimilarity(f,h),x=B.tokenOverlap(f,h),console.log("Similarity metrics breakdown:\n  - Levenshtein similarity: ".concat(C.toFixed(2),"%\n  - Jaccard similarity:     ").concat(b.toFixed(2),"%\n  - Token overlap:          ").concat(x.toFixed(2),"%"))):console.log("Empty article content - Similarity score: 0 / 60 points"),console.log("\n----- SCORING COMPONENT 2: CONTEXTUAL RELEVANCE (0-30 points) -----"),v=0,(y=e.split(/\s+/).some((function(e){return n.title.toLowerCase().includes(e.toLowerCase())}))?2:1)>1&&console.log("Interest terms found in title: applying ".concat(y,"x title importance multiplier")),w=B.compute(e,d)*y,console.log("Title similarity: ".concat((w/y).toFixed(2),"% (raw) × ").concat(y," = ").concat(w.toFixed(2),"%")),k=u?B.compute(e,u):0,console.log("Subject similarity: ".concat(k.toFixed(2),"%")),S=.7*w+.3*k,console.log("Weighted context similarity: ".concat(S.toFixed(2),"%")),v=S/100*30,console.log("Contextual relevance score: ".concat(v.toFixed(2)," / 30 points")),console.log("\n----- SCORING COMPONENT 3: FRESHNESS & UNIQUENESS (0-10 points) -----"),L=0,T=n.id?parseInt(n.id.replace(/\D/g,"").slice(-2)||"0")%8:Math.floor(8*Math.random()),console.log("Base freshness: ".concat(T," / 8")),N=t.map((function(n){return n.title.toLowerCase()})),I=d.toLowerCase().split(/\s+/).filter((function(n){return n.length>4})),j=0,I.forEach((function(n){var e=N.filter((function(e){return e.includes(n)})).length;e<=Math.max(1,Math.floor(.2*t.length))&&(j++,console.log('  Uncommon word found: "'.concat(n,'" (in ').concat(e," articles)")))})),M=Math.min(2,.5*j),console.log("Uniqueness bonus: ".concat(M.toFixed(2)," points (").concat(j," uncommon words)")),L=T+M,console.log("Freshness & uniqueness score: ".concat(L.toFixed(2)," / 10 points")),console.log("\n----- FINAL SCORE CALCULATION -----"),F=m+v+L,console.log("Final score breakdown:\n  - Text Similarity:         ".concat(m.toFixed(2)," / 60\n  - Contextual Relevance:    ").concat(v.toFixed(2)," / 30\n  - Freshness & Uniqueness:  ").concat(L.toFixed(2)," / 10\n  ----------------------\n  TOTAL SCORE:               ").concat(F.toFixed(2)," / 100\n")),O={similarity:m.toFixed(2),contextual:v.toFixed(2),freshness:L.toFixed(2),final:F.toFixed(2)},console.log("Score components stored:",O),n.scoreComponents=O,console.log("\n----- SCORING COMPLETE -----"),[2,Math.min(100,Math.max(0,F))];case 10:return z=E.sent(),console.error("ERROR IN RANKING SYSTEM:",z),[2,Math.floor(25*Math.random())+70];case 11:return[2]}}))}))}(e,n||"",t)})),[4,Promise.all(o)]);case 3:return r=c.sent(),i=t.map((function(n,e){return h(h({},n),{score:Math.round(r[e])})})),console.log("Scored ".concat(i.length," articles using custom ranking system")),i.sort((function(n,e){return e.score-n.score})),console.log("Articles sorted by score"),this.renderArticles(i),[3,5];case 4:return a=c.sent(),console.error("Error loading articles:",a),this.articlesContainer.innerHTML='<div class="error">Error loading articles. Please try again later.</div>',[3,5];case 5:return[2]}}))}))},n.prototype.deduplicateArticles=function(n){var e=new Set;return n.filter((function(n){var t=n.title.toLowerCase().trim();return!e.has(t)&&(e.add(t),!0)}))},n.prototype.renderArticles=function(n){var e=this;if(this.articlesContainer)if(this.articlesContainer.innerHTML="",n&&0!==n.length){var t=document.createElement("div");t.className="article-count",t.textContent="Displaying ".concat(n.length," unique articles"),this.articlesContainer.appendChild(t),n.forEach((function(n){var t=document.createElement("div");t.className="article-card",t.dataset.id=n.id||"";var o=e.getScoreClass(n.score),r=document.createElement("div");r.className="score-badge ".concat(o),r.textContent=n.score.toString(),t.appendChild(r);var i=document.createElement("h3");if(i.className="article-title",i.textContent=n.title,t.appendChild(i),n.subject){var a=document.createElement("div");a.className="article-subject",a.textContent=n.subject,t.appendChild(a)}if(n.summary){var c=document.createElement("div");c.className="article-summary",c.innerHTML=e.formatSummary(e.truncateText(n.summary,200)),t.appendChild(c)}if(n.scoreComponents){var s=document.createElement("div");s.className="score-details";var l=document.createElement("ul"),A=document.createElement("button");A.className="score-details-btn",A.textContent="Show score details",A.addEventListener("click",(function(){s&&s.classList&&(s.classList.toggle("visible"),A.textContent=s.classList.contains("visible")?"Hide score details":"Show score details")})),Object.entries(n.scoreComponents).forEach((function(n){var e=n[0],t=n[1],o=document.createElement("li"),r=e.charAt(0).toUpperCase()+e.slice(1);o.innerHTML="<strong>".concat(r,":</strong> ").concat(t),l.appendChild(o)})),s.appendChild(l),t.appendChild(A),t.appendChild(s)}var d=document.createElement("button");d.className="view-article-btn",d.textContent="View Article",d.addEventListener("click",(function(){n.id&&e.viewArticleDetails(n.id)})),t.appendChild(d),e.articlesContainer.appendChild(t)})),document.querySelectorAll(".article-card").forEach((function(n){n.addEventListener("click",(function(e){n&&n.classList&&e.target&&("BUTTON"===e.target.tagName||n.classList.toggle("expanded"))}))}))}else this.articlesContainer.innerHTML='<div class="no-results">No articles found. Try adjusting your interests.</div>'},n.prototype.viewArticleDetails=function(n){return C(this,void 0,void 0,(function(){var e,t,o,r=this;return E(this,(function(i){switch(i.label){case 0:if(!this.articlesContainer)return[2];this.articlesContainer.innerHTML='<div class="loading">Loading article details...</div>',i.label=1;case 1:return i.trys.push([1,3,,4]),[4,this.apiService.getArticleDetails(n)];case 2:return(e=i.sent())?(this.renderArticleDetail(e),[3,4]):(this.articlesContainer.innerHTML='<div class="error">Article not found</div>',(o=document.createElement("button")).textContent="Back to Articles",o.className="back-button",o.addEventListener("click",(function(){var n,e=(null===(n=r.interestsInput)||void 0===n?void 0:n.value)||"";r.loadArticles(e)})),this.articlesContainer.appendChild(o),[2]);case 3:return t=i.sent(),console.error("Error loading article details:",t),this.articlesContainer.innerHTML='<div class="error">Error loading article details. Please try again later.</div>',(o=document.createElement("button")).textContent="Back to Articles",o.className="back-button",o.addEventListener("click",(function(){var n,e=(null===(n=r.interestsInput)||void 0===n?void 0:n.value)||"";r.loadArticles(e)})),this.articlesContainer.appendChild(o),[3,4];case 4:return[2]}}))}))},n.prototype.renderArticleDetail=function(n){var e=this;if(this.articlesContainer){this.articlesContainer.innerHTML="";var t=document.createElement("div");t.className="article-detail";var o="\n            <h2>".concat(this.escapeHtml(n.title),"</h2>\n        ");n.content?n.content.includes("<")&&n.content.includes(">")?o+='\n                    <div class="article-content">\n                        '.concat(this.sanitizeHtml(n.content),"\n                    </div>\n                "):o+='\n                    <div class="article-content">\n                        '.concat(this.formatSummary(n.content),"\n                    </div>\n                "):o+='\n                <div class="article-summary">\n                    '.concat(this.formatSummary(n.summary),"\n                </div>\n            "),o+='\n            <div class="article-actions">\n                <a href="'.concat(n.link,'" target="_blank" class="article-link">View Original</a>\n                <button id="back-to-articles" class="back-button">Back to Articles</button>\n            </div>\n        '),t.innerHTML=o;var r=t.querySelector("#back-to-articles");r&&r.addEventListener("click",(function(){var n,t=(null===(n=e.interestsInput)||void 0===n?void 0:n.value)||"";e.loadArticles(t)})),this.articlesContainer.appendChild(t)}},n.prototype.handleInterestsSubmit=function(){var n=this;if(this.interestsInput){var e=this.interestsInput.value.trim();console.log('Interests submitted: "'.concat(e,'"')),this.submitButton&&(this.submitButton.setAttribute("disabled","true"),this.submitButton.textContent="Loading..."),this.articlesContainer&&(this.articlesContainer.innerHTML='<div class="loading">Scoring articles based on your interests...</div>'),this.loadArticles(e).finally((function(){n.submitButton&&(n.submitButton.removeAttribute("disabled"),n.submitButton.textContent="Update Interests")}))}},n.prototype.formatSummary=function(n){var e=this;return n.split("\n\n").filter((function(n){return n.trim().length>0})).map((function(n){return"<p>".concat(e.escapeHtml(n),"</p>")})).join("")},n.prototype.escapeHtml=function(n){return n.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")},n.prototype.truncateText=function(n,e){return n?n.length<=e?this.escapeHtml(n):this.escapeHtml(n.substring(0,e))+"...":""},n.prototype.sanitizeHtml=function(n){var e=document.createElement("div");return e.innerHTML=n,e.querySelectorAll("script").forEach((function(n){return n.remove()})),e.querySelectorAll("iframe").forEach((function(n){return n.remove()})),e.querySelectorAll("*").forEach((function(n){Array.from(n.attributes).forEach((function(e){(e.name.startsWith("on")||"href"===e.name&&e.value.startsWith("javascript:"))&&n.removeAttribute(e.name)}))})),e.innerHTML},n.prototype.getScoreClass=function(n){return n>90?"high-score":n>75?"medium-score":n>60?"low-score":"no-score"},n}();document.addEventListener("DOMContentLoaded",(function(){new v}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LFNBQXNCckgsR0FDbEIsT0FBSUEsRUFBUSxHQUFXLGFBQ25CQSxFQUFRLEdBQVcsZUFDbkJBLEVBQVEsR0FBVyxZQUNoQixVQUNYLEVBQ0osRUF0YUEsR0F5YUE1RyxTQUFTNkosaUJBQWlCLG9CQUFvQixXQUMxQyxJQUFJdUcsQ0FDUixHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHlwZXNjcmlwdC13ZWJwYWdlLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3R5cGVzY3JpcHQtd2VicGFnZS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0LXdlYnBhZ2UvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0LXdlYnBhZ2UvLi9zcmMvc3R5bGUuY3NzIiwid2VicGFjazovL3R5cGVzY3JpcHQtd2VicGFnZS8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdC13ZWJwYWdlLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdC13ZWJwYWdlLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3R5cGVzY3JpcHQtd2VicGFnZS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdC13ZWJwYWdlLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdC13ZWJwYWdlL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3R5cGVzY3JpcHQtd2VicGFnZS93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90eXBlc2NyaXB0LXdlYnBhZ2Uvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3R5cGVzY3JpcHQtd2VicGFnZS93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3R5cGVzY3JpcHQtd2VicGFnZS93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vdHlwZXNjcmlwdC13ZWJwYWdlLy4vc3JjL3N0eWxlLmNzcz83MTYzIiwid2VicGFjazovL3R5cGVzY3JpcHQtd2VicGFnZS8uL3NyYy9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYGJvZHkge1xuICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCAnU2Vnb2UgVUknLCBSb2JvdG8sIE94eWdlbiwgVWJ1bnR1LCBDYW50YXJlbGwsICdPcGVuIFNhbnMnLCAnSGVsdmV0aWNhIE5ldWUnLCBzYW5zLXNlcmlmO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNWY3ZmE7XG4gIGNvbG9yOiAjMzMzO1xuICBsaW5lLWhlaWdodDogMS41O1xufVxuXG4uY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nOiAyMHB4O1xufVxuXG5oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBib3gtc2hhZG93OiAwIDFweCAzcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBwYWRkaW5nOiAyMHB4IDA7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG59XG5cbmgxIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogIzJjM2U1MDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBmb250LXNpemU6IDIuMnJlbTtcbn1cblxuLmludGVyZXN0cy1mb3JtIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG1hcmdpbjogMzBweCBhdXRvO1xuICBtYXgtd2lkdGg6IDYwMHB4O1xuICBib3gtc2hhZG93OiAwIDJweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xufVxuXG4jaW50ZXJlc3RzLWlucHV0IHtcbiAgZmxleC1ncm93OiAxO1xuICBwYWRkaW5nOiAxNXB4O1xuICBib3JkZXI6IG5vbmU7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuI3N1Ym1pdC1pbnRlcmVzdHMge1xuICBwYWRkaW5nOiAxNXB4IDI1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzNDk4ZGI7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjJzO1xufVxuXG4jc3VibWl0LWludGVyZXN0czpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyOTgwYjk7XG59XG5cbi5hcnRpY2xlcy1jb250YWluZXIge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpbGwsIG1pbm1heCgzMjBweCwgMWZyKSk7XG4gIGdhcDogMjVweDtcbiAgbWFyZ2luLXRvcDogMjBweDtcbn1cblxuLmFydGljbGUtY291bnQge1xuICBncmlkLWNvbHVtbjogMSAvIC0xO1xuICBwYWRkaW5nOiAxMHB4IDE1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlOGY0ZmQ7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBjb2xvcjogIzJjM2U1MDtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbn1cblxuLmFydGljbGUtY2FyZCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICBib3gtc2hhZG93OiAwIDNweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4wNyk7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnMsIGJveC1zaGFkb3cgMC4ycztcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uYXJ0aWNsZS1jYXJkOmhvdmVyIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01cHgpO1xuICBib3gtc2hhZG93OiAwIDhweCAyMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbn1cblxuLmFydGljbGUtY2FyZC5leHBhbmRlZCAuYXJ0aWNsZS1zdW1tYXJ5IHtcbiAgbWF4LWhlaWdodDogMTAwMHB4O1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLnNjb3JlLWJhZGdlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDE1cHg7XG4gIHJpZ2h0OiAxNXB4O1xuICB3aWR0aDogMzZweDtcbiAgaGVpZ2h0OiAzNnB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXNpemU6IDE0cHg7XG59XG5cbi5oaWdoLXNjb3JlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzRDQUY1MDtcbn1cblxuLm1lZGl1bS1zY29yZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyMTk2RjM7XG59XG5cbi5sb3ctc2NvcmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkY5ODAwO1xufVxuXG4ubm8tc2NvcmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOUU5RTlFO1xufVxuXG4uYXJ0aWNsZS10aXRsZSB7XG4gIHBhZGRpbmc6IDIwcHggMjBweCA1cHg7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBwYWRkaW5nLXJpZ2h0OiA1MHB4OyAvKiBTcGFjZSBmb3Igc2NvcmUgYmFkZ2UgKi9cbiAgY29sb3I6ICMyYzNlNTA7XG59XG5cbi5hcnRpY2xlLXN1YmplY3Qge1xuICBwYWRkaW5nOiAwIDIwcHggMTBweDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBjb2xvcjogIzdmOGM4ZDtcbn1cblxuLmFydGljbGUtc3VtbWFyeSB7XG4gIHBhZGRpbmc6IDAgMjBweCAxNXB4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAjNTU1O1xuICBtYXgtaGVpZ2h0OiAxMDBweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdHJhbnNpdGlvbjogbWF4LWhlaWdodCAwLjNzO1xufVxuXG4uc2NvcmUtZGV0YWlscyB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBhZGRpbmc6IDAgMjBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlZWU7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZWVlO1xuICBtYXJnaW46IDEwcHggMDtcbn1cblxuLnNjb3JlLWRldGFpbHMudmlzaWJsZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uc2NvcmUtZGV0YWlscyB1bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDEwcHggMDtcbiAgbWFyZ2luOiAwO1xufVxuXG4uc2NvcmUtZGV0YWlscyBsaSB7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgcGFkZGluZzogM3B4IDA7XG59XG5cbi5zY29yZS1kZXRhaWxzLWJ0biwgLnZpZXctYXJ0aWNsZS1idG4ge1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBib3JkZXI6IG5vbmU7XG4gIGNvbG9yOiAjMzQ5OGRiO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBhZGRpbmc6IDhweCAxNXB4O1xuICBmb250LXNpemU6IDEzcHg7XG4gIG1hcmdpbjogNXB4O1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjJzO1xufVxuXG4uc2NvcmUtZGV0YWlscy1idG46aG92ZXIsIC52aWV3LWFydGljbGUtYnRuOmhvdmVyIHtcbiAgY29sb3I6ICMyOTgwYjk7XG59XG5cbi52aWV3LWFydGljbGUtYnRuIHtcbiAgbWFyZ2luLXRvcDogYXV0bztcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQ5OGRiO1xuICBjb2xvcjogd2hpdGU7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgcGFkZGluZzogMTBweCAyMHB4O1xuICBmb250LXdlaWdodDogNTAwO1xufVxuXG4udmlldy1hcnRpY2xlLWJ0bjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyOTgwYjk7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLmFydGljbGUtZGV0YWlsIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJveC1zaGFkb3c6IDAgM3B4IDE1cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBwYWRkaW5nOiAzMHB4O1xuICBtYXJnaW46IDIwcHggMDtcbn1cblxuLmFydGljbGUtZGV0YWlsIGgyIHtcbiAgbWFyZ2luLXRvcDogMDtcbiAgY29sb3I6ICMyYzNlNTA7XG59XG5cbi5hcnRpY2xlLWRldGFpbCAuYXJ0aWNsZS1saW5rIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW46IDE1cHggMDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogIzM0OThkYjtcbn1cblxuLmFydGljbGUtZGV0YWlsIC5hcnRpY2xlLWNvbnRlbnQge1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICBsaW5lLWhlaWdodDogMS43O1xufVxuXG4ubm8tcmVzdWx0cyB7XG4gIGdyaWQtY29sdW1uOiAxIC8gLTE7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZzogNTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJveC1zaGFkb3c6IDAgM3B4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjA3KTtcbiAgY29sb3I6ICM3ZjhjOGQ7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuaW50ZXJlc3RzLWZvcm0ge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgbWF4LXdpZHRoOiA5NSU7XG4gIH1cbiAgXG4gICNpbnRlcmVzdHMtaW5wdXQsICNzdWJtaXQtaW50ZXJlc3RzIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICBcbiAgLmFydGljbGVzLWNvbnRhaW5lciB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gIH1cbn1cblxuaDIuc2VjdGlvbi10aXRsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luOiAzMHB4IDA7XG4gIGNvbG9yOiAjMmMzZTUwO1xuICBmb250LXNpemU6IDEuOHJlbTtcbn1cblxuLyogTG9hZGluZyBpbmRpY2F0b3IgKi9cbi5sb2FkaW5nIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiAzMHB4O1xuICBjb2xvcjogIzdmOGM4ZDtcbn1cblxuLyogTmF2aWdhdGlvbiBidXR0b25zICovXG4ubmF2LWJ1dHRvbiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcGFkZGluZzogOHB4IDIwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNWY3ZmE7XG4gIGNvbG9yOiAjMzQ5OGRiO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnM7XG4gIG1hcmdpbjogMCA1cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlMGU2ZWQ7XG59XG5cbi5uYXYtYnV0dG9uOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VkZjJmNztcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0ycHgpO1xuICBib3gtc2hhZG93OiAwIDJweCA1cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xufVxuXG4ubmF2LWJ1dHRvbi5hY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQ5OGRiO1xuICBjb2xvcjogd2hpdGU7XG4gIGJvcmRlci1jb2xvcjogIzM0OThkYjtcbn0gYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0Usd0lBQXdJO0VBQ3hJLFNBQVM7RUFDVCxVQUFVO0VBQ1YseUJBQXlCO0VBQ3pCLFdBQVc7RUFDWCxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsY0FBYztFQUNkLGFBQWE7QUFDZjs7QUFFQTtFQUNFLHNCQUFzQjtFQUN0Qix3Q0FBd0M7RUFDeEMsZUFBZTtFQUNmLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixjQUFjO0VBQ2QsU0FBUztFQUNULFVBQVU7RUFDVixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLGlCQUFp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Q2hCOztBQUVBO0VBQ0U7SUFDRSxzQkFBc0I7SUFDdEIsY0FBYztFQUNoQjs7RUFFQTtJQUNFLFdBQVc7RUFDYjs7RUFFQTtJQUNFLDBCQUEwQjtFQUM1QjtBQUNGOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGNBQWM7RUFDZCxjQUFjO0VBQ2QsaUJBQWlCO0FBQ25COztBQUVBLHNCQUFzQjtBQUN0QjtFQUNFLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsY0FBYztBQUNoQjs7QUFFQSx1QkFBdUI7QUFDdkI7RUFDRSxxQkFBcUI7RUFDckIsaUJBQWlCO0VBQ2pCLHlCQUF5QjtFQUN6QixjQUFjO0VBQ2QscUJBQXFCO0VBQ3JCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsb0JBQW9CO0VBQ3BCLGFBQWE7RUFDYix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsMkJBQTJCO0VBQzNCLHdDQUF3QztBQUMxQzs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixZQUFZO0VBQ1oscUJBQXFCO0FBQ3ZCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcImJvZHkge1xcbiAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgJ1NlZ29lIFVJJywgUm9ib3RvLCBPeHlnZW4sIFVidW50dSwgQ2FudGFyZWxsLCAnT3BlbiBTYW5zJywgJ0hlbHZldGljYSBOZXVlJywgc2Fucy1zZXJpZjtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDA7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmN2ZhO1xcbiAgY29sb3I6ICMzMzM7XFxuICBsaW5lLWhlaWdodDogMS41O1xcbn1cXG5cXG4uY29udGFpbmVyIHtcXG4gIG1heC13aWR0aDogMTIwMHB4O1xcbiAgbWFyZ2luOiAwIGF1dG87XFxuICBwYWRkaW5nOiAyMHB4O1xcbn1cXG5cXG5oZWFkZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gIGJveC1zaGFkb3c6IDAgMXB4IDNweCByZ2JhKDAsIDAsIDAsIDAuMSk7XFxuICBwYWRkaW5nOiAyMHB4IDA7XFxuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xcbn1cXG5cXG5oMSB7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBjb2xvcjogIzJjM2U1MDtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDA7XFxuICBmb250LXNpemU6IDIuMnJlbTtcXG59XFxuXFxuLmludGVyZXN0cy1mb3JtIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIG1hcmdpbjogMzBweCBhdXRvO1xcbiAgbWF4LXdpZHRoOiA2MDBweDtcXG4gIGJveC1zaGFkb3c6IDAgMnB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgYmFja2dyb3VuZDogd2hpdGU7XFxufVxcblxcbiNpbnRlcmVzdHMtaW5wdXQge1xcbiAgZmxleC1ncm93OiAxO1xcbiAgcGFkZGluZzogMTVweDtcXG4gIGJvcmRlcjogbm9uZTtcXG4gIGZvbnQtc2l6ZTogMTZweDtcXG4gIG91dGxpbmU6IG5vbmU7XFxufVxcblxcbiNzdWJtaXQtaW50ZXJlc3RzIHtcXG4gIHBhZGRpbmc6IDE1cHggMjVweDtcXG4gIGJhY2tncm91bmQtY29sb3I6ICMzNDk4ZGI7XFxuICBjb2xvcjogd2hpdGU7XFxuICBib3JkZXI6IG5vbmU7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBmb250LXdlaWdodDogNjAwO1xcbiAgZm9udC1zaXplOiAxNnB4O1xcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjJzO1xcbn1cXG5cXG4jc3VibWl0LWludGVyZXN0czpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjk4MGI5O1xcbn1cXG5cXG4uYXJ0aWNsZXMtY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpbGwsIG1pbm1heCgzMjBweCwgMWZyKSk7XFxuICBnYXA6IDI1cHg7XFxuICBtYXJnaW4tdG9wOiAyMHB4O1xcbn1cXG5cXG4uYXJ0aWNsZS1jb3VudCB7XFxuICBncmlkLWNvbHVtbjogMSAvIC0xO1xcbiAgcGFkZGluZzogMTBweCAxNXB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U4ZjRmZDtcXG4gIGJvcmRlci1yYWRpdXM6IDZweDtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG4gIGNvbG9yOiAjMmMzZTUwO1xcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcXG59XFxuXFxuLmFydGljbGUtY2FyZCB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICBib3gtc2hhZG93OiAwIDNweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4wNyk7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnMsIGJveC1zaGFkb3cgMC4ycztcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uYXJ0aWNsZS1jYXJkOmhvdmVyIHtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNXB4KTtcXG4gIGJveC1zaGFkb3c6IDAgOHB4IDIwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xcbn1cXG5cXG4uYXJ0aWNsZS1jYXJkLmV4cGFuZGVkIC5hcnRpY2xlLXN1bW1hcnkge1xcbiAgbWF4LWhlaWdodDogMTAwMHB4O1xcbiAgb3ZlcmZsb3c6IHZpc2libGU7XFxufVxcblxcbi5zY29yZS1iYWRnZSB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDE1cHg7XFxuICByaWdodDogMTVweDtcXG4gIHdpZHRoOiAzNnB4O1xcbiAgaGVpZ2h0OiAzNnB4O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgY29sb3I6IHdoaXRlO1xcbiAgZm9udC1zaXplOiAxNHB4O1xcbn1cXG5cXG4uaGlnaC1zY29yZSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNENBRjUwO1xcbn1cXG5cXG4ubWVkaXVtLXNjb3JlIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICMyMTk2RjM7XFxufVxcblxcbi5sb3ctc2NvcmUge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGOTgwMDtcXG59XFxuXFxuLm5vLXNjb3JlIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM5RTlFOUU7XFxufVxcblxcbi5hcnRpY2xlLXRpdGxlIHtcXG4gIHBhZGRpbmc6IDIwcHggMjBweCA1cHg7XFxuICBtYXJnaW46IDA7XFxuICBmb250LXNpemU6IDE4cHg7XFxuICBwYWRkaW5nLXJpZ2h0OiA1MHB4OyAvKiBTcGFjZSBmb3Igc2NvcmUgYmFkZ2UgKi9cXG4gIGNvbG9yOiAjMmMzZTUwO1xcbn1cXG5cXG4uYXJ0aWNsZS1zdWJqZWN0IHtcXG4gIHBhZGRpbmc6IDAgMjBweCAxMHB4O1xcbiAgZm9udC1zaXplOiAxNHB4O1xcbiAgY29sb3I6ICM3ZjhjOGQ7XFxufVxcblxcbi5hcnRpY2xlLXN1bW1hcnkge1xcbiAgcGFkZGluZzogMCAyMHB4IDE1cHg7XFxuICBmb250LXNpemU6IDE0cHg7XFxuICBjb2xvcjogIzU1NTtcXG4gIG1heC1oZWlnaHQ6IDEwMHB4O1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIHRyYW5zaXRpb246IG1heC1oZWlnaHQgMC4zcztcXG59XFxuXFxuLnNjb3JlLWRldGFpbHMge1xcbiAgZGlzcGxheTogbm9uZTtcXG4gIHBhZGRpbmc6IDAgMjBweDtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7XFxuICBib3JkZXItdG9wOiAxcHggc29saWQgI2VlZTtcXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZWVlO1xcbiAgbWFyZ2luOiAxMHB4IDA7XFxufVxcblxcbi5zY29yZS1kZXRhaWxzLnZpc2libGUge1xcbiAgZGlzcGxheTogYmxvY2s7XFxufVxcblxcbi5zY29yZS1kZXRhaWxzIHVsIHtcXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XFxuICBwYWRkaW5nOiAxMHB4IDA7XFxuICBtYXJnaW46IDA7XFxufVxcblxcbi5zY29yZS1kZXRhaWxzIGxpIHtcXG4gIGZvbnQtc2l6ZTogMTNweDtcXG4gIHBhZGRpbmc6IDNweCAwO1xcbn1cXG5cXG4uc2NvcmUtZGV0YWlscy1idG4sIC52aWV3LWFydGljbGUtYnRuIHtcXG4gIGJhY2tncm91bmQ6IG5vbmU7XFxuICBib3JkZXI6IG5vbmU7XFxuICBjb2xvcjogIzM0OThkYjtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIHBhZGRpbmc6IDhweCAxNXB4O1xcbiAgZm9udC1zaXplOiAxM3B4O1xcbiAgbWFyZ2luOiA1cHg7XFxuICB0cmFuc2l0aW9uOiBjb2xvciAwLjJzO1xcbn1cXG5cXG4uc2NvcmUtZGV0YWlscy1idG46aG92ZXIsIC52aWV3LWFydGljbGUtYnRuOmhvdmVyIHtcXG4gIGNvbG9yOiAjMjk4MGI5O1xcbn1cXG5cXG4udmlldy1hcnRpY2xlLWJ0biB7XFxuICBtYXJnaW4tdG9wOiBhdXRvO1xcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcXG4gIGJhY2tncm91bmQtY29sb3I6ICMzNDk4ZGI7XFxuICBjb2xvcjogd2hpdGU7XFxuICBib3JkZXItcmFkaXVzOiA0cHg7XFxuICBwYWRkaW5nOiAxMHB4IDIwcHg7XFxuICBmb250LXdlaWdodDogNTAwO1xcbn1cXG5cXG4udmlldy1hcnRpY2xlLWJ0bjpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjk4MGI5O1xcbiAgY29sb3I6IHdoaXRlO1xcbn1cXG5cXG4uYXJ0aWNsZS1kZXRhaWwge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgYm94LXNoYWRvdzogMCAzcHggMTVweCByZ2JhKDAsIDAsIDAsIDAuMSk7XFxuICBwYWRkaW5nOiAzMHB4O1xcbiAgbWFyZ2luOiAyMHB4IDA7XFxufVxcblxcbi5hcnRpY2xlLWRldGFpbCBoMiB7XFxuICBtYXJnaW4tdG9wOiAwO1xcbiAgY29sb3I6ICMyYzNlNTA7XFxufVxcblxcbi5hcnRpY2xlLWRldGFpbCAuYXJ0aWNsZS1saW5rIHtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIG1hcmdpbjogMTVweCAwO1xcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbiAgY29sb3I6ICMzNDk4ZGI7XFxufVxcblxcbi5hcnRpY2xlLWRldGFpbCAuYXJ0aWNsZS1jb250ZW50IHtcXG4gIG1hcmdpbi10b3A6IDIwcHg7XFxuICBsaW5lLWhlaWdodDogMS43O1xcbn1cXG5cXG4ubm8tcmVzdWx0cyB7XFxuICBncmlkLWNvbHVtbjogMSAvIC0xO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgcGFkZGluZzogNTBweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gIGJveC1zaGFkb3c6IDAgM3B4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjA3KTtcXG4gIGNvbG9yOiAjN2Y4YzhkO1xcbn1cXG5cXG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcXG4gIC5pbnRlcmVzdHMtZm9ybSB7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIG1heC13aWR0aDogOTUlO1xcbiAgfVxcbiAgXFxuICAjaW50ZXJlc3RzLWlucHV0LCAjc3VibWl0LWludGVyZXN0cyB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgfVxcbiAgXFxuICAuYXJ0aWNsZXMtY29udGFpbmVyIHtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XFxuICB9XFxufVxcblxcbmgyLnNlY3Rpb24tdGl0bGUge1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgbWFyZ2luOiAzMHB4IDA7XFxuICBjb2xvcjogIzJjM2U1MDtcXG4gIGZvbnQtc2l6ZTogMS44cmVtO1xcbn1cXG5cXG4vKiBMb2FkaW5nIGluZGljYXRvciAqL1xcbi5sb2FkaW5nIHtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIHBhZGRpbmc6IDMwcHg7XFxuICBjb2xvcjogIzdmOGM4ZDtcXG59XFxuXFxuLyogTmF2aWdhdGlvbiBidXR0b25zICovXFxuLm5hdi1idXR0b24ge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgcGFkZGluZzogOHB4IDIwcHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmN2ZhO1xcbiAgY29sb3I6ICMzNDk4ZGI7XFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxuICBib3JkZXItcmFkaXVzOiA2cHg7XFxuICBmb250LXdlaWdodDogNjAwO1xcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnM7XFxuICBtYXJnaW46IDAgNXB4O1xcbiAgYm9yZGVyOiAxcHggc29saWQgI2UwZTZlZDtcXG59XFxuXFxuLm5hdi1idXR0b246aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VkZjJmNztcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMnB4KTtcXG4gIGJveC1zaGFkb3c6IDAgMnB4IDVweCByZ2JhKDAsIDAsIDAsIDAuMSk7XFxufVxcblxcbi5uYXYtYnV0dG9uLmFjdGl2ZSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQ5OGRiO1xcbiAgY29sb3I6IHdoaXRlO1xcbiAgYm9yZGVyLWNvbG9yOiAjMzQ5OGRiO1xcbn0gXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcblxuICAgIC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xub3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XG5pbXBvcnQgeyBwaXBlbGluZSB9IGZyb20gJ0B4ZW5vdmEvdHJhbnNmb3JtZXJzJztcbmltcG9ydCB7IHN5bmNDYWNoZSwgZ2V0Q2FjaGVkQXJ0aWNsZSwgZ2V0Q2FjaGVkU3VtbWFyeSwgZ2V0Q2FjaGVkU2VhcmNoIH0gZnJvbSAnLi91dGlscy9jYWNoZVN5bmMnO1xuaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5cbi8qKlxuICogU2ltaWxhcml0eVNjb3JlciBjbGFzcyBwcm92aWRlcyBhIGZ1bGx5IG9mZmxpbmUgc2ltaWxhcml0eSBzY29yaW5nIGFsZ29yaXRobSBcbiAqIGZvciBjb21wYXJpbmcgc3RyaW5ncyBvbiBhIHNjYWxlIG9mIDAtMTAwIHdpdGggaGlnaCBhY2N1cmFjeS5cbiAqL1xuY2xhc3MgU2ltaWxhcml0eVNjb3JlciB7XG4gIHN0YXRpYyBwcmVwcm9jZXNzKHRleHQ6IHN0cmluZyk6IHN0cmluZ1tdIHtcbiAgICByZXR1cm4gdGV4dFxuICAgICAgLnRvTG93ZXJDYXNlKClcbiAgICAgIC5yZXBsYWNlKC9bXmEtejAtOVxcc10vZywgXCJcIilcbiAgICAgIC5zcGxpdCgvXFxzKy8pXG4gICAgICAuZmlsdGVyKEJvb2xlYW4pO1xuICB9XG5cbiAgc3RhdGljIGxldmVuc2h0ZWluU2ltaWxhcml0eShhOiBzdHJpbmcsIGI6IHN0cmluZyk6IG51bWJlciB7XG4gICAgY29uc3QgbSA9IGEubGVuZ3RoLCBuID0gYi5sZW5ndGg7XG4gICAgaWYgKG0gPT09IDAgfHwgbiA9PT0gMCkgcmV0dXJuIDA7XG5cbiAgICBjb25zdCBkcDogbnVtYmVyW11bXSA9IEFycmF5LmZyb20oeyBsZW5ndGg6IG0gKyAxIH0sICgpID0+IEFycmF5KG4gKyAxKS5maWxsKDApKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8PSBtOyBpKyspIGRwW2ldWzBdID0gaTtcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8PSBuOyBqKyspIGRwWzBdW2pdID0gajtcblxuICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IG07IGkrKykge1xuICAgICAgZm9yIChsZXQgaiA9IDE7IGogPD0gbjsgaisrKSB7XG4gICAgICAgIGNvbnN0IGNvc3QgPSBhW2kgLSAxXSA9PT0gYltqIC0gMV0gPyAwIDogMTtcbiAgICAgICAgZHBbaV1bal0gPSBNYXRoLm1pbihcbiAgICAgICAgICBkcFtpIC0gMV1bal0gKyAxLFxuICAgICAgICAgIGRwW2ldW2ogLSAxXSArIDEsXG4gICAgICAgICAgZHBbaSAtIDFdW2ogLSAxXSArIGNvc3RcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBkaXN0YW5jZSA9IGRwW21dW25dO1xuICAgIGNvbnN0IG1heExlbiA9IE1hdGgubWF4KG0sIG4pO1xuICAgIHJldHVybiAxMDAgKiAoMSAtIGRpc3RhbmNlIC8gbWF4TGVuKTsgLy8gcGVyY2VudGFnZVxuICB9XG5cbiAgc3RhdGljIGphY2NhcmRTaW1pbGFyaXR5KGFUb2tlbnM6IHN0cmluZ1tdLCBiVG9rZW5zOiBzdHJpbmdbXSk6IG51bWJlciB7XG4gICAgY29uc3Qgc2V0QSA9IG5ldyBTZXQoYVRva2Vucyk7XG4gICAgY29uc3Qgc2V0QiA9IG5ldyBTZXQoYlRva2Vucyk7XG4gICAgY29uc3QgaW50ZXJzZWN0aW9uID0gQXJyYXkuZnJvbShzZXRBKS5maWx0ZXIoeCA9PiBzZXRCLmhhcyh4KSkubGVuZ3RoO1xuICAgIGNvbnN0IHVuaW9uID0gQXJyYXkuZnJvbShuZXcgU2V0KFsuLi5hVG9rZW5zLCAuLi5iVG9rZW5zXSkpLmxlbmd0aDtcbiAgICByZXR1cm4gdW5pb24gPT09IDAgPyAwIDogKGludGVyc2VjdGlvbiAvIHVuaW9uKSAqIDEwMDtcbiAgfVxuXG4gIHN0YXRpYyB0b2tlbk92ZXJsYXAoYVRva2Vuczogc3RyaW5nW10sIGJUb2tlbnM6IHN0cmluZ1tdKTogbnVtYmVyIHtcbiAgICBsZXQgbWF0Y2ggPSAwO1xuICAgIGZvciAoY29uc3Qgd29yZCBvZiBhVG9rZW5zKSB7XG4gICAgICBpZiAoYlRva2Vucy5pbmNsdWRlcyh3b3JkKSkgbWF0Y2grKztcbiAgICB9XG4gICAgcmV0dXJuIGFUb2tlbnMubGVuZ3RoID09PSAwID8gMCA6IChtYXRjaCAvIGFUb2tlbnMubGVuZ3RoKSAqIDEwMDtcbiAgfVxuXG4gIC8qKlxuICAgKiBDb21wdXRlcyBhIHNpbWlsYXJpdHkgc2NvcmUgYmV0d2VlbiBhIHNob3J0IHN0cmluZyBhbmQgYSBsb25nZXIgc3RyaW5nLlxuICAgKiBcbiAgICogQHBhcmFtIHNtYWxsIC0gVGhlIHNtYWxsIHN0cmluZyBvciBxdWVyeVxuICAgKiBAcGFyYW0gbGFyZ2UgLSBUaGUgbGFyZ2VyIGNvbnRlbnQgc3RyaW5nXG4gICAqIEByZXR1cm5zIEEgbnVtYmVyIGZyb20gMCB0byAxMDAgaW5kaWNhdGluZyBzaW1pbGFyaXR5XG4gICAqL1xuICBzdGF0aWMgY29tcHV0ZShzbWFsbDogc3RyaW5nLCBsYXJnZTogc3RyaW5nKTogbnVtYmVyIHtcbiAgICBjb25zdCBhVG9rZW5zID0gdGhpcy5wcmVwcm9jZXNzKHNtYWxsKTtcbiAgICBjb25zdCBiVG9rZW5zID0gdGhpcy5wcmVwcm9jZXNzKGxhcmdlKTtcbiAgICBjb25zdCBzbWFsbENsZWFuID0gYVRva2Vucy5qb2luKFwiIFwiKTtcbiAgICBjb25zdCBsYXJnZUNsZWFuID0gYlRva2Vucy5qb2luKFwiIFwiKTtcblxuICAgIGNvbnN0IGxldiA9IHRoaXMubGV2ZW5zaHRlaW5TaW1pbGFyaXR5KHNtYWxsQ2xlYW4sIGxhcmdlQ2xlYW4pO1xuICAgIGNvbnN0IGphYyA9IHRoaXMuamFjY2FyZFNpbWlsYXJpdHkoYVRva2VucywgYlRva2Vucyk7XG4gICAgY29uc3QgdG9rID0gdGhpcy50b2tlbk92ZXJsYXAoYVRva2VucywgYlRva2Vucyk7XG5cbiAgICBjb25zdCBzY29yZSA9IDAuNCAqIGxldiArIDAuMyAqIGphYyArIDAuMyAqIHRvaztcbiAgICByZXR1cm4gTWF0aC5yb3VuZChzY29yZSk7XG4gIH1cbn1cblxuLy8gRGVmaW5lIHRoZSB0eXBlIGZvciBjYWxjdWxhdGlvbiBsb2cgc3RlcHNcbmludGVyZmFjZSBDYWxjdWxhdGlvblN0ZXAge1xuICAgIHN0ZXA6IHN0cmluZztcbiAgICB2YWx1ZTogYW55O1xufVxuXG4vLyBVcGRhdGUgdGhlIEFQSV9VUkwgY29uc3RhbnQgdG8gdXNlIHJlbGF0aXZlIHBhdGhzIGZvciBWZXJjZWwgY29tcGF0aWJpbGl0eVxuY29uc3QgQVBJX1VSTCA9ICcnOyAgLy8gRW1wdHkgc3RyaW5nIGZvciByZWxhdGl2ZSBwYXRoc1xuXG4vLyBBZGQgYSBjdXN0b20gbG9nZ2VyXG5jb25zdCBsb2dUb0ZpbGUgPSBhc3luYyAobWVzc2FnZTogc3RyaW5nLCBsZXZlbDogJ2luZm8nIHwgJ2Vycm9yJyB8ICdkZWJ1ZycgPSAnaW5mbycpOiBQcm9taXNlPHZvaWQ+ID0+IHtcbiAgICB0cnkge1xuICAgICAgICAvLyBMb2cgdG8gY29uc29sZVxuICAgICAgICBjb25zdCB0aW1lc3RhbXAgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCk7XG4gICAgICAgIGNvbnN0IGZvcm1hdHRlZE1lc3NhZ2UgPSBgWyR7dGltZXN0YW1wfV0gWyR7bGV2ZWwudG9VcHBlckNhc2UoKX1dICR7bWVzc2FnZX1gO1xuICAgICAgICBcbiAgICAgICAgLy8gU3RhbmRhcmQgY29uc29sZSBsb2dnaW5nXG4gICAgICAgIGlmIChsZXZlbCA9PT0gJ2Vycm9yJykge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihmb3JtYXR0ZWRNZXNzYWdlKTtcbiAgICAgICAgfSBlbHNlIGlmIChsZXZlbCA9PT0gJ2RlYnVnJykge1xuICAgICAgICAgICAgY29uc29sZS5kZWJ1Zyhmb3JtYXR0ZWRNZXNzYWdlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGZvcm1hdHRlZE1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBTZW5kIGxvZyB0byBiYWNrZW5kIHRvIHdyaXRlIHRvIGZpbGVcbiAgICAgICAgYXdhaXQgZmV0Y2goYCR7QVBJX1VSTH0vbG9nYCwge1xuICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBmb3JtYXR0ZWRNZXNzYWdlLFxuICAgICAgICAgICAgICAgIGxldmVsLFxuICAgICAgICAgICAgICAgIHNvdXJjZTogJ2Zyb250ZW5kJ1xuICAgICAgICAgICAgfSlcbiAgICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgLy8gSWYgbG9nZ2luZyBmYWlscywgYXQgbGVhc3Qgc2hvdyBpbiBjb25zb2xlXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoYEZhaWxlZCB0byBsb2cgdG8gZmlsZTogJHtlcnJvcn1gKTtcbiAgICB9XG59O1xuXG5pbnRlcmZhY2UgQXJ0aWNsZSB7XG4gICAgdGl0bGU6IHN0cmluZztcbiAgICBsaW5rOiBzdHJpbmc7XG4gICAgc3ViamVjdDogc3RyaW5nO1xuICAgIHNjb3JlOiBudW1iZXI7XG4gICAgc3VtbWFyeT86IHN0cmluZztcbiAgICBpZD86IHN0cmluZztcbiAgICBzY29yZUNvbXBvbmVudHM/OiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+O1xufVxuXG5pbnRlcmZhY2UgQXJ0aWNsZURldGFpbCB7XG4gICAgdGl0bGU6IHN0cmluZztcbiAgICBsaW5rOiBzdHJpbmc7XG4gICAgc3VtbWFyeTogc3RyaW5nO1xuICAgIGNvbnRlbnQ/OiBzdHJpbmc7XG59XG5cbi8vIERlZmluZSB0eXBlcyBmb3IgdGhlIHplcm8tc2hvdCBjbGFzc2lmaWNhdGlvbiByZXN1bHRzXG5pbnRlcmZhY2UgWmVyb1Nob3RDbGFzc2lmaWNhdGlvbk91dHB1dCB7XG4gICAgc2VxdWVuY2U6IHN0cmluZztcbiAgICBsYWJlbHM6IHN0cmluZ1tdO1xuICAgIHNjb3JlczogbnVtYmVyW107XG59XG5cbi8qKlxuICogQ3VzdG9tIHJhbmtpbmcgc3lzdGVtIGZvciBhcnRpY2xlcyAtIHVzZXMgYWR2YW5jZWQgc2ltaWxhcml0eSBzY29yaW5nXG4gKiBAcGFyYW0gYXJ0aWNsZSBBcnRpY2xlIHRvIHNjb3JlXG4gKiBAcGFyYW0gdXNlckludGVyZXN0cyBVc2VyJ3Mgc3BlY2lmaWVkIGludGVyZXN0c1xuICogQHBhcmFtIGFydGljbGVDb2xsZWN0aW9uIEZ1bGwgY29sbGVjdGlvbiBvZiBhcnRpY2xlcyBmb3IgY29udGV4dHVhbCByYW5raW5nXG4gKiBAcmV0dXJucyBBIHNjb3JlIGJldHdlZW4gMC0xMDBcbiAqL1xuY29uc3QgY3VzdG9tUmFua2luZ1N5c3RlbSA9IGFzeW5jIChcbiAgICBhcnRpY2xlOiBBcnRpY2xlLCBcbiAgICB1c2VySW50ZXJlc3RzOiBzdHJpbmcsXG4gICAgYXJ0aWNsZUNvbGxlY3Rpb246IEFydGljbGVbXVxuKTogUHJvbWlzZTxudW1iZXI+ID0+IHtcbiAgICB0cnkge1xuICAgICAgICBjb25zb2xlLmxvZyhgXFxuPT09PT09PT09PSBTQ09SSU5HIEFSVElDTEU6IFwiJHthcnRpY2xlLnRpdGxlfVwiIChJRDogJHthcnRpY2xlLmlkIHx8ICd1bmtub3duJ30pID09PT09PT09PT1gKTtcbiAgICAgICAgY29uc29sZS5sb2coYEludGVyZXN0IFRlcm1zOiBcIiR7dXNlckludGVyZXN0c31cImApO1xuICAgICAgICBcbiAgICAgICAgLy8gQmFzZSBzY29yZSAoNzAtOTUgcmFuZ2UpXG4gICAgICAgIGxldCBiYXNlU2NvcmUgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAyNSkgKyA3MDtcbiAgICAgICAgY29uc29sZS5sb2coYEJhc2Ugc2NvcmUgKGlmIG5vIGludGVyZXN0cyk6ICR7YmFzZVNjb3JlfWApO1xuICAgICAgICBcbiAgICAgICAgaWYgKCF1c2VySW50ZXJlc3RzLnRyaW0oKSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coYE5vIGludGVyZXN0cyBwcm92aWRlZCAtIFVzaW5nIGJhc2Ugc2NvcmU6ICR7YmFzZVNjb3JlfWApO1xuICAgICAgICAgICAgcmV0dXJuIGJhc2VTY29yZTsgLy8gRGVmYXVsdCBzY29yZSBpZiBubyBpbnRlcmVzdHNcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gUHJvY2VzcyBpbnRlcmVzdCB0ZXJtc1xuICAgICAgICBjb25zdCBpbnRlcmVzdFRlcm1zID0gdXNlckludGVyZXN0c1xuICAgICAgICAgICAgLnRvTG93ZXJDYXNlKClcbiAgICAgICAgICAgIC5zcGxpdCgvW1xccyxdKy8pXG4gICAgICAgICAgICAuZmlsdGVyKHRlcm0gPT4gdGVybS5sZW5ndGggPiAyKVxuICAgICAgICAgICAgLm1hcCh0ZXJtID0+IHRlcm0udHJpbSgpKTtcbiAgICAgICAgXG4gICAgICAgIGNvbnNvbGUubG9nKGBQYXJzZWQgaW50ZXJlc3QgdGVybXMgKCR7aW50ZXJlc3RUZXJtcy5sZW5ndGh9KTpgLCBpbnRlcmVzdFRlcm1zKTtcbiAgICAgICAgXG4gICAgICAgIGlmIChpbnRlcmVzdFRlcm1zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coYE5vIHZhbGlkIGludGVyZXN0IHRlcm1zIGFmdGVyIGZpbHRlcmluZyAtIFVzaW5nIGJhc2Ugc2NvcmU6ICR7YmFzZVNjb3JlfWApO1xuICAgICAgICAgICAgcmV0dXJuIGJhc2VTY29yZTsgLy8gTm8gdmFsaWQgaW50ZXJlc3QgdGVybXNcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gTG9hZCBzdW1tYXJ5IGZyb20gLmNhY2hlL3N1bW1hcnlfe2FydGljbGUuaWR9Lmpzb24gaWYgcG9zc2libGVcbiAgICAgICAgbGV0IGFydGljbGVTdW1tYXJ5ID0gJyc7XG4gICAgICAgIGxldCBzdW1tYXJ5U291cmNlID0gJ25vbmUnO1xuICAgICAgICBcbiAgICAgICAgaWYgKGFydGljbGUuaWQpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgc3VtbWFyeVBhdGggPSBgLmNhY2hlL3N1bW1hcnlfJHthcnRpY2xlLmlkfS5qc29uYDtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgQVRURU1QVElORyBUTyBMT0FEIFNVTU1BUlkgRklMRTogJHtzdW1tYXJ5UGF0aH1gKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHN1bW1hcnlQYXRoKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgU3VtbWFyeSBmaWxlIHJlc3BvbnNlIHN0YXR1czpgLCByZXNwb25zZS5zdGF0dXMsIHJlc3BvbnNlLnN0YXR1c1RleHQpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5vaykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBzdW1tYXJ5RGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coYFN1bW1hcnkgZmlsZSByYXcgZGF0YTpgLCBzdW1tYXJ5RGF0YSk7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBpZiAoc3VtbWFyeURhdGEuc3VtbWFyeSAmJiB0eXBlb2Ygc3VtbWFyeURhdGEuc3VtbWFyeSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFydGljbGVTdW1tYXJ5ID0gc3VtbWFyeURhdGEuc3VtbWFyeTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1bW1hcnlTb3VyY2UgPSAnY2FjaGUgZmlsZSc7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgU1VDQ0VTUzogTG9hZGVkIHN1bW1hcnkgZnJvbSBmaWxlICgke2FydGljbGVTdW1tYXJ5Lmxlbmd0aH0gY2hhcnMpYCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgU3VtbWFyeSBwcmV2aWV3OiBcIiR7YXJ0aWNsZVN1bW1hcnkuc3Vic3RyaW5nKDAsIDEwMCl9JHthcnRpY2xlU3VtbWFyeS5sZW5ndGggPiAxMDAgPyAnLi4uJyA6ICcnfVwiYCk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oYEZpbGUgbG9hZGVkIGJ1dCBubyB2YWxpZCBzdW1tYXJ5IGZvdW5kIGluIGRhdGFgKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihgRmFpbGVkIHRvIGxvYWQgc3VtbWFyeSBmaWxlOiAke3Jlc3BvbnNlLnN0YXR1c30gJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihgRXJyb3IgbG9hZGluZyBzdW1tYXJ5IGZvciBhcnRpY2xlIGlkICR7YXJ0aWNsZS5pZH06YCwgZXJyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBObyBhcnRpY2xlIElEIGF2YWlsYWJsZSAtIENhbm5vdCBsb2FkIHN1bW1hcnkgZmlsZWApO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBpZiAoIWFydGljbGVTdW1tYXJ5ICYmIGFydGljbGUuc3VtbWFyeSkge1xuICAgICAgICAgICAgYXJ0aWNsZVN1bW1hcnkgPSBhcnRpY2xlLnN1bW1hcnk7XG4gICAgICAgICAgICBzdW1tYXJ5U291cmNlID0gJ2FydGljbGUgb2JqZWN0JztcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBGQUxMQkFDSzogVXNpbmcgc3VtbWFyeSBmcm9tIGFydGljbGUgb2JqZWN0ICgke2FydGljbGVTdW1tYXJ5Lmxlbmd0aH0gY2hhcnMpYCk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgU3VtbWFyeSBwcmV2aWV3OiBcIiR7YXJ0aWNsZVN1bW1hcnkuc3Vic3RyaW5nKDAsIDEwMCl9JHthcnRpY2xlU3VtbWFyeS5sZW5ndGggPiAxMDAgPyAnLi4uJyA6ICcnfVwiYCk7XG4gICAgICAgIH0gZWxzZSBpZiAoIWFydGljbGVTdW1tYXJ5KSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgV0FSTklORzogTm8gc3VtbWFyeSBhdmFpbGFibGUgZnJvbSBhbnkgc291cmNlIWApO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBjb25zb2xlLmxvZyhgRmluYWwgc3VtbWFyeSBzb3VyY2U6ICR7c3VtbWFyeVNvdXJjZX1gKTtcbiAgICAgICAgY29uc29sZS5sb2coYEZpbmFsIHN1bW1hcnkgbGVuZ3RoOiAke2FydGljbGVTdW1tYXJ5Lmxlbmd0aH0gY2hhcmFjdGVyc2ApO1xuICAgICAgICBcbiAgICAgICAgLy8gUHJlcGFyZSBhcnRpY2xlIGNvbnRlbnQgZm9yIHNpbWlsYXJpdHkgc2NvcmluZ1xuICAgICAgICBjb25zdCB0aXRsZVRleHQgPSBhcnRpY2xlLnRpdGxlO1xuICAgICAgICBjb25zdCBzdWJqZWN0VGV4dCA9IGFydGljbGUuc3ViamVjdCB8fCAnJztcbiAgICAgICAgXG4gICAgICAgIC8vIENyZWF0ZSBmdWxsIHRleHQgcmVwcmVzZW50YXRpb24gZm9yIHRoZSBhcnRpY2xlXG4gICAgICAgIGNvbnN0IGFydGljbGVGdWxsVGV4dCA9IGAke3RpdGxlVGV4dH0gJHtzdWJqZWN0VGV4dH0gJHthcnRpY2xlU3VtbWFyeX1gO1xuICAgICAgICBcbiAgICAgICAgY29uc29sZS5sb2coYFxcbi0tLS0tIFNDT1JJTkcgQ09NUE9ORU5UIDE6IFRFWFQgU0lNSUxBUklUWSAoMC02MCBwb2ludHMpIC0tLS0tYCk7XG4gICAgICAgIC8vIC0tLS0gMS4gVEVYVCBTSU1JTEFSSVRZIFNDT1JJTkcgKDAtNjAgcG9pbnRzKSAtLS0tXG4gICAgICAgIGxldCBzaW1pbGFyaXR5U2NvcmUgPSAwO1xuICAgICAgICBcbiAgICAgICAgaWYgKGFydGljbGVGdWxsVGV4dC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgQ29tcHV0aW5nIHRleHQgc2ltaWxhcml0eSB1c2luZyBhZHZhbmNlZCBtZXRob2RzLi4uYCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIENhbGN1bGF0ZSBzaW1pbGFyaXR5IGJldHdlZW4gdXNlciBpbnRlcmVzdHMgYW5kIGFydGljbGUgY29udGVudFxuICAgICAgICAgICAgY29uc3QgcmF3U2ltaWxhcml0eSA9IFNpbWlsYXJpdHlTY29yZXIuY29tcHV0ZSh1c2VySW50ZXJlc3RzLCBhcnRpY2xlRnVsbFRleHQpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coYFJhdyBzaW1pbGFyaXR5IHNjb3JlOiAke3Jhd1NpbWlsYXJpdHl9IC8gMTAwYCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIFdlaWdodCB0aGUgc2ltaWxhcml0eSBzY29yZSAobWF4IDYwIHBvaW50cylcbiAgICAgICAgICAgIHNpbWlsYXJpdHlTY29yZSA9IChyYXdTaW1pbGFyaXR5IC8gMTAwKSAqIDYwO1xuICAgICAgICAgICAgY29uc29sZS5sb2coYFdlaWdodGVkIHNpbWlsYXJpdHkgc2NvcmU6ICR7c2ltaWxhcml0eVNjb3JlLnRvRml4ZWQoMil9IC8gNjAgcG9pbnRzYCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIERldGFpbGVkIHNpbWlsYXJpdHkgYnJlYWtkb3duXG4gICAgICAgICAgICBjb25zdCBpbnRlcmVzdFRva2VucyA9IFNpbWlsYXJpdHlTY29yZXIucHJlcHJvY2Vzcyh1c2VySW50ZXJlc3RzKTtcbiAgICAgICAgICAgIGNvbnN0IGFydGljbGVUb2tlbnMgPSBTaW1pbGFyaXR5U2NvcmVyLnByZXByb2Nlc3MoYXJ0aWNsZUZ1bGxUZXh0KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gQ2FsY3VsYXRlIGluZGl2aWR1YWwgbWV0cmljcyBmb3IgbG9nZ2luZ1xuICAgICAgICAgICAgY29uc3QgbGV2U2ltID0gU2ltaWxhcml0eVNjb3Jlci5sZXZlbnNodGVpblNpbWlsYXJpdHkoXG4gICAgICAgICAgICAgICAgaW50ZXJlc3RUb2tlbnMuam9pbihcIiBcIiksIFxuICAgICAgICAgICAgICAgIGFydGljbGVUb2tlbnMuc2xpY2UoMCwgMjAwKS5qb2luKFwiIFwiKSAgLy8gTGltaXQgZm9yIHBlcmZvcm1hbmNlXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgY29uc3QgamFjU2ltID0gU2ltaWxhcml0eVNjb3Jlci5qYWNjYXJkU2ltaWxhcml0eShpbnRlcmVzdFRva2VucywgYXJ0aWNsZVRva2Vucyk7XG4gICAgICAgICAgICBjb25zdCB0b2tTaW0gPSBTaW1pbGFyaXR5U2NvcmVyLnRva2VuT3ZlcmxhcChpbnRlcmVzdFRva2VucywgYXJ0aWNsZVRva2Vucyk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBTaW1pbGFyaXR5IG1ldHJpY3MgYnJlYWtkb3duOlxuICAtIExldmVuc2h0ZWluIHNpbWlsYXJpdHk6ICR7bGV2U2ltLnRvRml4ZWQoMil9JVxuICAtIEphY2NhcmQgc2ltaWxhcml0eTogICAgICR7amFjU2ltLnRvRml4ZWQoMil9JVxuICAtIFRva2VuIG92ZXJsYXA6ICAgICAgICAgICR7dG9rU2ltLnRvRml4ZWQoMil9JWApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5sb2coYEVtcHR5IGFydGljbGUgY29udGVudCAtIFNpbWlsYXJpdHkgc2NvcmU6IDAgLyA2MCBwb2ludHNgKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgY29uc29sZS5sb2coYFxcbi0tLS0tIFNDT1JJTkcgQ09NUE9ORU5UIDI6IENPTlRFWFRVQUwgUkVMRVZBTkNFICgwLTMwIHBvaW50cykgLS0tLS1gKTtcbiAgICAgICAgLy8gLS0tLSAyLiBDT05URVhUVUFMIFJFTEVWQU5DRSAoMC0zMCBwb2ludHMpIC0tLS1cbiAgICAgICAgbGV0IGNvbnRleHR1YWxTY29yZSA9IDA7XG4gICAgICAgIFxuICAgICAgICAvLyBUaXRsZSB3ZWlnaHQgaXMgaGlnaGVyIGlmIHVzZXIgaW50ZXJlc3RzIGFwcGVhciBpbiB0aGUgdGl0bGVcbiAgICAgICAgY29uc3QgdGl0bGVJbXBvcnRhbmNlID0gdXNlckludGVyZXN0cy5zcGxpdCgvXFxzKy8pLnNvbWUodGVybSA9PiBcbiAgICAgICAgICAgIGFydGljbGUudGl0bGUudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyh0ZXJtLnRvTG93ZXJDYXNlKCkpXG4gICAgICAgICkgPyAyLjAgOiAxLjA7XG4gICAgICAgIFxuICAgICAgICBpZiAodGl0bGVJbXBvcnRhbmNlID4gMS4wKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgSW50ZXJlc3QgdGVybXMgZm91bmQgaW4gdGl0bGU6IGFwcGx5aW5nICR7dGl0bGVJbXBvcnRhbmNlfXggdGl0bGUgaW1wb3J0YW5jZSBtdWx0aXBsaWVyYCk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIENhbGN1bGF0ZSBzZW1hbnRpYyBzaW1pbGFyaXR5IGJhc2VkIG9uIGtleSBwYXJ0cyB3aXRoIGRpZmZlcmVudCB3ZWlnaHRzXG4gICAgICAgIGNvbnN0IHRpdGxlU2ltaWxhcml0eSA9IFNpbWlsYXJpdHlTY29yZXIuY29tcHV0ZSh1c2VySW50ZXJlc3RzLCB0aXRsZVRleHQpICogdGl0bGVJbXBvcnRhbmNlO1xuICAgICAgICBjb25zb2xlLmxvZyhgVGl0bGUgc2ltaWxhcml0eTogJHsodGl0bGVTaW1pbGFyaXR5IC8gdGl0bGVJbXBvcnRhbmNlKS50b0ZpeGVkKDIpfSUgKHJhdykgw5cgJHt0aXRsZUltcG9ydGFuY2V9ID0gJHt0aXRsZVNpbWlsYXJpdHkudG9GaXhlZCgyKX0lYCk7XG4gICAgICAgIFxuICAgICAgICBjb25zdCBzdWJqZWN0U2ltaWxhcml0eSA9IHN1YmplY3RUZXh0ID8gXG4gICAgICAgICAgICBTaW1pbGFyaXR5U2NvcmVyLmNvbXB1dGUodXNlckludGVyZXN0cywgc3ViamVjdFRleHQpIDogMDtcbiAgICAgICAgY29uc29sZS5sb2coYFN1YmplY3Qgc2ltaWxhcml0eTogJHtzdWJqZWN0U2ltaWxhcml0eS50b0ZpeGVkKDIpfSVgKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFdlaWdodGVkIGF2ZXJhZ2Ugb2YgdGl0bGUgYW5kIHN1YmplY3Qgc2ltaWxhcml0aWVzXG4gICAgICAgIGNvbnN0IHdlaWdodGVkQ29udGV4dFNpbWlsYXJpdHkgPSAodGl0bGVTaW1pbGFyaXR5ICogMC43KSArIChzdWJqZWN0U2ltaWxhcml0eSAqIDAuMyk7XG4gICAgICAgIGNvbnNvbGUubG9nKGBXZWlnaHRlZCBjb250ZXh0IHNpbWlsYXJpdHk6ICR7d2VpZ2h0ZWRDb250ZXh0U2ltaWxhcml0eS50b0ZpeGVkKDIpfSVgKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFNjYWxlIHRvIHRoZSAzMC1wb2ludCBzY29yaW5nIGNvbXBvbmVudFxuICAgICAgICBjb250ZXh0dWFsU2NvcmUgPSAod2VpZ2h0ZWRDb250ZXh0U2ltaWxhcml0eSAvIDEwMCkgKiAzMDtcbiAgICAgICAgY29uc29sZS5sb2coYENvbnRleHR1YWwgcmVsZXZhbmNlIHNjb3JlOiAke2NvbnRleHR1YWxTY29yZS50b0ZpeGVkKDIpfSAvIDMwIHBvaW50c2ApO1xuICAgICAgICBcbiAgICAgICAgY29uc29sZS5sb2coYFxcbi0tLS0tIFNDT1JJTkcgQ09NUE9ORU5UIDM6IEZSRVNITkVTUyAmIFVOSVFVRU5FU1MgKDAtMTAgcG9pbnRzKSAtLS0tLWApO1xuICAgICAgICAvLyAtLS0tIDMuIEZSRVNITkVTUyBGQUNUT1IgV0lUSCBVTklRVUVORVNTICgwLTEwIHBvaW50cykgLS0tLVxuICAgICAgICBsZXQgZnJlc2huZXNzU2NvcmUgPSAwO1xuICAgICAgICBcbiAgICAgICAgLy8gQmFzZSBmcmVzaG5lc3Mgc2NvcmUgZnJvbSBhcnRpY2xlIElEIChjb25zaXN0ZW50IHZhbHVlKVxuICAgICAgICBjb25zdCBiYXNlRnJlc2huZXNzID0gYXJ0aWNsZS5pZCA/IFxuICAgICAgICAgICAgKHBhcnNlSW50KGFydGljbGUuaWQucmVwbGFjZSgvXFxEL2csICcnKS5zbGljZSgtMikgfHwgJzAnKSAlIDgpIDogXG4gICAgICAgICAgICBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA4KTtcbiAgICAgICAgXG4gICAgICAgIGNvbnNvbGUubG9nKGBCYXNlIGZyZXNobmVzczogJHtiYXNlRnJlc2huZXNzfSAvIDhgKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFVuaXF1ZW5lc3MgYm9udXM6IGlmIGFydGljbGUgdGl0bGUgY29udGFpbnMgdW5jb21tb24gd29yZHMgY29tcGFyZWQgdG8gb3RoZXIgYXJ0aWNsZXNcbiAgICAgICAgY29uc3QgYWxsVGl0bGVzID0gYXJ0aWNsZUNvbGxlY3Rpb24ubWFwKGEgPT4gYS50aXRsZS50b0xvd2VyQ2FzZSgpKTtcbiAgICAgICAgY29uc3QgdGl0bGVXb3JkcyA9IHRpdGxlVGV4dC50b0xvd2VyQ2FzZSgpLnNwbGl0KC9cXHMrLykuZmlsdGVyKHcgPT4gdy5sZW5ndGggPiA0KTsgLy8gT25seSBjb25zaWRlciBzdWJzdGFudGlhbCB3b3Jkc1xuICAgICAgICBcbiAgICAgICAgbGV0IHVuY29tbW9uV29yZENvdW50ID0gMDtcbiAgICAgICAgdGl0bGVXb3Jkcy5mb3JFYWNoKHdvcmQgPT4ge1xuICAgICAgICAgICAgLy8gQ291bnQgaG93IG1hbnkgb3RoZXIgYXJ0aWNsZXMgY29udGFpbiB0aGlzIHdvcmRcbiAgICAgICAgICAgIGNvbnN0IG9jY3VycmVuY2VDb3VudCA9IGFsbFRpdGxlcy5maWx0ZXIodCA9PiB0LmluY2x1ZGVzKHdvcmQpKS5sZW5ndGg7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIElmIHdvcmQgYXBwZWFycyBpbiBsZXNzIHRoYW4gMjAlIG9mIGFydGljbGVzLCBjb25zaWRlciBpdCB1bmNvbW1vblxuICAgICAgICAgICAgaWYgKG9jY3VycmVuY2VDb3VudCA8PSBNYXRoLm1heCgxLCBNYXRoLmZsb29yKGFydGljbGVDb2xsZWN0aW9uLmxlbmd0aCAqIDAuMikpKSB7XG4gICAgICAgICAgICAgICAgdW5jb21tb25Xb3JkQ291bnQrKztcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgICBVbmNvbW1vbiB3b3JkIGZvdW5kOiBcIiR7d29yZH1cIiAoaW4gJHtvY2N1cnJlbmNlQ291bnR9IGFydGljbGVzKWApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIC8vIENhbGN1bGF0ZSB1bmlxdWVuZXNzIGJvbnVzIChtYXggKzIgcG9pbnRzKVxuICAgICAgICBjb25zdCB1bmlxdWVuZXNzQm9udXMgPSBNYXRoLm1pbigyLCB1bmNvbW1vbldvcmRDb3VudCAqIDAuNSk7XG4gICAgICAgIGNvbnNvbGUubG9nKGBVbmlxdWVuZXNzIGJvbnVzOiAke3VuaXF1ZW5lc3NCb251cy50b0ZpeGVkKDIpfSBwb2ludHMgKCR7dW5jb21tb25Xb3JkQ291bnR9IHVuY29tbW9uIHdvcmRzKWApO1xuICAgICAgICBcbiAgICAgICAgLy8gQ29tYmluZSBiYXNlIGZyZXNobmVzcyB3aXRoIHVuaXF1ZW5lc3MgYm9udXNcbiAgICAgICAgZnJlc2huZXNzU2NvcmUgPSBiYXNlRnJlc2huZXNzICsgdW5pcXVlbmVzc0JvbnVzO1xuICAgICAgICBjb25zb2xlLmxvZyhgRnJlc2huZXNzICYgdW5pcXVlbmVzcyBzY29yZTogJHtmcmVzaG5lc3NTY29yZS50b0ZpeGVkKDIpfSAvIDEwIHBvaW50c2ApO1xuICAgICAgICBcbiAgICAgICAgY29uc29sZS5sb2coYFxcbi0tLS0tIEZJTkFMIFNDT1JFIENBTENVTEFUSU9OIC0tLS0tYCk7XG4gICAgICAgIC8vIC0tLS0gQ09NQklORSBTQ09SRVMgLS0tLVxuICAgICAgICBjb25zdCBmaW5hbFNjb3JlID0gc2ltaWxhcml0eVNjb3JlICsgY29udGV4dHVhbFNjb3JlICsgZnJlc2huZXNzU2NvcmU7XG4gICAgICAgIGNvbnNvbGUubG9nKGBGaW5hbCBzY29yZSBicmVha2Rvd246XG4gIC0gVGV4dCBTaW1pbGFyaXR5OiAgICAgICAgICR7c2ltaWxhcml0eVNjb3JlLnRvRml4ZWQoMil9IC8gNjBcbiAgLSBDb250ZXh0dWFsIFJlbGV2YW5jZTogICAgJHtjb250ZXh0dWFsU2NvcmUudG9GaXhlZCgyKX0gLyAzMFxuICAtIEZyZXNobmVzcyAmIFVuaXF1ZW5lc3M6ICAke2ZyZXNobmVzc1Njb3JlLnRvRml4ZWQoMil9IC8gMTBcbiAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICBUT1RBTCBTQ09SRTogICAgICAgICAgICAgICAke2ZpbmFsU2NvcmUudG9GaXhlZCgyKX0gLyAxMDBcbmApO1xuICAgICAgICBcbiAgICAgICAgLy8gTG9nIGFsbCBzY29yaW5nIGNvbXBvbmVudHNcbiAgICAgICAgY29uc3Qgc2NvcmVCcmVha2Rvd24gPSB7XG4gICAgICAgICAgICBzaW1pbGFyaXR5OiBzaW1pbGFyaXR5U2NvcmUudG9GaXhlZCgyKSxcbiAgICAgICAgICAgIGNvbnRleHR1YWw6IGNvbnRleHR1YWxTY29yZS50b0ZpeGVkKDIpLFxuICAgICAgICAgICAgZnJlc2huZXNzOiBmcmVzaG5lc3NTY29yZS50b0ZpeGVkKDIpLFxuICAgICAgICAgICAgZmluYWw6IGZpbmFsU2NvcmUudG9GaXhlZCgyKVxuICAgICAgICB9O1xuICAgICAgICBcbiAgICAgICAgY29uc29sZS5sb2coYFNjb3JlIGNvbXBvbmVudHMgc3RvcmVkOmAsIHNjb3JlQnJlYWtkb3duKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFN0b3JlIHNjb3JlIGNvbXBvbmVudHMgaW4gdGhlIGFydGljbGUgb2JqZWN0IGZvciBkaXNwbGF5XG4gICAgICAgIGFydGljbGUuc2NvcmVDb21wb25lbnRzID0gc2NvcmVCcmVha2Rvd247XG4gICAgICAgIFxuICAgICAgICBjb25zb2xlLmxvZyhgXFxuLS0tLS0gU0NPUklORyBDT01QTEVURSAtLS0tLWApO1xuICAgICAgICBcbiAgICAgICAgLy8gRW5zdXJlIHNjb3JlIGlzIGJldHdlZW4gMC0xMDBcbiAgICAgICAgcmV0dXJuIE1hdGgubWluKDEwMCwgTWF0aC5tYXgoMCwgZmluYWxTY29yZSkpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0VSUk9SIElOIFJBTktJTkcgU1lTVEVNOicsIGVycm9yKTtcbiAgICAgICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDI1KSArIDcwOyAvLyBGYWxsYmFjayBzY29yZVxuICAgIH1cbn07XG5cbi8vIEFQSSBTZXJ2aWNlXG5jbGFzcyBBcGlTZXJ2aWNlIHtcbiAgICBwcml2YXRlIGJhc2VVcmw6IHN0cmluZyA9ICcnO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIC8vIEluIGRldmVsb3BtZW50LCB1c2UgYSBkaWZmZXJlbnQgYmFzZSBVUkxcbiAgICAgICAgdGhpcy5iYXNlVXJsID0gd2luZG93LmxvY2F0aW9uLmhvc3RuYW1lID09PSAnbG9jYWxob3N0JyBcbiAgICAgICAgICAgID8gJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMCcgXG4gICAgICAgICAgICA6ICcnO1xuICAgICAgICBcbiAgICAgICAgY29uc29sZS5sb2coYEFwaVNlcnZpY2UgaW5pdGlhbGl6ZWQgd2l0aCBiYXNlVXJsOiAke3RoaXMuYmFzZVVybH1gKTtcbiAgICAgICAgY29uc29sZS5sb2coYEN1cnJlbnQgaG9zdG5hbWU6ICR7d2luZG93LmxvY2F0aW9uLmhvc3RuYW1lfWApO1xuICAgIH1cblxuICAgIGFzeW5jIGdldEFydGljbGVzKGludGVyZXN0cz86IHN0cmluZyk6IFByb21pc2U8QXJ0aWNsZVtdPiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBxdWVyeVBhcmFtcyA9IGludGVyZXN0cyA/IGA/aW50ZXJlc3RzPSR7ZW5jb2RlVVJJQ29tcG9uZW50KGludGVyZXN0cyl9YCA6ICcnO1xuICAgICAgICAgICAgY29uc3QgdXJsID0gYCR7dGhpcy5iYXNlVXJsfS9hcGkvYXJ0aWNsZXMke3F1ZXJ5UGFyYW1zfWA7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgRmV0Y2hpbmcgYXJ0aWNsZXMgZnJvbTogJHt1cmx9YCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYEVycm9yIHJlc3BvbnNlIGZyb20gc2VydmVyOiAke3Jlc3BvbnNlLnN0YXR1c31gKTtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBmZXRjaCBhcnRpY2xlczogJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coYEFydGljbGVzIGZldGNoZWQgc3VjY2Vzc2Z1bGx5LiBDb3VudDogJHtkYXRhLmxlbmd0aH1gKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBTYW1wbGUgYXJ0aWNsZSBkYXRhOmAsIGRhdGEubGVuZ3RoID4gMCA/IGRhdGFbMF0gOiAnTm8gYXJ0aWNsZXMnKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gRW5zdXJlIGVhY2ggYXJ0aWNsZSBoYXMgdGhlIGV4cGVjdGVkIGZvcm1hdCBhbmQgcHJvcGVydGllc1xuICAgICAgICAgICAgY29uc3QgZm9ybWF0dGVkQXJ0aWNsZXMgPSBkYXRhLm1hcCgoYXJ0aWNsZTogYW55KSA9PiAoe1xuICAgICAgICAgICAgICAgIGlkOiBhcnRpY2xlLmlkIHx8ICcnLCAvLyBQcmVzZXJ2ZSBJRCBmcm9tIEFQSSByZXNwb25zZVxuICAgICAgICAgICAgICAgIHRpdGxlOiBhcnRpY2xlLnRpdGxlIHx8ICdVbnRpdGxlZCBBcnRpY2xlJyxcbiAgICAgICAgICAgICAgICBzdWJqZWN0OiBhcnRpY2xlLnN1YmplY3QgfHwgJycsXG4gICAgICAgICAgICAgICAgbGluazogYXJ0aWNsZS5saW5rIHx8ICcnLFxuICAgICAgICAgICAgICAgIHNjb3JlOiBhcnRpY2xlLnNjb3JlIHx8IDAsXG4gICAgICAgICAgICAgICAgc3VtbWFyeTogYXJ0aWNsZS5zdW1tYXJ5IHx8ICcnXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHJldHVybiBmb3JtYXR0ZWRBcnRpY2xlcztcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIGFydGljbGVzOicsIGVycm9yKTtcbiAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFzeW5jIGdldEFydGljbGVEZXRhaWxzKGFydGljbGVJZDogc3RyaW5nKTogUHJvbWlzZTxBcnRpY2xlRGV0YWlsIHwgbnVsbD4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgdXJsID0gYCR7dGhpcy5iYXNlVXJsfS9hcGkvYXJ0aWNsZS8ke2FydGljbGVJZH1gO1xuICAgICAgICAgICAgY29uc29sZS5sb2coYEZldGNoaW5nIGFydGljbGUgZGV0YWlscyBmcm9tOiAke3VybH1gKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihgRXJyb3IgcmVzcG9uc2UgZnJvbSBzZXJ2ZXI6ICR7cmVzcG9uc2Uuc3RhdHVzfWApO1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGZldGNoIGFydGljbGUgZGV0YWlsczogJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ0FydGljbGUgZGV0YWlscyByZXNwb25zZTonLCBkYXRhKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gSWYgd2UgZ2V0IGEgcHJvcGVyIHJlc3BvbnNlIHdpdGggYXJ0aWNsZSBkYXRhXG4gICAgICAgICAgICBpZiAoZGF0YS5zdGF0dXMgPT09ICdzdWNjZXNzJyAmJiBkYXRhLmFydGljbGUpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnQXJ0aWNsZSBkZXRhaWxzIGZldGNoZWQgc3VjY2Vzc2Z1bGx5OicsIGRhdGEuYXJ0aWNsZS50aXRsZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IGRhdGEuYXJ0aWNsZS50aXRsZSxcbiAgICAgICAgICAgICAgICAgICAgbGluazogZGF0YS5hcnRpY2xlLmxpbmssXG4gICAgICAgICAgICAgICAgICAgIHN1bW1hcnk6IGRhdGEuYXJ0aWNsZS5zdW1tYXJ5LFxuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBkYXRhLmFydGljbGUuY29udGVudFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0ludmFsaWQgYXJ0aWNsZSBkYXRhIGZvcm1hdDonLCBkYXRhKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIGFydGljbGUgZGV0YWlsczonLCBlcnJvcik7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFzeW5jIGFuYWx5emVJbnRlcmVzdHMoaW50ZXJlc3RzOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHt0aGlzLmJhc2VVcmx9L2FwaS9hbmFseXplLWludGVyZXN0c2AsIHtcbiAgICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgaW50ZXJlc3RzIH0pXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGFuYWx5emUgaW50ZXJlc3RzJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBhbmFseXppbmcgaW50ZXJlc3RzOicsIGVycm9yKTtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4vLyBVSSBDb250cm9sbGVyXG5jbGFzcyBBcHBDb250cm9sbGVyIHtcbiAgICBwcml2YXRlIGFwaVNlcnZpY2U6IEFwaVNlcnZpY2U7XG4gICAgcHJpdmF0ZSBhcnRpY2xlc0NvbnRhaW5lcjogSFRNTEVsZW1lbnQgfCBudWxsO1xuICAgIHByaXZhdGUgaW50ZXJlc3RzSW5wdXQ6IEhUTUxJbnB1dEVsZW1lbnQgfCBudWxsO1xuICAgIHByaXZhdGUgc3VibWl0QnV0dG9uOiBIVE1MRWxlbWVudCB8IG51bGw7XG4gICAgXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuYXBpU2VydmljZSA9IG5ldyBBcGlTZXJ2aWNlKCk7XG4gICAgICAgIHRoaXMuYXJ0aWNsZXNDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYXJ0aWNsZXMtY29udGFpbmVyJyk7XG4gICAgICAgIHRoaXMuaW50ZXJlc3RzSW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW50ZXJlc3RzLWlucHV0JykgYXMgSFRNTElucHV0RWxlbWVudDtcbiAgICAgICAgdGhpcy5zdWJtaXRCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3VibWl0LWludGVyZXN0cycpO1xuICAgICAgICBcbiAgICAgICAgLy8gQWRkIG5hdmlnYXRpb24gdG8gYmFja3Rlc3RpbmcgcGFnZVxuICAgICAgICB0aGlzLmFkZE5hdmlnYXRpb24oKTtcbiAgICAgICAgXG4gICAgICAgIHRoaXMuaW5pdEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgICAgIHRoaXMubG9hZEFydGljbGVzKCk7XG4gICAgfVxuICAgIFxuICAgIHByaXZhdGUgYWRkTmF2aWdhdGlvbigpOiB2b2lkIHtcbiAgICAgICAgLy8gR2V0IHRoZSBoZWFkZXIgZWxlbWVudFxuICAgICAgICBjb25zdCBoZWFkZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdoZWFkZXInKTtcbiAgICAgICAgXG4gICAgICAgIGlmIChoZWFkZXIpIHtcbiAgICAgICAgICAgIC8vIENoZWNrIGlmIG5hdmlnYXRpb24gYWxyZWFkeSBleGlzdHNcbiAgICAgICAgICAgIGxldCBuYXYgPSBoZWFkZXIucXVlcnlTZWxlY3RvcignbmF2Jyk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmICghbmF2KSB7XG4gICAgICAgICAgICAgICAgLy8gQ3JlYXRlIGEgbmV3IG5hdmlnYXRpb24gZWxlbWVudFxuICAgICAgICAgICAgICAgIG5hdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ25hdicpO1xuICAgICAgICAgICAgICAgIG5hdi5zdHlsZS5kaXNwbGF5ID0gJ2ZsZXgnO1xuICAgICAgICAgICAgICAgIG5hdi5zdHlsZS5nYXAgPSAnMXJlbSc7XG4gICAgICAgICAgICAgICAgbmF2LnN0eWxlLmp1c3RpZnlDb250ZW50ID0gJ2NlbnRlcic7XG4gICAgICAgICAgICAgICAgbmF2LnN0eWxlLm1hcmdpbkJvdHRvbSA9ICcxcmVtJztcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBDcmVhdGUgbGlua3NcbiAgICAgICAgICAgICAgICBjb25zdCBob21lTGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgICAgICAgICAgICAgICBob21lTGluay5ocmVmID0gJ2luZGV4Lmh0bWwnO1xuICAgICAgICAgICAgICAgIGhvbWVMaW5rLmNsYXNzTmFtZSA9ICduYXYtYnV0dG9uIGFjdGl2ZSc7XG4gICAgICAgICAgICAgICAgaG9tZUxpbmsudGV4dENvbnRlbnQgPSAnSG9tZSc7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgY29uc3QgYmFja3Rlc3RMaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICAgICAgICAgICAgICAgIGJhY2t0ZXN0TGluay5ocmVmID0gJ2JhY2t0ZXN0aW5nLmh0bWwnO1xuICAgICAgICAgICAgICAgIGJhY2t0ZXN0TGluay5jbGFzc05hbWUgPSAnbmF2LWJ1dHRvbic7XG4gICAgICAgICAgICAgICAgYmFja3Rlc3RMaW5rLnRleHRDb250ZW50ID0gJ0JhY2t0ZXN0aW5nJztcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBBZGQgbGlua3MgdG8gbmF2XG4gICAgICAgICAgICAgICAgbmF2LmFwcGVuZENoaWxkKGhvbWVMaW5rKTtcbiAgICAgICAgICAgICAgICBuYXYuYXBwZW5kQ2hpbGQoYmFja3Rlc3RMaW5rKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBBZGQgbmF2IHRvIGhlYWRlclxuICAgICAgICAgICAgICAgIGhlYWRlci5hcHBlbmRDaGlsZChuYXYpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIHByaXZhdGUgaW5pdEV2ZW50TGlzdGVuZXJzKCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5zdWJtaXRCdXR0b24pIHtcbiAgICAgICAgICAgIHRoaXMuc3VibWl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVJbnRlcmVzdHNTdWJtaXQoKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgcHJpdmF0ZSBhc3luYyBsb2FkQXJ0aWNsZXMoaW50ZXJlc3RzPzogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgICAgIGlmICghdGhpcy5hcnRpY2xlc0NvbnRhaW5lcikgcmV0dXJuO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgTG9hZGluZyBhcnRpY2xlcyB3aXRoIGludGVyZXN0czogJHtpbnRlcmVzdHMgfHwgJ25vbmUnfWApO1xuICAgICAgICAgICAgdGhpcy5hcnRpY2xlc0NvbnRhaW5lci5pbm5lckhUTUwgPSAnPGRpdiBjbGFzcz1cImxvYWRpbmdcIj5Mb2FkaW5nIGFydGljbGVzLi4uPC9kaXY+JztcbiAgICAgICAgICAgIGNvbnN0IGFydGljbGVzID0gYXdhaXQgdGhpcy5hcGlTZXJ2aWNlLmdldEFydGljbGVzKGludGVyZXN0cyk7XG4gICAgICAgICAgICBpZiAoYXJ0aWNsZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5hcnRpY2xlc0NvbnRhaW5lci5pbm5lckhUTUwgPSAnPGRpdiBjbGFzcz1cIm1lc3NhZ2VcIj5ObyBhcnRpY2xlcyBmb3VuZC4gUGxlYXNlIHRyeSB3aXRoIGRpZmZlcmVudCBpbnRlcmVzdHMuPC9kaXY+JztcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgRmV0Y2hlZCAke2FydGljbGVzLmxlbmd0aH0gYXJ0aWNsZXMsIG5vdyBzY29yaW5nIGJhc2VkIG9uIGludGVyZXN0czogJHtpbnRlcmVzdHMgfHwgJ25vbmUnfWApO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBEZWR1cGxpY2F0ZSBhcnRpY2xlcyBieSB0aXRsZVxuICAgICAgICAgICAgY29uc3QgdW5pcXVlQXJ0aWNsZXMgPSB0aGlzLmRlZHVwbGljYXRlQXJ0aWNsZXMoYXJ0aWNsZXMpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coYFJlZHVjZWQgdG8gJHt1bmlxdWVBcnRpY2xlcy5sZW5ndGh9IHVuaXF1ZSBhcnRpY2xlcyBhZnRlciBkZWR1cGxpY2F0aW9uYCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIFNjb3JlIGFsbCBhcnRpY2xlcyB1c2luZyB0aGUgY3VzdG9tIHJhbmtpbmcgc3lzdGVtXG4gICAgICAgICAgICBjb25zdCBzY29yaW5nUHJvbWlzZXMgPSB1bmlxdWVBcnRpY2xlcy5tYXAoYXJ0aWNsZSA9PiBcbiAgICAgICAgICAgICAgICBjdXN0b21SYW5raW5nU3lzdGVtKGFydGljbGUsIGludGVyZXN0cyB8fCAnJywgdW5pcXVlQXJ0aWNsZXMpXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBjb25zdCBzY29yZXMgPSBhd2FpdCBQcm9taXNlLmFsbChzY29yaW5nUHJvbWlzZXMpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBBcHBseSBzY29yZXMgdG8gYXJ0aWNsZXNcbiAgICAgICAgICAgIGNvbnN0IHNjb3JlZEFydGljbGVzID0gdW5pcXVlQXJ0aWNsZXMubWFwKChhcnRpY2xlLCBpbmRleCkgPT4gKHtcbiAgICAgICAgICAgICAgICAuLi5hcnRpY2xlLFxuICAgICAgICAgICAgICAgIHNjb3JlOiBNYXRoLnJvdW5kKHNjb3Jlc1tpbmRleF0pIC8vIFJvdW5kIHRvIG5lYXJlc3QgaW50ZWdlciBmb3IgZGlzcGxheVxuICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgU2NvcmVkICR7c2NvcmVkQXJ0aWNsZXMubGVuZ3RofSBhcnRpY2xlcyB1c2luZyBjdXN0b20gcmFua2luZyBzeXN0ZW1gKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gU29ydCBieSBzY29yZSAoaGlnaGVzdCBmaXJzdClcbiAgICAgICAgICAgIHNjb3JlZEFydGljbGVzLnNvcnQoKGEsIGIpID0+IGIuc2NvcmUgLSBhLnNjb3JlKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQXJ0aWNsZXMgc29ydGVkIGJ5IHNjb3JlXCIpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICB0aGlzLnJlbmRlckFydGljbGVzKHNjb3JlZEFydGljbGVzKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGxvYWRpbmcgYXJ0aWNsZXM6JywgZXJyb3IpO1xuICAgICAgICAgICAgdGhpcy5hcnRpY2xlc0NvbnRhaW5lci5pbm5lckhUTUwgPSAnPGRpdiBjbGFzcz1cImVycm9yXCI+RXJyb3IgbG9hZGluZyBhcnRpY2xlcy4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlci48L2Rpdj4nO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIC8vIEhlbHBlciBtZXRob2QgdG8gZGVkdXBsaWNhdGUgYXJ0aWNsZXMgYmFzZWQgb24gdGl0bGVcbiAgICBwcml2YXRlIGRlZHVwbGljYXRlQXJ0aWNsZXMoYXJ0aWNsZXM6IEFydGljbGVbXSk6IEFydGljbGVbXSB7XG4gICAgICAgIGNvbnN0IHVuaXF1ZVRpdGxlcyA9IG5ldyBTZXQ8c3RyaW5nPigpO1xuICAgICAgICByZXR1cm4gYXJ0aWNsZXMuZmlsdGVyKGFydGljbGUgPT4ge1xuICAgICAgICAgICAgLy8gTm9ybWFsaXplIHRpdGxlIGZvciBjb21wYXJpc29uXG4gICAgICAgICAgICBjb25zdCBub3JtYWxpemVkVGl0bGUgPSBhcnRpY2xlLnRpdGxlLnRvTG93ZXJDYXNlKCkudHJpbSgpO1xuICAgICAgICAgICAgaWYgKHVuaXF1ZVRpdGxlcy5oYXMobm9ybWFsaXplZFRpdGxlKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsgLy8gU2tpcCBkdXBsaWNhdGVcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHVuaXF1ZVRpdGxlcy5hZGQobm9ybWFsaXplZFRpdGxlKTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgXG4gICAgcHJpdmF0ZSByZW5kZXJBcnRpY2xlcyhhcnRpY2xlczogQXJ0aWNsZVtdKTogdm9pZCB7XG4gICAgICAgIGlmICghdGhpcy5hcnRpY2xlc0NvbnRhaW5lcikgcmV0dXJuO1xuICAgICAgICBcbiAgICAgICAgLy8gQ2xlYXIgZXhpc3RpbmcgY29udGVudFxuICAgICAgICB0aGlzLmFydGljbGVzQ29udGFpbmVyLmlubmVySFRNTCA9ICcnO1xuICAgICAgICBcbiAgICAgICAgaWYgKCFhcnRpY2xlcyB8fCBhcnRpY2xlcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHRoaXMuYXJ0aWNsZXNDb250YWluZXIuaW5uZXJIVE1MID0gJzxkaXYgY2xhc3M9XCJuby1yZXN1bHRzXCI+Tm8gYXJ0aWNsZXMgZm91bmQuIFRyeSBhZGp1c3RpbmcgeW91ciBpbnRlcmVzdHMuPC9kaXY+JztcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gRGlzcGxheSBhcnRpY2xlIGNvdW50XG4gICAgICAgIGNvbnN0IGFydGljbGVDb3VudEVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGFydGljbGVDb3VudEVsLmNsYXNzTmFtZSA9ICdhcnRpY2xlLWNvdW50JztcbiAgICAgICAgYXJ0aWNsZUNvdW50RWwudGV4dENvbnRlbnQgPSBgRGlzcGxheWluZyAke2FydGljbGVzLmxlbmd0aH0gdW5pcXVlIGFydGljbGVzYDtcbiAgICAgICAgdGhpcy5hcnRpY2xlc0NvbnRhaW5lci5hcHBlbmRDaGlsZChhcnRpY2xlQ291bnRFbCk7XG4gICAgICAgIFxuICAgICAgICAvLyBSZW5kZXIgZWFjaCBhcnRpY2xlXG4gICAgICAgIGFydGljbGVzLmZvckVhY2goYXJ0aWNsZSA9PiB7XG4gICAgICAgICAgICBjb25zdCBjYXJkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICBjYXJkLmNsYXNzTmFtZSA9ICdhcnRpY2xlLWNhcmQnO1xuICAgICAgICAgICAgY2FyZC5kYXRhc2V0LmlkID0gYXJ0aWNsZS5pZCB8fCAnJztcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gQWRkIHNjb3JlIGJhZGdlXG4gICAgICAgICAgICBjb25zdCBzY29yZUNsYXNzID0gdGhpcy5nZXRTY29yZUNsYXNzKGFydGljbGUuc2NvcmUpO1xuICAgICAgICAgICAgY29uc3Qgc2NvcmVCYWRnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgc2NvcmVCYWRnZS5jbGFzc05hbWUgPSBgc2NvcmUtYmFkZ2UgJHtzY29yZUNsYXNzfWA7XG4gICAgICAgICAgICBzY29yZUJhZGdlLnRleHRDb250ZW50ID0gYXJ0aWNsZS5zY29yZS50b1N0cmluZygpO1xuICAgICAgICAgICAgY2FyZC5hcHBlbmRDaGlsZChzY29yZUJhZGdlKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gQWRkIHRpdGxlXG4gICAgICAgICAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gzJyk7XG4gICAgICAgICAgICB0aXRsZS5jbGFzc05hbWUgPSAnYXJ0aWNsZS10aXRsZSc7XG4gICAgICAgICAgICB0aXRsZS50ZXh0Q29udGVudCA9IGFydGljbGUudGl0bGU7XG4gICAgICAgICAgICBjYXJkLmFwcGVuZENoaWxkKHRpdGxlKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gQWRkIHN1YmplY3QgaWYgYXZhaWxhYmxlXG4gICAgICAgICAgICBpZiAoYXJ0aWNsZS5zdWJqZWN0KSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgc3ViamVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgICAgIHN1YmplY3QuY2xhc3NOYW1lID0gJ2FydGljbGUtc3ViamVjdCc7XG4gICAgICAgICAgICAgICAgc3ViamVjdC50ZXh0Q29udGVudCA9IGFydGljbGUuc3ViamVjdDtcbiAgICAgICAgICAgICAgICBjYXJkLmFwcGVuZENoaWxkKHN1YmplY3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBBZGQgc3VtbWFyeSBpZiBhdmFpbGFibGVcbiAgICAgICAgICAgIGlmIChhcnRpY2xlLnN1bW1hcnkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBzdW1tYXJ5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICAgICAgc3VtbWFyeS5jbGFzc05hbWUgPSAnYXJ0aWNsZS1zdW1tYXJ5JztcbiAgICAgICAgICAgICAgICBzdW1tYXJ5LmlubmVySFRNTCA9IHRoaXMuZm9ybWF0U3VtbWFyeShcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50cnVuY2F0ZVRleHQoYXJ0aWNsZS5zdW1tYXJ5LCAyMDApXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICBjYXJkLmFwcGVuZENoaWxkKHN1bW1hcnkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBBZGQgc2NvcmUgY29tcG9uZW50cyBpZiBhdmFpbGFibGVcbiAgICAgICAgICAgIGlmIChhcnRpY2xlLnNjb3JlQ29tcG9uZW50cykge1xuICAgICAgICAgICAgICAgIGNvbnN0IHNjb3JlRGV0YWlscyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgICAgIHNjb3JlRGV0YWlscy5jbGFzc05hbWUgPSAnc2NvcmUtZGV0YWlscyc7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgY29uc3QgZGV0YWlsc0xpc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd1bCcpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC8vIEZpeCB0aGUgVFMyNTMxIGVycm9yIGJ5IGFkZGluZyBhIG51bGwgY2hlY2sgZm9yIHNjb3JlRGV0YWlsc1xuICAgICAgICAgICAgICAgIGNvbnN0IHNjb3JlRGV0YWlsc0J1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgICAgICAgICAgICAgIHNjb3JlRGV0YWlsc0J1dHRvbi5jbGFzc05hbWUgPSAnc2NvcmUtZGV0YWlscy1idG4nO1xuICAgICAgICAgICAgICAgIHNjb3JlRGV0YWlsc0J1dHRvbi50ZXh0Q29udGVudCA9ICdTaG93IHNjb3JlIGRldGFpbHMnO1xuICAgICAgICAgICAgICAgIHNjb3JlRGV0YWlsc0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNjb3JlRGV0YWlscyAmJiBzY29yZURldGFpbHMuY2xhc3NMaXN0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzY29yZURldGFpbHMuY2xhc3NMaXN0LnRvZ2dsZSgndmlzaWJsZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2NvcmVEZXRhaWxzQnV0dG9uLnRleHRDb250ZW50ID0gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2NvcmVEZXRhaWxzLmNsYXNzTGlzdC5jb250YWlucygndmlzaWJsZScpID8gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ0hpZGUgc2NvcmUgZGV0YWlscycgOiAnU2hvdyBzY29yZSBkZXRhaWxzJztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC8vIEFkZCBzY29yZSBicmVha2Rvd25cbiAgICAgICAgICAgICAgICBPYmplY3QuZW50cmllcyhhcnRpY2xlLnNjb3JlQ29tcG9uZW50cykuZm9yRWFjaCgoW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBsYWJlbCA9IGtleS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIGtleS5zbGljZSgxKTtcbiAgICAgICAgICAgICAgICAgICAgaXRlbS5pbm5lckhUTUwgPSBgPHN0cm9uZz4ke2xhYmVsfTo8L3N0cm9uZz4gJHt2YWx1ZX1gO1xuICAgICAgICAgICAgICAgICAgICBkZXRhaWxzTGlzdC5hcHBlbmRDaGlsZChpdGVtKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBzY29yZURldGFpbHMuYXBwZW5kQ2hpbGQoZGV0YWlsc0xpc3QpO1xuICAgICAgICAgICAgICAgIGNhcmQuYXBwZW5kQ2hpbGQoc2NvcmVEZXRhaWxzQnV0dG9uKTtcbiAgICAgICAgICAgICAgICBjYXJkLmFwcGVuZENoaWxkKHNjb3JlRGV0YWlscyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIEFkZCB2aWV3IGJ1dHRvblxuICAgICAgICAgICAgY29uc3Qgdmlld0J1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgICAgICAgICAgdmlld0J1dHRvbi5jbGFzc05hbWUgPSAndmlldy1hcnRpY2xlLWJ0bic7XG4gICAgICAgICAgICB2aWV3QnV0dG9uLnRleHRDb250ZW50ID0gJ1ZpZXcgQXJ0aWNsZSc7XG4gICAgICAgICAgICB2aWV3QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChhcnRpY2xlLmlkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudmlld0FydGljbGVEZXRhaWxzKGFydGljbGUuaWQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgY2FyZC5hcHBlbmRDaGlsZCh2aWV3QnV0dG9uKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gQWRkIHRoZSBjYXJkIHRvIHRoZSBjb250YWluZXJcbiAgICAgICAgICAgIHRoaXMuYXJ0aWNsZXNDb250YWluZXIuYXBwZW5kQ2hpbGQoY2FyZCk7XG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgLy8gQWRkIGNsaWNrIGxpc3RlbmVycyB0byBlYWNoIGFydGljbGUgY2FyZCBmb3IgZXhwYW5kaW5nXG4gICAgICAgIGNvbnN0IGNhcmRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmFydGljbGUtY2FyZCcpO1xuICAgICAgICBjYXJkcy5mb3JFYWNoKGNhcmQgPT4ge1xuICAgICAgICAgICAgY2FyZC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG4gICAgICAgICAgICAgICAgLy8gRml4IHRoZSBUUzI1MzEgZXJyb3IgYnkgYWRkaW5nIGEgbnVsbCBjaGVjayBmb3IgY2FyZCBhbmQgZS50YXJnZXRcbiAgICAgICAgICAgICAgICBpZiAoY2FyZCAmJiBjYXJkLmNsYXNzTGlzdCAmJiBlLnRhcmdldCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB0YXJnZXQgPSBlLnRhcmdldCBhcyBIVE1MRWxlbWVudDtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaXNCdXR0b24gPSB0YXJnZXQudGFnTmFtZSA9PT0gJ0JVVFRPTic7XG4gICAgICAgICAgICAgICAgICAgIGlmICghaXNCdXR0b24pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcmQuY2xhc3NMaXN0LnRvZ2dsZSgnZXhwYW5kZWQnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgXG4gICAgcHJpdmF0ZSBhc3luYyB2aWV3QXJ0aWNsZURldGFpbHMoYXJ0aWNsZUlkOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAgICAgaWYgKCF0aGlzLmFydGljbGVzQ29udGFpbmVyKSByZXR1cm47XG4gICAgICAgIFxuICAgICAgICB0aGlzLmFydGljbGVzQ29udGFpbmVyLmlubmVySFRNTCA9ICc8ZGl2IGNsYXNzPVwibG9hZGluZ1wiPkxvYWRpbmcgYXJ0aWNsZSBkZXRhaWxzLi4uPC9kaXY+JztcbiAgICAgICAgXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBhcnRpY2xlRGV0YWlsID0gYXdhaXQgdGhpcy5hcGlTZXJ2aWNlLmdldEFydGljbGVEZXRhaWxzKGFydGljbGVJZCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmICghYXJ0aWNsZURldGFpbCkge1xuICAgICAgICAgICAgICAgIHRoaXMuYXJ0aWNsZXNDb250YWluZXIuaW5uZXJIVE1MID0gJzxkaXYgY2xhc3M9XCJlcnJvclwiPkFydGljbGUgbm90IGZvdW5kPC9kaXY+JztcbiAgICAgICAgICAgICAgICAvLyBBZGQgYSBiYWNrIGJ1dHRvbiBldmVuIHdoZW4gYXJ0aWNsZSBpcyBub3QgZm91bmRcbiAgICAgICAgICAgICAgICBjb25zdCBiYWNrQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgICAgICAgICAgICAgYmFja0J1dHRvbi50ZXh0Q29udGVudCA9ICdCYWNrIHRvIEFydGljbGVzJztcbiAgICAgICAgICAgICAgICBiYWNrQnV0dG9uLmNsYXNzTmFtZSA9ICdiYWNrLWJ1dHRvbic7XG4gICAgICAgICAgICAgICAgYmFja0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaW50ZXJlc3RzID0gdGhpcy5pbnRlcmVzdHNJbnB1dD8udmFsdWUgfHwgJyc7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubG9hZEFydGljbGVzKGludGVyZXN0cyk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgdGhpcy5hcnRpY2xlc0NvbnRhaW5lci5hcHBlbmRDaGlsZChiYWNrQnV0dG9uKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHRoaXMucmVuZGVyQXJ0aWNsZURldGFpbChhcnRpY2xlRGV0YWlsKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGxvYWRpbmcgYXJ0aWNsZSBkZXRhaWxzOicsIGVycm9yKTtcbiAgICAgICAgICAgIHRoaXMuYXJ0aWNsZXNDb250YWluZXIuaW5uZXJIVE1MID0gJzxkaXYgY2xhc3M9XCJlcnJvclwiPkVycm9yIGxvYWRpbmcgYXJ0aWNsZSBkZXRhaWxzLiBQbGVhc2UgdHJ5IGFnYWluIGxhdGVyLjwvZGl2Pic7XG4gICAgICAgICAgICAvLyBBZGQgYSBiYWNrIGJ1dHRvbiBldmVuIHdoZW4gdGhlcmUncyBhbiBlcnJvclxuICAgICAgICAgICAgY29uc3QgYmFja0J1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgICAgICAgICAgYmFja0J1dHRvbi50ZXh0Q29udGVudCA9ICdCYWNrIHRvIEFydGljbGVzJztcbiAgICAgICAgICAgIGJhY2tCdXR0b24uY2xhc3NOYW1lID0gJ2JhY2stYnV0dG9uJztcbiAgICAgICAgICAgIGJhY2tCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgaW50ZXJlc3RzID0gdGhpcy5pbnRlcmVzdHNJbnB1dD8udmFsdWUgfHwgJyc7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2FkQXJ0aWNsZXMoaW50ZXJlc3RzKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5hcnRpY2xlc0NvbnRhaW5lci5hcHBlbmRDaGlsZChiYWNrQnV0dG9uKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICBwcml2YXRlIHJlbmRlckFydGljbGVEZXRhaWwoYXJ0aWNsZTogQXJ0aWNsZURldGFpbCk6IHZvaWQge1xuICAgICAgICBpZiAoIXRoaXMuYXJ0aWNsZXNDb250YWluZXIpIHJldHVybjtcbiAgICAgICAgXG4gICAgICAgIHRoaXMuYXJ0aWNsZXNDb250YWluZXIuaW5uZXJIVE1MID0gJyc7XG4gICAgICAgIFxuICAgICAgICBjb25zdCBhcnRpY2xlRGV0YWlsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGFydGljbGVEZXRhaWwuY2xhc3NOYW1lID0gJ2FydGljbGUtZGV0YWlsJztcbiAgICAgICAgXG4gICAgICAgIC8vIENyZWF0ZSBhcnRpY2xlIEhUTUwgY29udGVudFxuICAgICAgICBsZXQgYXJ0aWNsZUNvbnRlbnQgPSBgXG4gICAgICAgICAgICA8aDI+JHt0aGlzLmVzY2FwZUh0bWwoYXJ0aWNsZS50aXRsZSl9PC9oMj5cbiAgICAgICAgYDtcbiAgICAgICAgXG4gICAgICAgIC8vIEFkZCB0aGUgZnVsbCBhcnRpY2xlIGNvbnRlbnQgaWYgYXZhaWxhYmxlLCBvdGhlcndpc2UgZmFsbCBiYWNrIHRvIHN1bW1hcnlcbiAgICAgICAgaWYgKGFydGljbGUuY29udGVudCkge1xuICAgICAgICAgICAgLy8gQ2hlY2sgaWYgY29udGVudCBhcHBlYXJzIHRvIGJlIEhUTUwgKGNvbnRhaW5zIHRhZ3MpXG4gICAgICAgICAgICBpZiAoYXJ0aWNsZS5jb250ZW50LmluY2x1ZGVzKCc8JykgJiYgYXJ0aWNsZS5jb250ZW50LmluY2x1ZGVzKCc+JykpIHtcbiAgICAgICAgICAgICAgICAvLyBJdCdzIEhUTUwsIGluc2VydCBkaXJlY3RseSB3aXRoIHNhbml0aXphdGlvblxuICAgICAgICAgICAgICAgIGFydGljbGVDb250ZW50ICs9IGBcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImFydGljbGUtY29udGVudFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgJHt0aGlzLnNhbml0aXplSHRtbChhcnRpY2xlLmNvbnRlbnQpfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICBgO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBJdCdzIG1hcmtkb3duIG9yIHBsYWluIHRleHQsIGZvcm1hdCB3aXRoIHBhcmFncmFwaHNcbiAgICAgICAgICAgICAgICBhcnRpY2xlQ29udGVudCArPSBgXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhcnRpY2xlLWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICR7dGhpcy5mb3JtYXRTdW1tYXJ5KGFydGljbGUuY29udGVudCl9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIGA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBObyBjb250ZW50LCB1c2Ugc3VtbWFyeVxuICAgICAgICAgICAgYXJ0aWNsZUNvbnRlbnQgKz0gYFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhcnRpY2xlLXN1bW1hcnlcIj5cbiAgICAgICAgICAgICAgICAgICAgJHt0aGlzLmZvcm1hdFN1bW1hcnkoYXJ0aWNsZS5zdW1tYXJ5KX1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIGA7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIEFkZCBhY3Rpb24gYnV0dG9uc1xuICAgICAgICBhcnRpY2xlQ29udGVudCArPSBgXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYXJ0aWNsZS1hY3Rpb25zXCI+XG4gICAgICAgICAgICAgICAgPGEgaHJlZj1cIiR7YXJ0aWNsZS5saW5rfVwiIHRhcmdldD1cIl9ibGFua1wiIGNsYXNzPVwiYXJ0aWNsZS1saW5rXCI+VmlldyBPcmlnaW5hbDwvYT5cbiAgICAgICAgICAgICAgICA8YnV0dG9uIGlkPVwiYmFjay10by1hcnRpY2xlc1wiIGNsYXNzPVwiYmFjay1idXR0b25cIj5CYWNrIHRvIEFydGljbGVzPC9idXR0b24+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgYDtcbiAgICAgICAgXG4gICAgICAgIGFydGljbGVEZXRhaWwuaW5uZXJIVE1MID0gYXJ0aWNsZUNvbnRlbnQ7XG4gICAgICAgIFxuICAgICAgICAvLyBBZGQgYmFjayBidXR0b24gY2xpY2sgZXZlbnRcbiAgICAgICAgY29uc3QgYmFja0J1dHRvbiA9IGFydGljbGVEZXRhaWwucXVlcnlTZWxlY3RvcignI2JhY2stdG8tYXJ0aWNsZXMnKTtcbiAgICAgICAgaWYgKGJhY2tCdXR0b24pIHtcbiAgICAgICAgICAgIGJhY2tCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgaW50ZXJlc3RzID0gdGhpcy5pbnRlcmVzdHNJbnB1dD8udmFsdWUgfHwgJyc7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2FkQXJ0aWNsZXMoaW50ZXJlc3RzKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICB0aGlzLmFydGljbGVzQ29udGFpbmVyLmFwcGVuZENoaWxkKGFydGljbGVEZXRhaWwpO1xuICAgIH1cbiAgICBcbiAgICBwcml2YXRlIGhhbmRsZUludGVyZXN0c1N1Ym1pdCgpOiB2b2lkIHtcbiAgICAgICAgaWYgKCF0aGlzLmludGVyZXN0c0lucHV0KSByZXR1cm47XG4gICAgICAgIFxuICAgICAgICBjb25zdCBpbnRlcmVzdHMgPSB0aGlzLmludGVyZXN0c0lucHV0LnZhbHVlLnRyaW0oKTtcbiAgICAgICAgY29uc29sZS5sb2coYEludGVyZXN0cyBzdWJtaXR0ZWQ6IFwiJHtpbnRlcmVzdHN9XCJgKTtcbiAgICAgICAgXG4gICAgICAgIC8vIERpc2FibGUgdGhlIGJ1dHRvbiBkdXJpbmcgbG9hZGluZ1xuICAgICAgICBpZiAodGhpcy5zdWJtaXRCdXR0b24pIHtcbiAgICAgICAgICAgIHRoaXMuc3VibWl0QnV0dG9uLnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCAndHJ1ZScpO1xuICAgICAgICAgICAgdGhpcy5zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSAnTG9hZGluZy4uLic7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIFNob3cgbG9hZGluZyBpbmRpY2F0b3IgaW4gYXJ0aWNsZXMgY29udGFpbmVyXG4gICAgICAgIGlmICh0aGlzLmFydGljbGVzQ29udGFpbmVyKSB7XG4gICAgICAgICAgICB0aGlzLmFydGljbGVzQ29udGFpbmVyLmlubmVySFRNTCA9ICc8ZGl2IGNsYXNzPVwibG9hZGluZ1wiPlNjb3JpbmcgYXJ0aWNsZXMgYmFzZWQgb24geW91ciBpbnRlcmVzdHMuLi48L2Rpdj4nO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBMb2FkIGFydGljbGVzIHdpdGggaW50ZXJlc3RzXG4gICAgICAgIHRoaXMubG9hZEFydGljbGVzKGludGVyZXN0cylcbiAgICAgICAgICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgICAgICAgICAgICAvLyBSZS1lbmFibGUgdGhlIGJ1dHRvbiB3aGVuIGRvbmVcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5zdWJtaXRCdXR0b24pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdWJtaXRCdXR0b24ucmVtb3ZlQXR0cmlidXRlKCdkaXNhYmxlZCcpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnN1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9ICdVcGRhdGUgSW50ZXJlc3RzJztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICB9XG4gICAgXG4gICAgcHJpdmF0ZSBmb3JtYXRTdW1tYXJ5KHN1bW1hcnk6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgICAgIC8vIFJlcGxhY2UgbmV3bGluZXMgd2l0aCBwYXJhZ3JhcGggYnJlYWtzXG4gICAgICAgIHJldHVybiBzdW1tYXJ5XG4gICAgICAgICAgICAuc3BsaXQoJ1xcblxcbicpXG4gICAgICAgICAgICAuZmlsdGVyKHBhcmFncmFwaCA9PiBwYXJhZ3JhcGgudHJpbSgpLmxlbmd0aCA+IDApXG4gICAgICAgICAgICAubWFwKHBhcmFncmFwaCA9PiBgPHA+JHt0aGlzLmVzY2FwZUh0bWwocGFyYWdyYXBoKX08L3A+YClcbiAgICAgICAgICAgIC5qb2luKCcnKTtcbiAgICB9XG4gICAgXG4gICAgcHJpdmF0ZSBlc2NhcGVIdG1sKHVuc2FmZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHVuc2FmZVxuICAgICAgICAgICAgLnJlcGxhY2UoLyYvZywgXCImYW1wO1wiKVxuICAgICAgICAgICAgLnJlcGxhY2UoLzwvZywgXCImbHQ7XCIpXG4gICAgICAgICAgICAucmVwbGFjZSgvPi9nLCBcIiZndDtcIilcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cIi9nLCBcIiZxdW90O1wiKVxuICAgICAgICAgICAgLnJlcGxhY2UoLycvZywgXCImIzAzOTtcIik7XG4gICAgfVxuICAgIFxuICAgIC8vIEhlbHBlciB0byB0cnVuY2F0ZSB0ZXh0IHdpdGggZWxsaXBzaXNcbiAgICBwcml2YXRlIHRydW5jYXRlVGV4dCh0ZXh0OiBzdHJpbmcsIG1heExlbmd0aDogbnVtYmVyKTogc3RyaW5nIHtcbiAgICAgICAgaWYgKCF0ZXh0KSByZXR1cm4gJyc7XG4gICAgICAgIGlmICh0ZXh0Lmxlbmd0aCA8PSBtYXhMZW5ndGgpIHJldHVybiB0aGlzLmVzY2FwZUh0bWwodGV4dCk7XG4gICAgICAgIHJldHVybiB0aGlzLmVzY2FwZUh0bWwodGV4dC5zdWJzdHJpbmcoMCwgbWF4TGVuZ3RoKSkgKyAnLi4uJztcbiAgICB9XG5cbiAgICAvLyBCYXNpYyBIVE1MIHNhbml0aXplciB0byBhdm9pZCBYU1Mgd2hpbGUgYWxsb3dpbmcgZm9ybWF0dGVkIGNvbnRlbnRcbiAgICBwcml2YXRlIHNhbml0aXplSHRtbChodG1sOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgICAgICAvLyBDcmVhdGUgYSB0ZW1wb3JhcnkgZWxlbWVudFxuICAgICAgICBjb25zdCB0ZW1wRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHRlbXBEaXYuaW5uZXJIVE1MID0gaHRtbDtcbiAgICAgICAgXG4gICAgICAgIC8vIFJlbW92ZSBwb3RlbnRpYWxseSBkYW5nZXJvdXMgZWxlbWVudHMvYXR0cmlidXRlc1xuICAgICAgICBjb25zdCBzY3JpcHRzID0gdGVtcERpdi5xdWVyeVNlbGVjdG9yQWxsKCdzY3JpcHQnKTtcbiAgICAgICAgc2NyaXB0cy5mb3JFYWNoKHNjcmlwdCA9PiBzY3JpcHQucmVtb3ZlKCkpO1xuICAgICAgICBcbiAgICAgICAgY29uc3QgaWZyYW1lcyA9IHRlbXBEaXYucXVlcnlTZWxlY3RvckFsbCgnaWZyYW1lJyk7XG4gICAgICAgIGlmcmFtZXMuZm9yRWFjaChpZnJhbWUgPT4gaWZyYW1lLnJlbW92ZSgpKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFJlbW92ZSBvbiogYXR0cmlidXRlc1xuICAgICAgICBjb25zdCBhbGxFbGVtZW50cyA9IHRlbXBEaXYucXVlcnlTZWxlY3RvckFsbCgnKicpO1xuICAgICAgICBhbGxFbGVtZW50cy5mb3JFYWNoKGVsID0+IHtcbiAgICAgICAgICAgIEFycmF5LmZyb20oZWwuYXR0cmlidXRlcykuZm9yRWFjaChhdHRyID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoYXR0ci5uYW1lLnN0YXJ0c1dpdGgoJ29uJykgfHwgYXR0ci5uYW1lID09PSAnaHJlZicgJiYgYXR0ci52YWx1ZS5zdGFydHNXaXRoKCdqYXZhc2NyaXB0OicpKSB7XG4gICAgICAgICAgICAgICAgICAgIGVsLnJlbW92ZUF0dHJpYnV0ZShhdHRyLm5hbWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIHJldHVybiB0ZW1wRGl2LmlubmVySFRNTDtcbiAgICB9XG5cbiAgICBwcml2YXRlIGdldFNjb3JlQ2xhc3Moc2NvcmU6IG51bWJlcik6IHN0cmluZyB7XG4gICAgICAgIGlmIChzY29yZSA+IDkwKSByZXR1cm4gJ2hpZ2gtc2NvcmUnO1xuICAgICAgICBpZiAoc2NvcmUgPiA3NSkgcmV0dXJuICdtZWRpdW0tc2NvcmUnO1xuICAgICAgICBpZiAoc2NvcmUgPiA2MCkgcmV0dXJuICdsb3ctc2NvcmUnO1xuICAgICAgICByZXR1cm4gJ25vLXNjb3JlJztcbiAgICB9XG59XG5cbi8vIEluaXRpYWxpemUgdGhlIGFwcCB3aGVuIERPTSBpcyBsb2FkZWRcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7XG4gICAgbmV3IEFwcENvbnRyb2xsZXIoKTtcbn0pOyAiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJpIiwibGVuZ3RoIiwibW9kdWxlc1RvRG9tIiwibGlzdCIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJpdGVtIiwiaWQiLCJiYXNlIiwiY291bnQiLCJjb25jYXQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsIm1lZGlhIiwic291cmNlTWFwIiwic3VwcG9ydHMiLCJsYXllciIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsInB1c2giLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwiYXBwZW5kQ2hpbGQiLCJkb2N1bWVudCIsImNyZWF0ZVRleHROb2RlIiwiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiY29udGVudCIsIm5lZWRMYXllciIsImpvaW4iLCJtb2R1bGVzIiwiZGVkdXBlIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwiaW5zZXJ0IiwibWVtbyIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIm5jIiwibG9jYWxzIiwicHJlcHJvY2VzcyIsInRleHQiLCJ0b0xvd2VyQ2FzZSIsInJlcGxhY2UiLCJzcGxpdCIsImZpbHRlciIsIkJvb2xlYW4iLCJsZXZlbnNodGVpblNpbWlsYXJpdHkiLCJiIiwibSIsImRwIiwiQXJyYXkiLCJmcm9tIiwiZmlsbCIsImoiLCJjb3N0IiwiTWF0aCIsIm1pbiIsIm1heCIsImphY2NhcmRTaW1pbGFyaXR5IiwiYVRva2VucyIsImJUb2tlbnMiLCJzZXRBIiwiU2V0Iiwic2V0QiIsImludGVyc2VjdGlvbiIsIngiLCJoYXMiLCJ1bmlvbiIsInRva2VuT3ZlcmxhcCIsIm1hdGNoIiwid29yZCIsImluY2x1ZGVzIiwiY29tcHV0ZSIsInNtYWxsIiwibGFyZ2UiLCJzbWFsbENsZWFuIiwibGFyZ2VDbGVhbiIsInNjb3JlIiwicm91bmQiLCJiYXNlVXJsIiwibG9jYXRpb24iLCJob3N0bmFtZSIsImNvbnNvbGUiLCJsb2ciLCJnZXRBcnRpY2xlcyIsImludGVyZXN0cyIsInF1ZXJ5UGFyYW1zIiwidXJsIiwiZmV0Y2giLCJyZXNwb25zZSIsIm9rIiwiZXJyb3IiLCJzdGF0dXMiLCJzdGF0dXNUZXh0IiwianNvbiIsImFydGljbGUiLCJ0aXRsZSIsInN1YmplY3QiLCJsaW5rIiwic3VtbWFyeSIsImdldEFydGljbGVEZXRhaWxzIiwiYXJ0aWNsZUlkIiwiYW5hbHl6ZUludGVyZXN0cyIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiYXBpU2VydmljZSIsIkFwaVNlcnZpY2UiLCJhcnRpY2xlc0NvbnRhaW5lciIsImdldEVsZW1lbnRCeUlkIiwiaW50ZXJlc3RzSW5wdXQiLCJzdWJtaXRCdXR0b24iLCJhZGROYXZpZ2F0aW9uIiwiaW5pdEV2ZW50TGlzdGVuZXJzIiwibG9hZEFydGljbGVzIiwiaGVhZGVyIiwibmF2IiwiZGlzcGxheSIsImdhcCIsImp1c3RpZnlDb250ZW50IiwibWFyZ2luQm90dG9tIiwiaG9tZUxpbmsiLCJocmVmIiwiY2xhc3NOYW1lIiwidGV4dENvbnRlbnQiLCJiYWNrdGVzdExpbmsiLCJhZGRFdmVudExpc3RlbmVyIiwiaGFuZGxlSW50ZXJlc3RzU3VibWl0IiwiaW5uZXJIVE1MIiwiYXJ0aWNsZXMiLCJkZWR1cGxpY2F0ZUFydGljbGVzIiwic2NvcmluZ1Byb21pc2VzIiwidXNlckludGVyZXN0cyIsImFydGljbGVDb2xsZWN0aW9uIiwiYmFzZVNjb3JlIiwiZmxvb3IiLCJyYW5kb20iLCJ0cmltIiwiaW50ZXJlc3RUZXJtcyIsInRlcm0iLCJhcnRpY2xlU3VtbWFyeSIsInN1bW1hcnlTb3VyY2UiLCJzdW1tYXJ5UGF0aCIsInN1bW1hcnlEYXRhIiwic3Vic3RyaW5nIiwid2FybiIsInRpdGxlVGV4dCIsInN1YmplY3RUZXh0IiwiYXJ0aWNsZUZ1bGxUZXh0Iiwic2ltaWxhcml0eVNjb3JlIiwicmF3U2ltaWxhcml0eSIsIlNpbWlsYXJpdHlTY29yZXIiLCJ0b0ZpeGVkIiwiaW50ZXJlc3RUb2tlbnMiLCJhcnRpY2xlVG9rZW5zIiwibGV2U2ltIiwic2xpY2UiLCJqYWNTaW0iLCJ0b2tTaW0iLCJjb250ZXh0dWFsU2NvcmUiLCJ0aXRsZUltcG9ydGFuY2UiLCJzb21lIiwidGl0bGVTaW1pbGFyaXR5Iiwic3ViamVjdFNpbWlsYXJpdHkiLCJ3ZWlnaHRlZENvbnRleHRTaW1pbGFyaXR5IiwiZnJlc2huZXNzU2NvcmUiLCJiYXNlRnJlc2huZXNzIiwicGFyc2VJbnQiLCJ0aXRsZVdvcmRzIiwidyIsImZvckVhY2giLCJvY2N1cnJlbmNlQ291bnQiLCJ0IiwidW5pcXVlbmVzc0JvbnVzIiwiZmluYWxTY29yZSIsInNjb3JlQnJlYWtkb3duIiwic2ltaWxhcml0eSIsImNvbnRleHR1YWwiLCJmcmVzaG5lc3MiLCJmaW5hbCIsInNjb3JlQ29tcG9uZW50cyIsImN1c3RvbVJhbmtpbmdTeXN0ZW0iLCJQcm9taXNlIiwiYWxsIiwic2NvcmVkQXJ0aWNsZXMiLCJzb3J0IiwicmVuZGVyQXJ0aWNsZXMiLCJ1bmlxdWVUaXRsZXMiLCJub3JtYWxpemVkVGl0bGUiLCJhZGQiLCJhcnRpY2xlQ291bnRFbCIsImNhcmQiLCJkYXRhc2V0Iiwic2NvcmVDbGFzcyIsImdldFNjb3JlQ2xhc3MiLCJzY29yZUJhZGdlIiwiZm9ybWF0U3VtbWFyeSIsInRydW5jYXRlVGV4dCIsImNsYXNzTGlzdCIsInRvZ2dsZSIsImNvbnRhaW5zIiwiZW50cmllcyIsInZhbHVlIiwibGFiZWwiLCJjaGFyQXQiLCJ0b1VwcGVyQ2FzZSIsInZpZXdCdXR0b24iLCJ2aWV3QXJ0aWNsZURldGFpbHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwidGFnTmFtZSIsImFydGljbGVEZXRhaWwiLCJyZW5kZXJBcnRpY2xlRGV0YWlsIiwiYmFja0J1dHRvbiIsImFydGljbGVDb250ZW50IiwiZXNjYXBlSHRtbCIsInNhbml0aXplSHRtbCIsImZpbmFsbHkiLCJyZW1vdmVBdHRyaWJ1dGUiLCJwYXJhZ3JhcGgiLCJ1bnNhZmUiLCJtYXhMZW5ndGgiLCJodG1sIiwidGVtcERpdiIsInNjcmlwdCIsImlmcmFtZSIsImVsIiwiYXR0ciIsIm5hbWUiLCJzdGFydHNXaXRoIiwiQXBwQ29udHJvbGxlciJdLCJzb3VyY2VSb290IjoiIn0=